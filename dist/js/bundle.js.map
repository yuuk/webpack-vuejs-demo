{"version":3,"sources":["webpack:///js/bundle.js","webpack:///webpack/bootstrap b22c7c47a6a430860fce","webpack:///./src/entry.js","webpack:///./src/js/sub.js","webpack:///./src/js/vue.js","webpack:///./src/components/test.vue","webpack:///test.vue","webpack:///./src/data/product.json","webpack:///./src/components/test.vue?c49a"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_test","_test2","el","components","app","Object","defineProperty","value","yuuk","name","age","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","constructor","global","factory","undefined","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","i","length","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind$1","fn","ctx","l","arguments","apply","toArray","list","start","ret","Array","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","this","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","map","processFilterArg","dir","filters","push","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","inlineFilters","filterRE$1","appendWithTransition","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","selector","document","querySelector","warn","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on$1","event","addEventListener","off","removeEventListener","setClass","cls","isIE9","SVGElement","setAttribute","className","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","content","DocumentFragment","hasChildNodes","trimNode","createDocumentFragment","createElement","lastChild","data","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__vue_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","path","coerceProp","assertProp","raw","required","expectedType","type","valid","String","Boolean","Function","isArray","formatType","formatValue","validator","coerce","charAt","prototype","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","assertAsset","Dep","uid$3","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","getter","setter","convertAllProperties","property","getOwnPropertyDescriptor","childOb","depend","e","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_unlinkFn","_context","_scope","_frag","children","$options","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","emit","watcher","run","_maxUpdateCount","splice","pushWatcher","user","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","prevError","twoWay","queued","shallow","traverse","normalize","propCache","prefix","camel","upper","testEl","style","prefixed","prefixes","camelPrefixes","keyFilter","handler","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","getValue","multi","init","selected","_value","indexOf$1","isRealTemplate","stringToFragment","templateString","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","suffix","innerHTML","nodeToFragment","textContent","clonedNode","cloneNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__vfrag__","withTransition","method","callHook","attach","shouldCallRemove","self","destroyChild","detach","destroy","$destroy","FragmentFactory","cid","cacheId","outerHTML","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","offsetWidth","getClientRects","stringToObject","split","contains$1","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","makePropsLinkFn","_props","getDefault","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","publicDirectives","fragClone","$eval","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interp","rawName","rawValue","dirDef","parseModifiers","modifierRE","bind","some","transitionRE","bindRE","on","argRE","makeNodeLinkFn","directives","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","propsData","optionsDataFn","optionsData","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","$on","registerCallbacks","hash","handlers","j","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","_ref","refs","_compile","_initElement","contentLinkFn","rootLinker","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","reason","globalAPI","createClass","util","compiler","parsers","text$1","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","definition","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","shouldPropagate","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","reduce","concat","$value","$key","orderBy","sortKey","reverse","order","extractFragment","main","__v_selected","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","entry","newer","older","shift","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","hasConsole","msg","Error","stack","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","paramAttributes","arrayProto","addSub","sub","removeSub","addDep","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","depIds","cloak","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","SLOT","FOR","IF","unbind","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","modelProps","true-value","false-value","invalid","modelProp","model","__v_model","listener","setAttributeNS","esc","tab","enter","space","delete","up","right","down","acceptStatement","iframeBind","contentWindow","stop","prevent","reset","checkbox","getBooleanValue","checked","_trueValue","_falseValue","params","_watcher","afterBind","select","forceUpdate","multiple","initValue","selectedIndex","radio","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","checkFilters","hasRead","hasWrite","_unbind","show","nextElementSibling","elseEl","toggle","display","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","rect","t","placeholder","vIf","elseFactory","elseFrag","uid$1","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","staggerAmount","getStagger","total","warnDuplicate","trans","stagger","_preProcess","_postProcess","swap","for","if","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","oldId","bindingModes","childKey","parentKey","parentWatcher","childWatcher","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHook","activate","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","vClass","handleArray","cleanup","prevKeys","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","called","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","Math","abs","toFixed","_int","_float","sign","pluralize","delay","slot","fallback","slotName","tryCompile","namedSlot","elementDirectives","_namedSlot","version","transitions","partials","__vue_script__","__vue_template__","_product","_product2","alert","goods","cart_id","goods_id","title","market_price","goods_price","goods_number","goods_attr","goods_off","is_checked","is_collect","is_presale","subtotal","img","url"],"mappings":"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","file":"./js/bundle.js?v=b22c7c47a6a430860fce","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _sub = __webpack_require__(1);\n\t\n\tvar _vue = __webpack_require__(2);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _test = __webpack_require__(3);\n\t\n\tvar _test2 = _interopRequireDefault(_test);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar vm = new _vue2.default({\n\t  el: 'body',\n\t  components: {\n\t    'app': _test2.default\n\t  }\n\t});\n\t\n\t//require('./less/main.less');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tvar yuuk = {\n\t\tname: \"kevin\",\n\t\tage: 23\n\t};\n\texports.yuuk = yuuk;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t/*!\n\t * Vue.js v1.0.13\n\t * (c) 2015 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.Vue = factory();\n\t})(undefined, function () {\n\t  'use strict';\n\t\n\t  function set(obj, key, val) {\n\t    if (hasOwn(obj, key)) {\n\t      obj[key] = val;\n\t      return;\n\t    }\n\t    if (obj._isVue) {\n\t      set(obj._data, key, val);\n\t      return;\n\t    }\n\t    var ob = obj.__ob__;\n\t    if (!ob) {\n\t      obj[key] = val;\n\t      return;\n\t    }\n\t    ob.convert(key, val);\n\t    ob.dep.notify();\n\t    if (ob.vms) {\n\t      var i = ob.vms.length;\n\t      while (i--) {\n\t        var vm = ob.vms[i];\n\t        vm._proxy(key);\n\t        vm._digest();\n\t      }\n\t    }\n\t    return val;\n\t  }\n\t\n\t  /**\n\t   * Delete a property and trigger change if necessary.\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} key\n\t   */\n\t\n\t  function del(obj, key) {\n\t    if (!hasOwn(obj, key)) {\n\t      return;\n\t    }\n\t    delete obj[key];\n\t    var ob = obj.__ob__;\n\t    if (!ob) {\n\t      return;\n\t    }\n\t    ob.dep.notify();\n\t    if (ob.vms) {\n\t      var i = ob.vms.length;\n\t      while (i--) {\n\t        var vm = ob.vms[i];\n\t        vm._unproxy(key);\n\t        vm._digest();\n\t      }\n\t    }\n\t  }\n\t\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t  /**\n\t   * Check whether the object has the property.\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} key\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function hasOwn(obj, key) {\n\t    return hasOwnProperty.call(obj, key);\n\t  }\n\t\n\t  /**\n\t   * Check if an expression is a literal value.\n\t   *\n\t   * @param {String} exp\n\t   * @return {Boolean}\n\t   */\n\t\n\t  var literalValueRE = /^\\s?(true|false|[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\t  function isLiteral(exp) {\n\t    return literalValueRE.test(exp);\n\t  }\n\t\n\t  /**\n\t   * Check if a string starts with $ or _\n\t   *\n\t   * @param {String} str\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isReserved(str) {\n\t    var c = (str + '').charCodeAt(0);\n\t    return c === 0x24 || c === 0x5F;\n\t  }\n\t\n\t  /**\n\t   * Guard text output, make sure undefined outputs\n\t   * empty string\n\t   *\n\t   * @param {*} value\n\t   * @return {String}\n\t   */\n\t\n\t  function _toString(value) {\n\t    return value == null ? '' : value.toString();\n\t  }\n\t\n\t  /**\n\t   * Check and convert possible numeric strings to numbers\n\t   * before setting back to data\n\t   *\n\t   * @param {*} value\n\t   * @return {*|Number}\n\t   */\n\t\n\t  function toNumber(value) {\n\t    if (typeof value !== 'string') {\n\t      return value;\n\t    } else {\n\t      var parsed = Number(value);\n\t      return isNaN(parsed) ? value : parsed;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Convert string boolean literals into real booleans.\n\t   *\n\t   * @param {*} value\n\t   * @return {*|Boolean}\n\t   */\n\t\n\t  function toBoolean(value) {\n\t    return value === 'true' ? true : value === 'false' ? false : value;\n\t  }\n\t\n\t  /**\n\t   * Strip quotes from a string\n\t   *\n\t   * @param {String} str\n\t   * @return {String | false}\n\t   */\n\t\n\t  function stripQuotes(str) {\n\t    var a = str.charCodeAt(0);\n\t    var b = str.charCodeAt(str.length - 1);\n\t    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t  }\n\t\n\t  /**\n\t   * Camelize a hyphen-delmited string.\n\t   *\n\t   * @param {String} str\n\t   * @return {String}\n\t   */\n\t\n\t  var camelizeRE = /-(\\w)/g;\n\t\n\t  function camelize(str) {\n\t    return str.replace(camelizeRE, toUpper);\n\t  }\n\t\n\t  function toUpper(_, c) {\n\t    return c ? c.toUpperCase() : '';\n\t  }\n\t\n\t  /**\n\t   * Hyphenate a camelCase string.\n\t   *\n\t   * @param {String} str\n\t   * @return {String}\n\t   */\n\t\n\t  var hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\t  function hyphenate(str) {\n\t    return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t  }\n\t\n\t  /**\n\t   * Converts hyphen/underscore/slash delimitered names into\n\t   * camelized classNames.\n\t   *\n\t   * e.g. my-component => MyComponent\n\t   *      some_else    => SomeElse\n\t   *      some/comp    => SomeComp\n\t   *\n\t   * @param {String} str\n\t   * @return {String}\n\t   */\n\t\n\t  var classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\t  function classify(str) {\n\t    return str.replace(classifyRE, toUpper);\n\t  }\n\t\n\t  /**\n\t   * Simple bind, faster than native\n\t   *\n\t   * @param {Function} fn\n\t   * @param {Object} ctx\n\t   * @return {Function}\n\t   */\n\t\n\t  function bind$1(fn, ctx) {\n\t    return function (a) {\n\t      var l = arguments.length;\n\t      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Convert an Array-like object to a real Array.\n\t   *\n\t   * @param {Array-like} list\n\t   * @param {Number} [start] - start index\n\t   * @return {Array}\n\t   */\n\t\n\t  function toArray(list, start) {\n\t    start = start || 0;\n\t    var i = list.length - start;\n\t    var ret = new Array(i);\n\t    while (i--) {\n\t      ret[i] = list[i + start];\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  /**\n\t   * Mix properties into target object.\n\t   *\n\t   * @param {Object} to\n\t   * @param {Object} from\n\t   */\n\t\n\t  function extend(to, from) {\n\t    var keys = Object.keys(from);\n\t    var i = keys.length;\n\t    while (i--) {\n\t      to[keys[i]] = from[keys[i]];\n\t    }\n\t    return to;\n\t  }\n\t\n\t  /**\n\t   * Quick object check - this is primarily used to tell\n\t   * Objects from primitive values when we know the value\n\t   * is a JSON-compliant type.\n\t   *\n\t   * @param {*} obj\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isObject(obj) {\n\t    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t  }\n\t\n\t  /**\n\t   * Strict object type check. Only returns true\n\t   * for plain JavaScript objects.\n\t   *\n\t   * @param {*} obj\n\t   * @return {Boolean}\n\t   */\n\t\n\t  var toString = Object.prototype.toString;\n\t  var OBJECT_STRING = '[object Object]';\n\t\n\t  function isPlainObject(obj) {\n\t    return toString.call(obj) === OBJECT_STRING;\n\t  }\n\t\n\t  /**\n\t   * Array type check.\n\t   *\n\t   * @param {*} obj\n\t   * @return {Boolean}\n\t   */\n\t\n\t  var isArray = Array.isArray;\n\t\n\t  /**\n\t   * Define a non-enumerable property\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} key\n\t   * @param {*} val\n\t   * @param {Boolean} [enumerable]\n\t   */\n\t\n\t  function def(obj, key, val, enumerable) {\n\t    Object.defineProperty(obj, key, {\n\t      value: val,\n\t      enumerable: !!enumerable,\n\t      writable: true,\n\t      configurable: true\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Debounce a function so it only gets called after the\n\t   * input stops arriving after the given wait period.\n\t   *\n\t   * @param {Function} func\n\t   * @param {Number} wait\n\t   * @return {Function} - the debounced function\n\t   */\n\t\n\t  function _debounce(func, wait) {\n\t    var timeout, args, context, timestamp, result;\n\t    var later = function later() {\n\t      var last = Date.now() - timestamp;\n\t      if (last < wait && last >= 0) {\n\t        timeout = setTimeout(later, wait - last);\n\t      } else {\n\t        timeout = null;\n\t        result = func.apply(context, args);\n\t        if (!timeout) context = args = null;\n\t      }\n\t    };\n\t    return function () {\n\t      context = this;\n\t      args = arguments;\n\t      timestamp = Date.now();\n\t      if (!timeout) {\n\t        timeout = setTimeout(later, wait);\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Manual indexOf because it's slightly faster than\n\t   * native.\n\t   *\n\t   * @param {Array} arr\n\t   * @param {*} obj\n\t   */\n\t\n\t  function indexOf(arr, obj) {\n\t    var i = arr.length;\n\t    while (i--) {\n\t      if (arr[i] === obj) return i;\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Make a cancellable version of an async callback.\n\t   *\n\t   * @param {Function} fn\n\t   * @return {Function}\n\t   */\n\t\n\t  function cancellable(fn) {\n\t    var cb = function cb() {\n\t      if (!cb.cancelled) {\n\t        return fn.apply(this, arguments);\n\t      }\n\t    };\n\t    cb.cancel = function () {\n\t      cb.cancelled = true;\n\t    };\n\t    return cb;\n\t  }\n\t\n\t  /**\n\t   * Check if two values are loosely equal - that is,\n\t   * if they are plain objects, do they have the same shape?\n\t   *\n\t   * @param {*} a\n\t   * @param {*} b\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function looseEqual(a, b) {\n\t    /* eslint-disable eqeqeq */\n\t    return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t    /* eslint-enable eqeqeq */\n\t  }\n\t\n\t  var hasProto = '__proto__' in {};\n\t\n\t  // Browser environment sniffing\n\t  var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t  var isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\t\n\t  var isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\t\n\t  var transitionProp = undefined;\n\t  var transitionEndEvent = undefined;\n\t  var animationProp = undefined;\n\t  var animationEndEvent = undefined;\n\t\n\t  // Transition property/event sniffing\n\t  if (inBrowser && !isIE9) {\n\t    var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t    var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t    transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t    transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t    animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t    animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t  }\n\t\n\t  /**\n\t   * Defer a task to execute it asynchronously. Ideally this\n\t   * should be executed as a microtask, so we leverage\n\t   * MutationObserver if it's available, and fallback to\n\t   * setTimeout(0).\n\t   *\n\t   * @param {Function} cb\n\t   * @param {Object} ctx\n\t   */\n\t\n\t  var nextTick = function () {\n\t    var callbacks = [];\n\t    var pending = false;\n\t    var timerFunc;\n\t    function nextTickHandler() {\n\t      pending = false;\n\t      var copies = callbacks.slice(0);\n\t      callbacks = [];\n\t      for (var i = 0; i < copies.length; i++) {\n\t        copies[i]();\n\t      }\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof MutationObserver !== 'undefined') {\n\t      var counter = 1;\n\t      var observer = new MutationObserver(nextTickHandler);\n\t      var textNode = document.createTextNode(counter);\n\t      observer.observe(textNode, {\n\t        characterData: true\n\t      });\n\t      timerFunc = function timerFunc() {\n\t        counter = (counter + 1) % 2;\n\t        textNode.data = counter;\n\t      };\n\t    } else {\n\t      timerFunc = setTimeout;\n\t    }\n\t    return function (cb, ctx) {\n\t      var func = ctx ? function () {\n\t        cb.call(ctx);\n\t      } : cb;\n\t      callbacks.push(func);\n\t      if (pending) return;\n\t      pending = true;\n\t      timerFunc(nextTickHandler, 0);\n\t    };\n\t  }();\n\t\n\t  function Cache(limit) {\n\t    this.size = 0;\n\t    this.limit = limit;\n\t    this.head = this.tail = undefined;\n\t    this._keymap = Object.create(null);\n\t  }\n\t\n\t  var p = Cache.prototype;\n\t\n\t  /**\n\t   * Put <value> into the cache associated with <key>.\n\t   * Returns the entry which was removed to make room for\n\t   * the new entry. Otherwise undefined is returned.\n\t   * (i.e. if there was enough room already).\n\t   *\n\t   * @param {String} key\n\t   * @param {*} value\n\t   * @return {Entry|undefined}\n\t   */\n\t\n\t  p.put = function (key, value) {\n\t    var entry = {\n\t      key: key,\n\t      value: value\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    if (this.size === this.limit) {\n\t      return this.shift();\n\t    } else {\n\t      this.size++;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Purge the least recently used (oldest) entry from the\n\t   * cache. Returns the removed entry or undefined if the\n\t   * cache was empty.\n\t   */\n\t\n\t  p.shift = function () {\n\t    var entry = this.head;\n\t    if (entry) {\n\t      this.head = this.head.newer;\n\t      this.head.older = undefined;\n\t      entry.newer = entry.older = undefined;\n\t      this._keymap[entry.key] = undefined;\n\t    }\n\t    return entry;\n\t  };\n\t\n\t  /**\n\t   * Get and register recent use of <key>. Returns the value\n\t   * associated with <key> or undefined if not in cache.\n\t   *\n\t   * @param {String} key\n\t   * @param {Boolean} returnEntry\n\t   * @return {Entry|*}\n\t   */\n\t\n\t  p.get = function (key, returnEntry) {\n\t    var entry = this._keymap[key];\n\t    if (entry === undefined) return;\n\t    if (entry === this.tail) {\n\t      return returnEntry ? entry : entry.value;\n\t    }\n\t    // HEAD--------------TAIL\n\t    //   <.older   .newer>\n\t    //  <--- add direction --\n\t    //   A  B  C  <D>  E\n\t    if (entry.newer) {\n\t      if (entry === this.head) {\n\t        this.head = entry.newer;\n\t      }\n\t      entry.newer.older = entry.older; // C <-- E.\n\t    }\n\t    if (entry.older) {\n\t      entry.older.newer = entry.newer; // C. --> E\n\t    }\n\t    entry.newer = undefined; // D --x\n\t    entry.older = this.tail; // D. --> E\n\t    if (this.tail) {\n\t      this.tail.newer = entry; // E. <-- D\n\t    }\n\t    this.tail = entry;\n\t    return returnEntry ? entry : entry.value;\n\t  };\n\t\n\t  var cache$1 = new Cache(1000);\n\t  var filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\t  var reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t  /**\n\t   * Parser state\n\t   */\n\t\n\t  var str;\n\t  var dir;\n\t  var c;\n\t  var prev;\n\t  var i;\n\t  var l;\n\t  var lastFilterIndex;\n\t  var inSingle;\n\t  var inDouble;\n\t  var curly;\n\t  var square;\n\t  var paren;\n\t  /**\n\t   * Push a filter to the current directive object\n\t   */\n\t\n\t  function pushFilter() {\n\t    var exp = str.slice(lastFilterIndex, i).trim();\n\t    var filter;\n\t    if (exp) {\n\t      filter = {};\n\t      var tokens = exp.match(filterTokenRE);\n\t      filter.name = tokens[0];\n\t      if (tokens.length > 1) {\n\t        filter.args = tokens.slice(1).map(processFilterArg);\n\t      }\n\t    }\n\t    if (filter) {\n\t      (dir.filters = dir.filters || []).push(filter);\n\t    }\n\t    lastFilterIndex = i + 1;\n\t  }\n\t\n\t  /**\n\t   * Check if an argument is dynamic and strip quotes.\n\t   *\n\t   * @param {String} arg\n\t   * @return {Object}\n\t   */\n\t\n\t  function processFilterArg(arg) {\n\t    if (reservedArgRE.test(arg)) {\n\t      return {\n\t        value: toNumber(arg),\n\t        dynamic: false\n\t      };\n\t    } else {\n\t      var stripped = stripQuotes(arg);\n\t      var dynamic = stripped === arg;\n\t      return {\n\t        value: dynamic ? arg : stripped,\n\t        dynamic: dynamic\n\t      };\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Parse a directive value and extract the expression\n\t   * and its filters into a descriptor.\n\t   *\n\t   * Example:\n\t   *\n\t   * \"a + 1 | uppercase\" will yield:\n\t   * {\n\t   *   expression: 'a + 1',\n\t   *   filters: [\n\t   *     { name: 'uppercase', args: null }\n\t   *   ]\n\t   * }\n\t   *\n\t   * @param {String} str\n\t   * @return {Object}\n\t   */\n\t\n\t  function parseDirective(s) {\n\t\n\t    var hit = cache$1.get(s);\n\t    if (hit) {\n\t      return hit;\n\t    }\n\t\n\t    // reset parser state\n\t    str = s;\n\t    inSingle = inDouble = false;\n\t    curly = square = paren = 0;\n\t    lastFilterIndex = 0;\n\t    dir = {};\n\t\n\t    for (i = 0, l = str.length; i < l; i++) {\n\t      prev = c;\n\t      c = str.charCodeAt(i);\n\t      if (inSingle) {\n\t        // check single quote\n\t        if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t      } else if (inDouble) {\n\t        // check double quote\n\t        if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t      } else if (c === 0x7C && // pipe\n\t      str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t        if (dir.expression == null) {\n\t          // first filter, end of expression\n\t          lastFilterIndex = i + 1;\n\t          dir.expression = str.slice(0, i).trim();\n\t        } else {\n\t          // already has filter\n\t          pushFilter();\n\t        }\n\t      } else {\n\t        switch (c) {\n\t          case 0x22:\n\t            inDouble = true;break; // \"\n\t          case 0x27:\n\t            inSingle = true;break; // '\n\t          case 0x28:\n\t            paren++;break; // (\n\t          case 0x29:\n\t            paren--;break; // )\n\t          case 0x5B:\n\t            square++;break; // [\n\t          case 0x5D:\n\t            square--;break; // ]\n\t          case 0x7B:\n\t            curly++;break; // {\n\t          case 0x7D:\n\t            curly--;break; // }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (dir.expression == null) {\n\t      dir.expression = str.slice(0, i).trim();\n\t    } else if (lastFilterIndex !== 0) {\n\t      pushFilter();\n\t    }\n\t\n\t    cache$1.put(s, dir);\n\t    return dir;\n\t  }\n\t\n\t  var directive = Object.freeze({\n\t    parseDirective: parseDirective\n\t  });\n\t\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var cache = undefined;\n\t  var tagRE = undefined;\n\t  var htmlRE = undefined;\n\t  /**\n\t   * Escape a string so it can be used in a RegExp\n\t   * constructor.\n\t   *\n\t   * @param {String} str\n\t   */\n\t\n\t  function escapeRegex(str) {\n\t    return str.replace(regexEscapeRE, '\\\\$&');\n\t  }\n\t\n\t  function compileRegex() {\n\t    var open = escapeRegex(config.delimiters[0]);\n\t    var close = escapeRegex(config.delimiters[1]);\n\t    var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t    var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t    tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t    htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t    // reset cache\n\t    cache = new Cache(1000);\n\t  }\n\t\n\t  /**\n\t   * Parse a template text string into an array of tokens.\n\t   *\n\t   * @param {String} text\n\t   * @return {Array<Object> | null}\n\t   *               - {String} type\n\t   *               - {String} value\n\t   *               - {Boolean} [html]\n\t   *               - {Boolean} [oneTime]\n\t   */\n\t\n\t  function parseText(text) {\n\t    if (!cache) {\n\t      compileRegex();\n\t    }\n\t    var hit = cache.get(text);\n\t    if (hit) {\n\t      return hit;\n\t    }\n\t    text = text.replace(/\\n/g, '');\n\t    if (!tagRE.test(text)) {\n\t      return null;\n\t    }\n\t    var tokens = [];\n\t    var lastIndex = tagRE.lastIndex = 0;\n\t    var match, index, html, value, first, oneTime;\n\t    /* eslint-disable no-cond-assign */\n\t    while (match = tagRE.exec(text)) {\n\t      /* eslint-enable no-cond-assign */\n\t      index = match.index;\n\t      // push text token\n\t      if (index > lastIndex) {\n\t        tokens.push({\n\t          value: text.slice(lastIndex, index)\n\t        });\n\t      }\n\t      // tag token\n\t      html = htmlRE.test(match[0]);\n\t      value = html ? match[1] : match[2];\n\t      first = value.charCodeAt(0);\n\t      oneTime = first === 42; // *\n\t      value = oneTime ? value.slice(1) : value;\n\t      tokens.push({\n\t        tag: true,\n\t        value: value.trim(),\n\t        html: html,\n\t        oneTime: oneTime\n\t      });\n\t      lastIndex = index + match[0].length;\n\t    }\n\t    if (lastIndex < text.length) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex)\n\t      });\n\t    }\n\t    cache.put(text, tokens);\n\t    return tokens;\n\t  }\n\t\n\t  /**\n\t   * Format a list of tokens into an expression.\n\t   * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t   * into one single expression as '\"a \" + b + \" c\"'.\n\t   *\n\t   * @param {Array} tokens\n\t   * @return {String}\n\t   */\n\t\n\t  function tokensToExp(tokens) {\n\t    if (tokens.length > 1) {\n\t      return tokens.map(function (token) {\n\t        return formatToken(token);\n\t      }).join('+');\n\t    } else {\n\t      return formatToken(tokens[0], true);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Format a single token.\n\t   *\n\t   * @param {Object} token\n\t   * @param {Boolean} single\n\t   * @return {String}\n\t   */\n\t\n\t  function formatToken(token, single) {\n\t    return token.tag ? inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t  }\n\t\n\t  /**\n\t   * For an attribute with multiple interpolation tags,\n\t   * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t   * the whole thing into a single watchable expression, we\n\t   * have to inline those filters. This function does exactly\n\t   * that. This is a bit hacky but it avoids heavy changes\n\t   * to directive parser and watcher mechanism.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} single\n\t   * @return {String}\n\t   */\n\t\n\t  var filterRE$1 = /[^|]\\|[^|]/;\n\t  function inlineFilters(exp, single) {\n\t    if (!filterRE$1.test(exp)) {\n\t      return single ? exp : '(' + exp + ')';\n\t    } else {\n\t      var dir = parseDirective(exp);\n\t      if (!dir.filters) {\n\t        return '(' + exp + ')';\n\t      } else {\n\t        return 'this._applyFilters(' + dir.expression + // value\n\t        ',null,' + // oldValue (null for read)\n\t        JSON.stringify(dir.filters) + // filter descriptors\n\t        ',false)'; // write?\n\t      }\n\t    }\n\t  }\n\t\n\t  var text$1 = Object.freeze({\n\t    compileRegex: compileRegex,\n\t    parseText: parseText,\n\t    tokensToExp: tokensToExp\n\t  });\n\t\n\t  var delimiters = ['{{', '}}'];\n\t  var unsafeDelimiters = ['{{{', '}}}'];\n\t\n\t  var config = Object.defineProperties({\n\t\n\t    /**\n\t     * Whether to print debug messages.\n\t     * Also enables stack trace for warnings.\n\t     *\n\t     * @type {Boolean}\n\t     */\n\t\n\t    debug: false,\n\t\n\t    /**\n\t     * Whether to suppress warnings.\n\t     *\n\t     * @type {Boolean}\n\t     */\n\t\n\t    silent: false,\n\t\n\t    /**\n\t     * Whether to use async rendering.\n\t     */\n\t\n\t    async: true,\n\t\n\t    /**\n\t     * Whether to warn against errors caught when evaluating\n\t     * expressions.\n\t     */\n\t\n\t    warnExpressionErrors: true,\n\t\n\t    /**\n\t     * Whether or not to handle fully object properties which\n\t     * are already backed by getters and seters. Depending on\n\t     * use case and environment, this might introduce non-neglible\n\t     * performance penalties.\n\t     */\n\t    convertAllProperties: false,\n\t\n\t    /**\n\t     * Internal flag to indicate the delimiters have been\n\t     * changed.\n\t     *\n\t     * @type {Boolean}\n\t     */\n\t\n\t    _delimitersChanged: true,\n\t\n\t    /**\n\t     * List of asset types that a component can own.\n\t     *\n\t     * @type {Array}\n\t     */\n\t\n\t    _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t    /**\n\t     * prop binding modes\n\t     */\n\t\n\t    _propBindingModes: {\n\t      ONE_WAY: 0,\n\t      TWO_WAY: 1,\n\t      ONE_TIME: 2\n\t    },\n\t\n\t    /**\n\t     * Max circular updates allowed in a batcher flush cycle.\n\t     */\n\t\n\t    _maxUpdateCount: 100\n\t\n\t  }, {\n\t    delimiters: { /**\n\t                   * Interpolation delimiters. Changing these would trigger\n\t                   * the text parser to re-compile the regular expressions.\n\t                   *\n\t                   * @type {Array<String>}\n\t                   */\n\t\n\t      get: function get() {\n\t        return delimiters;\n\t      },\n\t      set: function set(val) {\n\t        delimiters = val;\n\t        compileRegex();\n\t      },\n\t      configurable: true,\n\t      enumerable: true\n\t    },\n\t    unsafeDelimiters: {\n\t      get: function get() {\n\t        return unsafeDelimiters;\n\t      },\n\t      set: function set(val) {\n\t        unsafeDelimiters = val;\n\t        compileRegex();\n\t      },\n\t      configurable: true,\n\t      enumerable: true\n\t    }\n\t  });\n\t\n\t  var warn = undefined;\n\t\n\t  if (true) {\n\t    (function () {\n\t      var hasConsole = typeof console !== 'undefined';\n\t      warn = function warn(msg, e) {\n\t        if (hasConsole && (!config.silent || config.debug)) {\n\t          console.warn('[Vue warn]: ' + msg);\n\t          /* istanbul ignore if */\n\t          if (config.debug) {\n\t            if (e) {\n\t              throw e;\n\t            } else {\n\t              console.warn(new Error('Warning Stack Trace').stack);\n\t            }\n\t          }\n\t        }\n\t      };\n\t    })();\n\t  }\n\t\n\t  /**\n\t   * Append with transition.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   * @param {Vue} vm\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function appendWithTransition(el, target, vm, cb) {\n\t    applyTransition(el, 1, function () {\n\t      target.appendChild(el);\n\t    }, vm, cb);\n\t  }\n\t\n\t  /**\n\t   * InsertBefore with transition.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   * @param {Vue} vm\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithTransition(el, target, vm, cb) {\n\t    applyTransition(el, 1, function () {\n\t      before(el, target);\n\t    }, vm, cb);\n\t  }\n\t\n\t  /**\n\t   * Remove with transition.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Vue} vm\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithTransition(el, vm, cb) {\n\t    applyTransition(el, -1, function () {\n\t      remove(el);\n\t    }, vm, cb);\n\t  }\n\t\n\t  /**\n\t   * Apply transitions with an operation callback.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Number} direction\n\t   *                  1: enter\n\t   *                 -1: leave\n\t   * @param {Function} op - the actual DOM operation\n\t   * @param {Vue} vm\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function applyTransition(el, direction, op, vm, cb) {\n\t    var transition = el.__v_trans;\n\t    if (!transition ||\n\t    // skip if there are no js hooks and CSS transition is\n\t    // not supported\n\t    !transition.hooks && !transitionEndEvent ||\n\t    // skip transitions for initial compile\n\t    !vm._isCompiled ||\n\t    // if the vm is being manipulated by a parent directive\n\t    // during the parent's compilation phase, skip the\n\t    // animation.\n\t    vm.$parent && !vm.$parent._isCompiled) {\n\t      op();\n\t      if (cb) cb();\n\t      return;\n\t    }\n\t    var action = direction > 0 ? 'enter' : 'leave';\n\t    transition[action](op, cb);\n\t  }\n\t\n\t  /**\n\t   * Query an element selector if it's not an element already.\n\t   *\n\t   * @param {String|Element} el\n\t   * @return {Element}\n\t   */\n\t\n\t  function query(el) {\n\t    if (typeof el === 'string') {\n\t      var selector = el;\n\t      el = document.querySelector(el);\n\t      if (!el) {\n\t        'development' !== 'production' && warn('Cannot find element: ' + selector);\n\t      }\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Check if a node is in the document.\n\t   * Note: document.documentElement.contains should work here\n\t   * but always returns false for comment nodes in phantomjs,\n\t   * making unit tests difficult. This is fixed by doing the\n\t   * contains() check on the node's parentNode instead of\n\t   * the node itself.\n\t   *\n\t   * @param {Node} node\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function inDoc(node) {\n\t    var doc = document.documentElement;\n\t    var parent = node && node.parentNode;\n\t    return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t  }\n\t\n\t  /**\n\t   * Get and remove an attribute from a node.\n\t   *\n\t   * @param {Node} node\n\t   * @param {String} _attr\n\t   */\n\t\n\t  function getAttr(node, _attr) {\n\t    var val = node.getAttribute(_attr);\n\t    if (val !== null) {\n\t      node.removeAttribute(_attr);\n\t    }\n\t    return val;\n\t  }\n\t\n\t  /**\n\t   * Get an attribute with colon or v-bind: prefix.\n\t   *\n\t   * @param {Node} node\n\t   * @param {String} name\n\t   * @return {String|null}\n\t   */\n\t\n\t  function getBindAttr(node, name) {\n\t    var val = getAttr(node, ':' + name);\n\t    if (val === null) {\n\t      val = getAttr(node, 'v-bind:' + name);\n\t    }\n\t    return val;\n\t  }\n\t\n\t  /**\n\t   * Check the presence of a bind attribute.\n\t   *\n\t   * @param {Node} node\n\t   * @param {String} name\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function hasBindAttr(node, name) {\n\t    return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t  }\n\t\n\t  /**\n\t   * Insert el before target\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   */\n\t\n\t  function before(el, target) {\n\t    target.parentNode.insertBefore(el, target);\n\t  }\n\t\n\t  /**\n\t   * Insert el after target\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   */\n\t\n\t  function after(el, target) {\n\t    if (target.nextSibling) {\n\t      before(el, target.nextSibling);\n\t    } else {\n\t      target.parentNode.appendChild(el);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Remove el from DOM\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  function remove(el) {\n\t    el.parentNode.removeChild(el);\n\t  }\n\t\n\t  /**\n\t   * Prepend el to target\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   */\n\t\n\t  function prepend(el, target) {\n\t    if (target.firstChild) {\n\t      before(el, target.firstChild);\n\t    } else {\n\t      target.appendChild(el);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Replace target with el\n\t   *\n\t   * @param {Element} target\n\t   * @param {Element} el\n\t   */\n\t\n\t  function replace(target, el) {\n\t    var parent = target.parentNode;\n\t    if (parent) {\n\t      parent.replaceChild(el, target);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Add event listener shorthand.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} event\n\t   * @param {Function} cb\n\t   */\n\t\n\t  function on$1(el, event, cb) {\n\t    el.addEventListener(event, cb);\n\t  }\n\t\n\t  /**\n\t   * Remove event listener shorthand.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} event\n\t   * @param {Function} cb\n\t   */\n\t\n\t  function off(el, event, cb) {\n\t    el.removeEventListener(event, cb);\n\t  }\n\t\n\t  /**\n\t   * In IE9, setAttribute('class') will result in empty class\n\t   * if the element also has the :class attribute; However in\n\t   * PhantomJS, setting `className` does not work on SVG elements...\n\t   * So we have to do a conditional check here.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} cls\n\t   */\n\t\n\t  function setClass(el, cls) {\n\t    /* istanbul ignore if */\n\t    if (isIE9 && !(el instanceof SVGElement)) {\n\t      el.className = cls;\n\t    } else {\n\t      el.setAttribute('class', cls);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Add class with compatibility for IE & SVG\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} cls\n\t   */\n\t\n\t  function addClass(el, cls) {\n\t    if (el.classList) {\n\t      el.classList.add(cls);\n\t    } else {\n\t      var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t      if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t        setClass(el, (cur + cls).trim());\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Remove class with compatibility for IE & SVG\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} cls\n\t   */\n\t\n\t  function removeClass(el, cls) {\n\t    if (el.classList) {\n\t      el.classList.remove(cls);\n\t    } else {\n\t      var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t      var tar = ' ' + cls + ' ';\n\t      while (cur.indexOf(tar) >= 0) {\n\t        cur = cur.replace(tar, ' ');\n\t      }\n\t      setClass(el, cur.trim());\n\t    }\n\t    if (!el.className) {\n\t      el.removeAttribute('class');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Extract raw content inside an element into a temporary\n\t   * container div\n\t   *\n\t   * @param {Element} el\n\t   * @param {Boolean} asFragment\n\t   * @return {Element}\n\t   */\n\t\n\t  function extractContent(el, asFragment) {\n\t    var child;\n\t    var rawContent;\n\t    /* istanbul ignore if */\n\t    if (isTemplate(el) && el.content instanceof DocumentFragment) {\n\t      el = el.content;\n\t    }\n\t    if (el.hasChildNodes()) {\n\t      trimNode(el);\n\t      rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t      /* eslint-disable no-cond-assign */\n\t      while (child = el.firstChild) {\n\t        /* eslint-enable no-cond-assign */\n\t        rawContent.appendChild(child);\n\t      }\n\t    }\n\t    return rawContent;\n\t  }\n\t\n\t  /**\n\t   * Trim possible empty head/tail textNodes inside a parent.\n\t   *\n\t   * @param {Node} node\n\t   */\n\t\n\t  function trimNode(node) {\n\t    trim(node, node.firstChild);\n\t    trim(node, node.lastChild);\n\t  }\n\t\n\t  function trim(parent, node) {\n\t    if (node && node.nodeType === 3 && !node.data.trim()) {\n\t      parent.removeChild(node);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if an element is a template tag.\n\t   * Note if the template appears inside an SVG its tagName\n\t   * will be in lowercase.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  function isTemplate(el) {\n\t    return el.tagName && el.tagName.toLowerCase() === 'template';\n\t  }\n\t\n\t  /**\n\t   * Create an \"anchor\" for performing dom insertion/removals.\n\t   * This is used in a number of scenarios:\n\t   * - fragment instance\n\t   * - v-html\n\t   * - v-if\n\t   * - v-for\n\t   * - component\n\t   *\n\t   * @param {String} content\n\t   * @param {Boolean} persist - IE trashes empty textNodes on\n\t   *                            cloneNode(true), so in certain\n\t   *                            cases the anchor needs to be\n\t   *                            non-empty to be persisted in\n\t   *                            templates.\n\t   * @return {Comment|Text}\n\t   */\n\t\n\t  function createAnchor(content, persist) {\n\t    var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t    anchor.__vue_anchor = true;\n\t    return anchor;\n\t  }\n\t\n\t  /**\n\t   * Find a component ref attribute that starts with $.\n\t   *\n\t   * @param {Element} node\n\t   * @return {String|undefined}\n\t   */\n\t\n\t  var refRE = /^v-ref:/;\n\t\n\t  function findRef(node) {\n\t    if (node.hasAttributes()) {\n\t      var attrs = node.attributes;\n\t      for (var i = 0, l = attrs.length; i < l; i++) {\n\t        var name = attrs[i].name;\n\t        if (refRE.test(name)) {\n\t          return camelize(name.replace(refRE, ''));\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Map a function to a range of nodes .\n\t   *\n\t   * @param {Node} node\n\t   * @param {Node} end\n\t   * @param {Function} op\n\t   */\n\t\n\t  function mapNodeRange(node, end, op) {\n\t    var next;\n\t    while (node !== end) {\n\t      next = node.nextSibling;\n\t      op(node);\n\t      node = next;\n\t    }\n\t    op(end);\n\t  }\n\t\n\t  /**\n\t   * Remove a range of nodes with transition, store\n\t   * the nodes in a fragment with correct ordering,\n\t   * and call callback when done.\n\t   *\n\t   * @param {Node} start\n\t   * @param {Node} end\n\t   * @param {Vue} vm\n\t   * @param {DocumentFragment} frag\n\t   * @param {Function} cb\n\t   */\n\t\n\t  function removeNodeRange(start, end, vm, frag, cb) {\n\t    var done = false;\n\t    var removed = 0;\n\t    var nodes = [];\n\t    mapNodeRange(start, end, function (node) {\n\t      if (node === end) done = true;\n\t      nodes.push(node);\n\t      removeWithTransition(node, vm, onRemoved);\n\t    });\n\t    function onRemoved() {\n\t      removed++;\n\t      if (done && removed >= nodes.length) {\n\t        for (var i = 0; i < nodes.length; i++) {\n\t          frag.appendChild(nodes[i]);\n\t        }\n\t        cb && cb();\n\t      }\n\t    }\n\t  }\n\t\n\t  var commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n\t  var reservedTagRE = /^(slot|partial|component)$/;\n\t\n\t  /**\n\t   * Check if an element is a component, if yes return its\n\t   * component id.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Object|undefined}\n\t   */\n\t\n\t  function checkComponentAttr(el, options) {\n\t    var tag = el.tagName.toLowerCase();\n\t    var hasAttrs = el.hasAttributes();\n\t    if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t      if (resolveAsset(options, 'components', tag)) {\n\t        return { id: tag };\n\t      } else {\n\t        var is = hasAttrs && getIsBinding(el);\n\t        if (is) {\n\t          return is;\n\t        } else if (true) {\n\t          if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n\t          // Chrome returns unknown for several HTML5 elements.\n\t          // https://code.google.com/p/chromium/issues/detail?id=540526\n\t          !/^(data|time|rtc|rb)$/.test(tag)) {\n\t            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly?');\n\t          }\n\t        }\n\t      }\n\t    } else if (hasAttrs) {\n\t      return getIsBinding(el);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Get \"is\" binding from an element.\n\t   *\n\t   * @param {Element} el\n\t   * @return {Object|undefined}\n\t   */\n\t\n\t  function getIsBinding(el) {\n\t    // dynamic syntax\n\t    var exp = getAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp };\n\t    } else {\n\t      exp = getBindAttr(el, 'is');\n\t      if (exp != null) {\n\t        return { id: exp, dynamic: true };\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Set a prop's initial value on a vm and its data object.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Object} prop\n\t   * @param {*} value\n\t   */\n\t\n\t  function initProp(vm, prop, value) {\n\t    var key = prop.path;\n\t    value = coerceProp(prop, value);\n\t    vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n\t  }\n\t\n\t  /**\n\t   * Assert whether a prop is valid.\n\t   *\n\t   * @param {Object} prop\n\t   * @param {*} value\n\t   */\n\t\n\t  function assertProp(prop, value) {\n\t    // if a prop is not provided and is not required,\n\t    // skip the check.\n\t    if (prop.raw === null && !prop.required) {\n\t      return true;\n\t    }\n\t    var options = prop.options;\n\t    var type = options.type;\n\t    var valid = true;\n\t    var expectedType;\n\t    if (type) {\n\t      if (type === String) {\n\t        expectedType = 'string';\n\t        valid = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === expectedType;\n\t      } else if (type === Number) {\n\t        expectedType = 'number';\n\t        valid = typeof value === 'number';\n\t      } else if (type === Boolean) {\n\t        expectedType = 'boolean';\n\t        valid = typeof value === 'boolean';\n\t      } else if (type === Function) {\n\t        expectedType = 'function';\n\t        valid = typeof value === 'function';\n\t      } else if (type === Object) {\n\t        expectedType = 'object';\n\t        valid = isPlainObject(value);\n\t      } else if (type === Array) {\n\t        expectedType = 'array';\n\t        valid = isArray(value);\n\t      } else {\n\t        valid = value instanceof type;\n\t      }\n\t    }\n\t    if (!valid) {\n\t      'development' !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t      return false;\n\t    }\n\t    var validator = options.validator;\n\t    if (validator) {\n\t      if (!validator.call(null, value)) {\n\t        'development' !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * Force parsing value with coerce option.\n\t   *\n\t   * @param {*} value\n\t   * @param {Object} options\n\t   * @return {*}\n\t   */\n\t\n\t  function coerceProp(prop, value) {\n\t    var coerce = prop.options.coerce;\n\t    if (!coerce) {\n\t      return value;\n\t    }\n\t    // coerce is a function\n\t    return coerce(value);\n\t  }\n\t\n\t  function formatType(val) {\n\t    return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t  }\n\t\n\t  function formatValue(val) {\n\t    return Object.prototype.toString.call(val).slice(8, -1);\n\t  }\n\t\n\t  /**\n\t   * Option overwriting strategies are functions that handle\n\t   * how to merge a parent option value and a child option\n\t   * value into the final value.\n\t   *\n\t   * All strategy functions follow the same signature:\n\t   *\n\t   * @param {*} parentVal\n\t   * @param {*} childVal\n\t   * @param {Vue} [vm]\n\t   */\n\t\n\t  var strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t  /**\n\t   * Helper that recursively merges two data objects together.\n\t   */\n\t\n\t  function mergeData(to, from) {\n\t    var key, toVal, fromVal;\n\t    for (key in from) {\n\t      toVal = to[key];\n\t      fromVal = from[key];\n\t      if (!hasOwn(to, key)) {\n\t        set(to, key, fromVal);\n\t      } else if (isObject(toVal) && isObject(fromVal)) {\n\t        mergeData(toVal, fromVal);\n\t      }\n\t    }\n\t    return to;\n\t  }\n\t\n\t  /**\n\t   * Data\n\t   */\n\t\n\t  strats.data = function (parentVal, childVal, vm) {\n\t    if (!vm) {\n\t      // in a Vue.extend merge, both should be functions\n\t      if (!childVal) {\n\t        return parentVal;\n\t      }\n\t      if (typeof childVal !== 'function') {\n\t        'development' !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t        return parentVal;\n\t      }\n\t      if (!parentVal) {\n\t        return childVal;\n\t      }\n\t      // when parentVal & childVal are both present,\n\t      // we need to return a function that returns the\n\t      // merged result of both functions... no need to\n\t      // check if parentVal is a function here because\n\t      // it has to be a function to pass previous merges.\n\t      return function mergedDataFn() {\n\t        return mergeData(childVal.call(this), parentVal.call(this));\n\t      };\n\t    } else if (parentVal || childVal) {\n\t      return function mergedInstanceDataFn() {\n\t        // instance merge\n\t        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t        if (instanceData) {\n\t          return mergeData(instanceData, defaultData);\n\t        } else {\n\t          return defaultData;\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  /**\n\t   * El\n\t   */\n\t\n\t  strats.el = function (parentVal, childVal, vm) {\n\t    if (!vm && childVal && typeof childVal !== 'function') {\n\t      'development' !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return;\n\t    }\n\t    var ret = childVal || parentVal;\n\t    // invoke the element factory if this is instance merge\n\t    return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t  };\n\t\n\t  /**\n\t   * Hooks and param attributes are merged as arrays.\n\t   */\n\t\n\t  strats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n\t    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t  };\n\t\n\t  /**\n\t   * 0.11 deprecation warning\n\t   */\n\t\n\t  strats.paramAttributes = function () {\n\t    /* istanbul ignore next */\n\t    'development' !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t  };\n\t\n\t  /**\n\t   * Assets\n\t   *\n\t   * When a vm is present (instance creation), we need to do\n\t   * a three-way merge between constructor options, instance\n\t   * options and parent options.\n\t   */\n\t\n\t  function mergeAssets(parentVal, childVal) {\n\t    var res = Object.create(parentVal);\n\t    return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t  }\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    strats[type + 's'] = mergeAssets;\n\t  });\n\t\n\t  /**\n\t   * Events & Watchers.\n\t   *\n\t   * Events & watchers hashes should not overwrite one\n\t   * another, so we merge them as arrays.\n\t   */\n\t\n\t  strats.watch = strats.events = function (parentVal, childVal) {\n\t    if (!childVal) return parentVal;\n\t    if (!parentVal) return childVal;\n\t    var ret = {};\n\t    extend(ret, parentVal);\n\t    for (var key in childVal) {\n\t      var parent = ret[key];\n\t      var child = childVal[key];\n\t      if (parent && !isArray(parent)) {\n\t        parent = [parent];\n\t      }\n\t      ret[key] = parent ? parent.concat(child) : [child];\n\t    }\n\t    return ret;\n\t  };\n\t\n\t  /**\n\t   * Other object hashes.\n\t   */\n\t\n\t  strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t    if (!childVal) return parentVal;\n\t    if (!parentVal) return childVal;\n\t    var ret = Object.create(null);\n\t    extend(ret, parentVal);\n\t    extend(ret, childVal);\n\t    return ret;\n\t  };\n\t\n\t  /**\n\t   * Default strategy.\n\t   */\n\t\n\t  var defaultStrat = function defaultStrat(parentVal, childVal) {\n\t    return childVal === undefined ? parentVal : childVal;\n\t  };\n\t\n\t  /**\n\t   * Make sure component options get converted to actual\n\t   * constructors.\n\t   *\n\t   * @param {Object} options\n\t   */\n\t\n\t  function guardComponents(options) {\n\t    if (options.components) {\n\t      var components = options.components = guardArrayAssets(options.components);\n\t      var def;\n\t      var ids = Object.keys(components);\n\t      for (var i = 0, l = ids.length; i < l; i++) {\n\t        var key = ids[i];\n\t        if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t          'development' !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t          continue;\n\t        }\n\t        def = components[key];\n\t        if (isPlainObject(def)) {\n\t          components[key] = Vue.extend(def);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Ensure all props option syntax are normalized into the\n\t   * Object-based format.\n\t   *\n\t   * @param {Object} options\n\t   */\n\t\n\t  function guardProps(options) {\n\t    var props = options.props;\n\t    var i, val;\n\t    if (isArray(props)) {\n\t      options.props = {};\n\t      i = props.length;\n\t      while (i--) {\n\t        val = props[i];\n\t        if (typeof val === 'string') {\n\t          options.props[val] = null;\n\t        } else if (val.name) {\n\t          options.props[val.name] = val;\n\t        }\n\t      }\n\t    } else if (isPlainObject(props)) {\n\t      var keys = Object.keys(props);\n\t      i = keys.length;\n\t      while (i--) {\n\t        val = props[keys[i]];\n\t        if (typeof val === 'function') {\n\t          props[keys[i]] = { type: val };\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Guard an Array-format assets option and converted it\n\t   * into the key-value Object format.\n\t   *\n\t   * @param {Object|Array} assets\n\t   * @return {Object}\n\t   */\n\t\n\t  function guardArrayAssets(assets) {\n\t    if (isArray(assets)) {\n\t      var res = {};\n\t      var i = assets.length;\n\t      var asset;\n\t      while (i--) {\n\t        asset = assets[i];\n\t        var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t        if (!id) {\n\t          'development' !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t        } else {\n\t          res[id] = asset;\n\t        }\n\t      }\n\t      return res;\n\t    }\n\t    return assets;\n\t  }\n\t\n\t  /**\n\t   * Merge two option objects into a new one.\n\t   * Core utility used in both instantiation and inheritance.\n\t   *\n\t   * @param {Object} parent\n\t   * @param {Object} child\n\t   * @param {Vue} [vm] - if vm is present, indicates this is\n\t   *                     an instantiation merge.\n\t   */\n\t\n\t  function mergeOptions(parent, child, vm) {\n\t    guardComponents(child);\n\t    guardProps(child);\n\t    var options = {};\n\t    var key;\n\t    if (child.mixins) {\n\t      for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t        parent = mergeOptions(parent, child.mixins[i], vm);\n\t      }\n\t    }\n\t    for (key in parent) {\n\t      mergeField(key);\n\t    }\n\t    for (key in child) {\n\t      if (!hasOwn(parent, key)) {\n\t        mergeField(key);\n\t      }\n\t    }\n\t    function mergeField(key) {\n\t      var strat = strats[key] || defaultStrat;\n\t      options[key] = strat(parent[key], child[key], vm, key);\n\t    }\n\t    return options;\n\t  }\n\t\n\t  /**\n\t   * Resolve an asset.\n\t   * This function is used because child instances need access\n\t   * to assets defined in its ancestor chain.\n\t   *\n\t   * @param {Object} options\n\t   * @param {String} type\n\t   * @param {String} id\n\t   * @return {Object|Function}\n\t   */\n\t\n\t  function resolveAsset(options, type, id) {\n\t    var assets = options[type];\n\t    var camelizedId;\n\t    return assets[id] ||\n\t    // camelCase ID\n\t    assets[camelizedId = camelize(id)] ||\n\t    // Pascal Case ID\n\t    assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  }\n\t\n\t  /**\n\t   * Assert asset exists\n\t   */\n\t\n\t  function assertAsset(val, type, id) {\n\t    if (!val) {\n\t      'development' !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t    }\n\t  }\n\t\n\t  var arrayProto = Array.prototype;\n\t  var arrayMethods = Object.create(arrayProto)\n\t\n\t  /**\n\t   * Intercept mutating methods and emit events\n\t   */\n\t\n\t  ;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t    // cache original method\n\t    var original = arrayProto[method];\n\t    def(arrayMethods, method, function mutator() {\n\t      // avoid leaking arguments:\n\t      // http://jsperf.com/closure-with-arguments\n\t      var i = arguments.length;\n\t      var args = new Array(i);\n\t      while (i--) {\n\t        args[i] = arguments[i];\n\t      }\n\t      var result = original.apply(this, args);\n\t      var ob = this.__ob__;\n\t      var inserted;\n\t      switch (method) {\n\t        case 'push':\n\t          inserted = args;\n\t          break;\n\t        case 'unshift':\n\t          inserted = args;\n\t          break;\n\t        case 'splice':\n\t          inserted = args.slice(2);\n\t          break;\n\t      }\n\t      if (inserted) ob.observeArray(inserted);\n\t      // notify change\n\t      ob.dep.notify();\n\t      return result;\n\t    });\n\t  });\n\t\n\t  /**\n\t   * Swap the element at the given index with a new value\n\t   * and emits corresponding event.\n\t   *\n\t   * @param {Number} index\n\t   * @param {*} val\n\t   * @return {*} - replaced element\n\t   */\n\t\n\t  def(arrayProto, '$set', function $set(index, val) {\n\t    if (index >= this.length) {\n\t      this.length = Number(index) + 1;\n\t    }\n\t    return this.splice(index, 1, val)[0];\n\t  });\n\t\n\t  /**\n\t   * Convenience method to remove the element at given index.\n\t   *\n\t   * @param {Number} index\n\t   * @param {*} val\n\t   */\n\t\n\t  def(arrayProto, '$remove', function $remove(item) {\n\t    /* istanbul ignore if */\n\t    if (!this.length) return;\n\t    var index = indexOf(this, item);\n\t    if (index > -1) {\n\t      return this.splice(index, 1);\n\t    }\n\t  });\n\t\n\t  var uid$3 = 0;\n\t\n\t  /**\n\t   * A dep is an observable that can have multiple\n\t   * directives subscribing to it.\n\t   *\n\t   * @constructor\n\t   */\n\t  function Dep() {\n\t    this.id = uid$3++;\n\t    this.subs = [];\n\t  }\n\t\n\t  // the current target watcher being evaluated.\n\t  // this is globally unique because there could be only one\n\t  // watcher being evaluated at any time.\n\t  Dep.target = null;\n\t\n\t  /**\n\t   * Add a directive subscriber.\n\t   *\n\t   * @param {Directive} sub\n\t   */\n\t\n\t  Dep.prototype.addSub = function (sub) {\n\t    this.subs.push(sub);\n\t  };\n\t\n\t  /**\n\t   * Remove a directive subscriber.\n\t   *\n\t   * @param {Directive} sub\n\t   */\n\t\n\t  Dep.prototype.removeSub = function (sub) {\n\t    this.subs.$remove(sub);\n\t  };\n\t\n\t  /**\n\t   * Add self as a dependency to the target watcher.\n\t   */\n\t\n\t  Dep.prototype.depend = function () {\n\t    Dep.target.addDep(this);\n\t  };\n\t\n\t  /**\n\t   * Notify all subscribers of a new value.\n\t   */\n\t\n\t  Dep.prototype.notify = function () {\n\t    // stablize the subscriber list first\n\t    var subs = toArray(this.subs);\n\t    for (var i = 0, l = subs.length; i < l; i++) {\n\t      subs[i].update();\n\t    }\n\t  };\n\t\n\t  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t  /**\n\t   * Observer class that are attached to each observed\n\t   * object. Once attached, the observer converts target\n\t   * object's property keys into getter/setters that\n\t   * collect dependencies and dispatches updates.\n\t   *\n\t   * @param {Array|Object} value\n\t   * @constructor\n\t   */\n\t\n\t  function Observer(value) {\n\t    this.value = value;\n\t    this.dep = new Dep();\n\t    def(value, '__ob__', this);\n\t    if (isArray(value)) {\n\t      var augment = hasProto ? protoAugment : copyAugment;\n\t      augment(value, arrayMethods, arrayKeys);\n\t      this.observeArray(value);\n\t    } else {\n\t      this.walk(value);\n\t    }\n\t  }\n\t\n\t  // Instance methods\n\t\n\t  /**\n\t   * Walk through each property and convert them into\n\t   * getter/setters. This method should only be called when\n\t   * value type is Object.\n\t   *\n\t   * @param {Object} obj\n\t   */\n\t\n\t  Observer.prototype.walk = function (obj) {\n\t    var keys = Object.keys(obj);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      this.convert(keys[i], obj[keys[i]]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Observe a list of Array items.\n\t   *\n\t   * @param {Array} items\n\t   */\n\t\n\t  Observer.prototype.observeArray = function (items) {\n\t    for (var i = 0, l = items.length; i < l; i++) {\n\t      observe(items[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Convert a property into getter/setter so we can emit\n\t   * the events when the property is accessed/changed.\n\t   *\n\t   * @param {String} key\n\t   * @param {*} val\n\t   */\n\t\n\t  Observer.prototype.convert = function (key, val) {\n\t    defineReactive(this.value, key, val);\n\t  };\n\t\n\t  /**\n\t   * Add an owner vm, so that when $set/$delete mutations\n\t   * happen we can notify owner vms to proxy the keys and\n\t   * digest the watchers. This is only called when the object\n\t   * is observed as an instance's root $data.\n\t   *\n\t   * @param {Vue} vm\n\t   */\n\t\n\t  Observer.prototype.addVm = function (vm) {\n\t    (this.vms || (this.vms = [])).push(vm);\n\t  };\n\t\n\t  /**\n\t   * Remove an owner vm. This is called when the object is\n\t   * swapped out as an instance's $data object.\n\t   *\n\t   * @param {Vue} vm\n\t   */\n\t\n\t  Observer.prototype.removeVm = function (vm) {\n\t    this.vms.$remove(vm);\n\t  };\n\t\n\t  // helpers\n\t\n\t  /**\n\t   * Augment an target Object or Array by intercepting\n\t   * the prototype chain using __proto__\n\t   *\n\t   * @param {Object|Array} target\n\t   * @param {Object} proto\n\t   */\n\t\n\t  function protoAugment(target, src) {\n\t    target.__proto__ = src;\n\t  }\n\t\n\t  /**\n\t   * Augment an target Object or Array by defining\n\t   * hidden properties.\n\t   *\n\t   * @param {Object|Array} target\n\t   * @param {Object} proto\n\t   */\n\t\n\t  function copyAugment(target, src, keys) {\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      def(target, key, src[key]);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Attempt to create an observer instance for a value,\n\t   * returns the new observer if successfully observed,\n\t   * or the existing observer if the value already has one.\n\t   *\n\t   * @param {*} value\n\t   * @param {Vue} [vm]\n\t   * @return {Observer|undefined}\n\t   * @static\n\t   */\n\t\n\t  function observe(value, vm) {\n\t    if (!value || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n\t      return;\n\t    }\n\t    var ob;\n\t    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t      ob = value.__ob__;\n\t    } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t      ob = new Observer(value);\n\t    }\n\t    if (ob && vm) {\n\t      ob.addVm(vm);\n\t    }\n\t    return ob;\n\t  }\n\t\n\t  /**\n\t   * Define a reactive property on an Object.\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} key\n\t   * @param {*} val\n\t   */\n\t\n\t  function defineReactive(obj, key, val) {\n\t    var dep = new Dep();\n\t\n\t    // cater for pre-defined getter/setters\n\t    var getter, setter;\n\t    if (config.convertAllProperties) {\n\t      var property = Object.getOwnPropertyDescriptor(obj, key);\n\t      if (property && property.configurable === false) {\n\t        return;\n\t      }\n\t      getter = property && property.get;\n\t      setter = property && property.set;\n\t    }\n\t\n\t    var childOb = observe(val);\n\t    Object.defineProperty(obj, key, {\n\t      enumerable: true,\n\t      configurable: true,\n\t      get: function reactiveGetter() {\n\t        var value = getter ? getter.call(obj) : val;\n\t        if (Dep.target) {\n\t          dep.depend();\n\t          if (childOb) {\n\t            childOb.dep.depend();\n\t          }\n\t          if (isArray(value)) {\n\t            for (var e, i = 0, l = value.length; i < l; i++) {\n\t              e = value[i];\n\t              e && e.__ob__ && e.__ob__.dep.depend();\n\t            }\n\t          }\n\t        }\n\t        return value;\n\t      },\n\t      set: function reactiveSetter(newVal) {\n\t        var value = getter ? getter.call(obj) : val;\n\t        if (newVal === value) {\n\t          return;\n\t        }\n\t        if (setter) {\n\t          setter.call(obj, newVal);\n\t        } else {\n\t          val = newVal;\n\t        }\n\t        childOb = observe(newVal);\n\t        dep.notify();\n\t      }\n\t    });\n\t  }\n\t\n\t  var util = Object.freeze({\n\t    defineReactive: defineReactive,\n\t    set: set,\n\t    del: del,\n\t    hasOwn: hasOwn,\n\t    isLiteral: isLiteral,\n\t    isReserved: isReserved,\n\t    _toString: _toString,\n\t    toNumber: toNumber,\n\t    toBoolean: toBoolean,\n\t    stripQuotes: stripQuotes,\n\t    camelize: camelize,\n\t    hyphenate: hyphenate,\n\t    classify: classify,\n\t    bind: bind$1,\n\t    toArray: toArray,\n\t    extend: extend,\n\t    isObject: isObject,\n\t    isPlainObject: isPlainObject,\n\t    def: def,\n\t    debounce: _debounce,\n\t    indexOf: indexOf,\n\t    cancellable: cancellable,\n\t    looseEqual: looseEqual,\n\t    isArray: isArray,\n\t    hasProto: hasProto,\n\t    inBrowser: inBrowser,\n\t    isIE9: isIE9,\n\t    isAndroid: isAndroid,\n\t    get transitionProp() {\n\t      return transitionProp;\n\t    },\n\t    get transitionEndEvent() {\n\t      return transitionEndEvent;\n\t    },\n\t    get animationProp() {\n\t      return animationProp;\n\t    },\n\t    get animationEndEvent() {\n\t      return animationEndEvent;\n\t    },\n\t    nextTick: nextTick,\n\t    query: query,\n\t    inDoc: inDoc,\n\t    getAttr: getAttr,\n\t    getBindAttr: getBindAttr,\n\t    hasBindAttr: hasBindAttr,\n\t    before: before,\n\t    after: after,\n\t    remove: remove,\n\t    prepend: prepend,\n\t    replace: replace,\n\t    on: on$1,\n\t    off: off,\n\t    setClass: setClass,\n\t    addClass: addClass,\n\t    removeClass: removeClass,\n\t    extractContent: extractContent,\n\t    trimNode: trimNode,\n\t    isTemplate: isTemplate,\n\t    createAnchor: createAnchor,\n\t    findRef: findRef,\n\t    mapNodeRange: mapNodeRange,\n\t    removeNodeRange: removeNodeRange,\n\t    mergeOptions: mergeOptions,\n\t    resolveAsset: resolveAsset,\n\t    assertAsset: assertAsset,\n\t    checkComponentAttr: checkComponentAttr,\n\t    initProp: initProp,\n\t    assertProp: assertProp,\n\t    coerceProp: coerceProp,\n\t    commonTagRE: commonTagRE,\n\t    reservedTagRE: reservedTagRE,\n\t    get warn() {\n\t      return warn;\n\t    }\n\t  });\n\t\n\t  var uid = 0;\n\t\n\t  function initMixin(Vue) {\n\t\n\t    /**\n\t     * The main init sequence. This is called for every\n\t     * instance, including ones that are created from extended\n\t     * constructors.\n\t     *\n\t     * @param {Object} options - this options object should be\n\t     *                           the result of merging class\n\t     *                           options and the options passed\n\t     *                           in to the constructor.\n\t     */\n\t\n\t    Vue.prototype._init = function (options) {\n\t\n\t      options = options || {};\n\t\n\t      this.$el = null;\n\t      this.$parent = options.parent;\n\t      this.$root = this.$parent ? this.$parent.$root : this;\n\t      this.$children = [];\n\t      this.$refs = {}; // child vm references\n\t      this.$els = {}; // element references\n\t      this._watchers = []; // all watchers as an array\n\t      this._directives = []; // all directives\n\t\n\t      // a uid\n\t      this._uid = uid++;\n\t\n\t      // a flag to avoid this being observed\n\t      this._isVue = true;\n\t\n\t      // events bookkeeping\n\t      this._events = {}; // registered callbacks\n\t      this._eventsCount = {}; // for $broadcast optimization\n\t\n\t      // fragment instance properties\n\t      this._isFragment = false;\n\t      this._fragment = // @type {DocumentFragment}\n\t      this._fragmentStart = // @type {Text|Comment}\n\t      this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t      // lifecycle state\n\t      this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = false;\n\t      this._unlinkFn = null;\n\t\n\t      // context:\n\t      // if this is a transcluded component, context\n\t      // will be the common parent vm of this instance\n\t      // and its host.\n\t      this._context = options._context || this.$parent;\n\t\n\t      // scope:\n\t      // if this is inside an inline v-for, the scope\n\t      // will be the intermediate scope created for this\n\t      // repeat fragment. this is used for linking props\n\t      // and container directives.\n\t      this._scope = options._scope;\n\t\n\t      // fragment:\n\t      // if this instance is compiled inside a Fragment, it\n\t      // needs to reigster itself as a child of that fragment\n\t      // for attach/detach to work properly.\n\t      this._frag = options._frag;\n\t      if (this._frag) {\n\t        this._frag.children.push(this);\n\t      }\n\t\n\t      // push self into parent / transclusion host\n\t      if (this.$parent) {\n\t        this.$parent.$children.push(this);\n\t      }\n\t\n\t      // merge options.\n\t      options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t      // set ref\n\t      this._updateRef();\n\t\n\t      // initialize data as empty object.\n\t      // it will be filled up in _initScope().\n\t      this._data = {};\n\t\n\t      // call init hook\n\t      this._callHook('init');\n\t\n\t      // initialize data observation and scope inheritance.\n\t      this._initState();\n\t\n\t      // setup event system and option events.\n\t      this._initEvents();\n\t\n\t      // call created hook\n\t      this._callHook('created');\n\t\n\t      // if `el` option is passed, start compilation.\n\t      if (options.el) {\n\t        this.$mount(options.el);\n\t      }\n\t    };\n\t  }\n\t\n\t  var pathCache = new Cache(1000);\n\t\n\t  // actions\n\t  var APPEND = 0;\n\t  var PUSH = 1;\n\t  var INC_SUB_PATH_DEPTH = 2;\n\t  var PUSH_SUB_PATH = 3;\n\t\n\t  // states\n\t  var BEFORE_PATH = 0;\n\t  var IN_PATH = 1;\n\t  var BEFORE_IDENT = 2;\n\t  var IN_IDENT = 3;\n\t  var IN_SUB_PATH = 4;\n\t  var IN_SINGLE_QUOTE = 5;\n\t  var IN_DOUBLE_QUOTE = 6;\n\t  var AFTER_PATH = 7;\n\t  var ERROR = 8;\n\t\n\t  var pathStateMachine = [];\n\t\n\t  pathStateMachine[BEFORE_PATH] = {\n\t    'ws': [BEFORE_PATH],\n\t    'ident': [IN_IDENT, APPEND],\n\t    '[': [IN_SUB_PATH],\n\t    'eof': [AFTER_PATH]\n\t  };\n\t\n\t  pathStateMachine[IN_PATH] = {\n\t    'ws': [IN_PATH],\n\t    '.': [BEFORE_IDENT],\n\t    '[': [IN_SUB_PATH],\n\t    'eof': [AFTER_PATH]\n\t  };\n\t\n\t  pathStateMachine[BEFORE_IDENT] = {\n\t    'ws': [BEFORE_IDENT],\n\t    'ident': [IN_IDENT, APPEND]\n\t  };\n\t\n\t  pathStateMachine[IN_IDENT] = {\n\t    'ident': [IN_IDENT, APPEND],\n\t    '0': [IN_IDENT, APPEND],\n\t    'number': [IN_IDENT, APPEND],\n\t    'ws': [IN_PATH, PUSH],\n\t    '.': [BEFORE_IDENT, PUSH],\n\t    '[': [IN_SUB_PATH, PUSH],\n\t    'eof': [AFTER_PATH, PUSH]\n\t  };\n\t\n\t  pathStateMachine[IN_SUB_PATH] = {\n\t    \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t    '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t    ']': [IN_PATH, PUSH_SUB_PATH],\n\t    'eof': ERROR,\n\t    'else': [IN_SUB_PATH, APPEND]\n\t  };\n\t\n\t  pathStateMachine[IN_SINGLE_QUOTE] = {\n\t    \"'\": [IN_SUB_PATH, APPEND],\n\t    'eof': ERROR,\n\t    'else': [IN_SINGLE_QUOTE, APPEND]\n\t  };\n\t\n\t  pathStateMachine[IN_DOUBLE_QUOTE] = {\n\t    '\"': [IN_SUB_PATH, APPEND],\n\t    'eof': ERROR,\n\t    'else': [IN_DOUBLE_QUOTE, APPEND]\n\t  };\n\t\n\t  /**\n\t   * Determine the type of a character in a keypath.\n\t   *\n\t   * @param {Char} ch\n\t   * @return {String} type\n\t   */\n\t\n\t  function getPathCharType(ch) {\n\t    if (ch === undefined) {\n\t      return 'eof';\n\t    }\n\t\n\t    var code = ch.charCodeAt(0);\n\t\n\t    switch (code) {\n\t      case 0x5B: // [\n\t      case 0x5D: // ]\n\t      case 0x2E: // .\n\t      case 0x22: // \"\n\t      case 0x27: // '\n\t      case 0x30:\n\t        // 0\n\t        return ch;\n\t\n\t      case 0x5F: // _\n\t      case 0x24:\n\t        // $\n\t        return 'ident';\n\t\n\t      case 0x20: // Space\n\t      case 0x09: // Tab\n\t      case 0x0A: // Newline\n\t      case 0x0D: // Return\n\t      case 0xA0: // No-break space\n\t      case 0xFEFF: // Byte Order Mark\n\t      case 0x2028: // Line Separator\n\t      case 0x2029:\n\t        // Paragraph Separator\n\t        return 'ws';\n\t    }\n\t\n\t    // a-z, A-Z\n\t    if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t      return 'ident';\n\t    }\n\t\n\t    // 1-9\n\t    if (code >= 0x31 && code <= 0x39) {\n\t      return 'number';\n\t    }\n\t\n\t    return 'else';\n\t  }\n\t\n\t  /**\n\t   * Format a subPath, return its plain form if it is\n\t   * a literal string or number. Otherwise prepend the\n\t   * dynamic indicator (*).\n\t   *\n\t   * @param {String} path\n\t   * @return {String}\n\t   */\n\t\n\t  function formatSubPath(path) {\n\t    var trimmed = path.trim();\n\t    // invalid leading 0\n\t    if (path.charAt(0) === '0' && isNaN(path)) {\n\t      return false;\n\t    }\n\t    return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t  }\n\t\n\t  /**\n\t   * Parse a string path into an array of segments\n\t   *\n\t   * @param {String} path\n\t   * @return {Array|undefined}\n\t   */\n\t\n\t  function parse(path) {\n\t    var keys = [];\n\t    var index = -1;\n\t    var mode = BEFORE_PATH;\n\t    var subPathDepth = 0;\n\t    var c, newChar, key, type, transition, action, typeMap;\n\t\n\t    var actions = [];\n\t\n\t    actions[PUSH] = function () {\n\t      if (key !== undefined) {\n\t        keys.push(key);\n\t        key = undefined;\n\t      }\n\t    };\n\t\n\t    actions[APPEND] = function () {\n\t      if (key === undefined) {\n\t        key = newChar;\n\t      } else {\n\t        key += newChar;\n\t      }\n\t    };\n\t\n\t    actions[INC_SUB_PATH_DEPTH] = function () {\n\t      actions[APPEND]();\n\t      subPathDepth++;\n\t    };\n\t\n\t    actions[PUSH_SUB_PATH] = function () {\n\t      if (subPathDepth > 0) {\n\t        subPathDepth--;\n\t        mode = IN_SUB_PATH;\n\t        actions[APPEND]();\n\t      } else {\n\t        subPathDepth = 0;\n\t        key = formatSubPath(key);\n\t        if (key === false) {\n\t          return false;\n\t        } else {\n\t          actions[PUSH]();\n\t        }\n\t      }\n\t    };\n\t\n\t    function maybeUnescapeQuote() {\n\t      var nextChar = path[index + 1];\n\t      if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t        index++;\n\t        newChar = '\\\\' + nextChar;\n\t        actions[APPEND]();\n\t        return true;\n\t      }\n\t    }\n\t\n\t    while (mode != null) {\n\t      index++;\n\t      c = path[index];\n\t\n\t      if (c === '\\\\' && maybeUnescapeQuote()) {\n\t        continue;\n\t      }\n\t\n\t      type = getPathCharType(c);\n\t      typeMap = pathStateMachine[mode];\n\t      transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t      if (transition === ERROR) {\n\t        return; // parse error\n\t      }\n\t\n\t      mode = transition[0];\n\t      action = actions[transition[1]];\n\t      if (action) {\n\t        newChar = transition[2];\n\t        newChar = newChar === undefined ? c : newChar;\n\t        if (action() === false) {\n\t          return;\n\t        }\n\t      }\n\t\n\t      if (mode === AFTER_PATH) {\n\t        keys.raw = path;\n\t        return keys;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * External parse that check for a cache hit first\n\t   *\n\t   * @param {String} path\n\t   * @return {Array|undefined}\n\t   */\n\t\n\t  function parsePath(path) {\n\t    var hit = pathCache.get(path);\n\t    if (!hit) {\n\t      hit = parse(path);\n\t      if (hit) {\n\t        pathCache.put(path, hit);\n\t      }\n\t    }\n\t    return hit;\n\t  }\n\t\n\t  /**\n\t   * Get from an object from a path string\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} path\n\t   */\n\t\n\t  function getPath(obj, path) {\n\t    return parseExpression(path).get(obj);\n\t  }\n\t\n\t  /**\n\t   * Warn against setting non-existent root path on a vm.\n\t   */\n\t\n\t  var warnNonExistent;\n\t  if (true) {\n\t    warnNonExistent = function warnNonExistent(path) {\n\t      warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Set on an object from a path\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String | Array} path\n\t   * @param {*} val\n\t   */\n\t\n\t  function setPath(obj, path, val) {\n\t    var original = obj;\n\t    if (typeof path === 'string') {\n\t      path = parse(path);\n\t    }\n\t    if (!path || !isObject(obj)) {\n\t      return false;\n\t    }\n\t    var last, key;\n\t    for (var i = 0, l = path.length; i < l; i++) {\n\t      last = obj;\n\t      key = path[i];\n\t      if (key.charAt(0) === '*') {\n\t        key = parseExpression(key.slice(1)).get.call(original, original);\n\t      }\n\t      if (i < l - 1) {\n\t        obj = obj[key];\n\t        if (!isObject(obj)) {\n\t          obj = {};\n\t          if ('development' !== 'production' && last._isVue) {\n\t            warnNonExistent(path);\n\t          }\n\t          set(last, key, obj);\n\t        }\n\t      } else {\n\t        if (isArray(obj)) {\n\t          obj.$set(key, val);\n\t        } else if (key in obj) {\n\t          obj[key] = val;\n\t        } else {\n\t          if ('development' !== 'production' && obj._isVue) {\n\t            warnNonExistent(path);\n\t          }\n\t          set(obj, key, val);\n\t        }\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  var path = Object.freeze({\n\t    parsePath: parsePath,\n\t    getPath: getPath,\n\t    setPath: setPath\n\t  });\n\t\n\t  var expressionCache = new Cache(1000);\n\t\n\t  var allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\t  var allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t  // keywords that don't make sense inside expressions\n\t  var improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n\t  var improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t  var wsRE = /\\s/g;\n\t  var newlineRE = /\\n/g;\n\t  var saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n\t  var restoreRE = /\"(\\d+)\"/g;\n\t  var pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\t  var identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\t  var booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t  /**\n\t   * Save / Rewrite / Restore\n\t   *\n\t   * When rewriting paths found in an expression, it is\n\t   * possible for the same letter sequences to be found in\n\t   * strings and Object literal property keys. Therefore we\n\t   * remove and store these parts in a temporary array, and\n\t   * restore them after the path rewrite.\n\t   */\n\t\n\t  var saved = [];\n\t\n\t  /**\n\t   * Save replacer\n\t   *\n\t   * The save regex can match two possible cases:\n\t   * 1. An opening object literal\n\t   * 2. A string\n\t   * If matched as a plain string, we need to escape its\n\t   * newlines, since the string needs to be preserved when\n\t   * generating the function body.\n\t   *\n\t   * @param {String} str\n\t   * @param {String} isString - str if matched as a string\n\t   * @return {String} - placeholder with index\n\t   */\n\t\n\t  function save(str, isString) {\n\t    var i = saved.length;\n\t    saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t    return '\"' + i + '\"';\n\t  }\n\t\n\t  /**\n\t   * Path rewrite replacer\n\t   *\n\t   * @param {String} raw\n\t   * @return {String}\n\t   */\n\t\n\t  function rewrite(raw) {\n\t    var c = raw.charAt(0);\n\t    var path = raw.slice(1);\n\t    if (allowedKeywordsRE.test(path)) {\n\t      return raw;\n\t    } else {\n\t      path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t      return c + 'scope.' + path;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Restore replacer\n\t   *\n\t   * @param {String} str\n\t   * @param {String} i - matched save index\n\t   * @return {String}\n\t   */\n\t\n\t  function restore(str, i) {\n\t    return saved[i];\n\t  }\n\t\n\t  /**\n\t   * Rewrite an expression, prefixing all path accessors with\n\t   * `scope.` and generate getter/setter functions.\n\t   *\n\t   * @param {String} exp\n\t   * @return {Function}\n\t   */\n\t\n\t  function compileGetter(exp) {\n\t    if (improperKeywordsRE.test(exp)) {\n\t      'development' !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t    }\n\t    // reset state\n\t    saved.length = 0;\n\t    // save strings and object literal keys\n\t    var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t    // rewrite all paths\n\t    // pad 1 space here becaue the regex matches 1 extra char\n\t    body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t    return makeGetterFn(body);\n\t  }\n\t\n\t  /**\n\t   * Build a getter function. Requires eval.\n\t   *\n\t   * We isolate the try/catch so it doesn't affect the\n\t   * optimization of the parse function when it is not called.\n\t   *\n\t   * @param {String} body\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  function makeGetterFn(body) {\n\t    try {\n\t      return new Function('scope', 'return ' + body + ';');\n\t    } catch (e) {\n\t      'development' !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Compile a setter function for the expression.\n\t   *\n\t   * @param {String} exp\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  function compileSetter(exp) {\n\t    var path = parsePath(exp);\n\t    if (path) {\n\t      return function (scope, val) {\n\t        setPath(scope, path, val);\n\t      };\n\t    } else {\n\t      'development' !== 'production' && warn('Invalid setter expression: ' + exp);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Parse an expression into re-written getter/setters.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} needSet\n\t   * @return {Function}\n\t   */\n\t\n\t  function parseExpression(exp, needSet) {\n\t    exp = exp.trim();\n\t    // try cache\n\t    var hit = expressionCache.get(exp);\n\t    if (hit) {\n\t      if (needSet && !hit.set) {\n\t        hit.set = compileSetter(hit.exp);\n\t      }\n\t      return hit;\n\t    }\n\t    var res = { exp: exp };\n\t    res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t    // optimized super simple getter\n\t    ? makeGetterFn('scope.' + exp)\n\t    // dynamic getter\n\t    : compileGetter(exp);\n\t    if (needSet) {\n\t      res.set = compileSetter(exp);\n\t    }\n\t    expressionCache.put(exp, res);\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Check if an expression is a simple path.\n\t   *\n\t   * @param {String} exp\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isSimplePath(exp) {\n\t    return pathTestRE.test(exp) &&\n\t    // don't treat true/false as paths\n\t    !booleanLiteralRE.test(exp) &&\n\t    // Math constants e.g. Math.PI, Math.E etc.\n\t    exp.slice(0, 5) !== 'Math.';\n\t  }\n\t\n\t  var expression = Object.freeze({\n\t    parseExpression: parseExpression,\n\t    isSimplePath: isSimplePath\n\t  });\n\t\n\t  // we have two separate queues: one for directive updates\n\t  // and one for user watcher registered via $watch().\n\t  // we want to guarantee directive updates to be called\n\t  // before user watchers so that when user watchers are\n\t  // triggered, the DOM would have already been in updated\n\t  // state.\n\t  var queue = [];\n\t  var userQueue = [];\n\t  var has = {};\n\t  var circular = {};\n\t  var waiting = false;\n\t  var internalQueueDepleted = false;\n\t\n\t  /**\n\t   * Reset the batcher's state.\n\t   */\n\t\n\t  function resetBatcherState() {\n\t    queue = [];\n\t    userQueue = [];\n\t    has = {};\n\t    circular = {};\n\t    waiting = internalQueueDepleted = false;\n\t  }\n\t\n\t  /**\n\t   * Flush both queues and run the watchers.\n\t   */\n\t\n\t  function flushBatcherQueue() {\n\t    runBatcherQueue(queue);\n\t    internalQueueDepleted = true;\n\t    runBatcherQueue(userQueue);\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (true) {\n\t      if (inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n\t        window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush');\n\t      }\n\t    }\n\t    resetBatcherState();\n\t  }\n\t\n\t  /**\n\t   * Run the watchers in a single queue.\n\t   *\n\t   * @param {Array} queue\n\t   */\n\t\n\t  function runBatcherQueue(queue) {\n\t    // do not cache length because more watchers might be pushed\n\t    // as we run existing watchers\n\t    for (var i = 0; i < queue.length; i++) {\n\t      var watcher = queue[i];\n\t      var id = watcher.id;\n\t      has[id] = null;\n\t      watcher.run();\n\t      // in dev build, check and stop circular updates.\n\t      if ('development' !== 'production' && has[id] != null) {\n\t        circular[id] = (circular[id] || 0) + 1;\n\t        if (circular[id] > config._maxUpdateCount) {\n\t          queue.splice(has[id], 1);\n\t          warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Push a watcher into the watcher queue.\n\t   * Jobs with duplicate IDs will be skipped unless it's\n\t   * pushed when the queue is being flushed.\n\t   *\n\t   * @param {Watcher} watcher\n\t   *   properties:\n\t   *   - {Number} id\n\t   *   - {Function} run\n\t   */\n\t\n\t  function pushWatcher(watcher) {\n\t    var id = watcher.id;\n\t    if (has[id] == null) {\n\t      // if an internal watcher is pushed, but the internal\n\t      // queue is already depleted, we run it immediately.\n\t      if (internalQueueDepleted && !watcher.user) {\n\t        watcher.run();\n\t        return;\n\t      }\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t\n\t  var uid$2 = 0;\n\t\n\t  /**\n\t   * A watcher parses an expression, collects dependencies,\n\t   * and fires callback when the expression value changes.\n\t   * This is used for both the $watch() api and directives.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} expression\n\t   * @param {Function} cb\n\t   * @param {Object} options\n\t   *                 - {Array} filters\n\t   *                 - {Boolean} twoWay\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} user\n\t   *                 - {Boolean} sync\n\t   *                 - {Boolean} lazy\n\t   *                 - {Function} [preProcess]\n\t   *                 - {Function} [postProcess]\n\t   * @constructor\n\t   */\n\t  function Watcher(vm, expOrFn, cb, options) {\n\t    // mix in options\n\t    if (options) {\n\t      extend(this, options);\n\t    }\n\t    var isFn = typeof expOrFn === 'function';\n\t    this.vm = vm;\n\t    vm._watchers.push(this);\n\t    this.expression = isFn ? expOrFn.toString() : expOrFn;\n\t    this.cb = cb;\n\t    this.id = ++uid$2; // uid for batching\n\t    this.active = true;\n\t    this.dirty = this.lazy; // for lazy watchers\n\t    this.deps = Object.create(null);\n\t    this.newDeps = null;\n\t    this.prevError = null; // for async error stacks\n\t    // parse expression for getter/setter\n\t    if (isFn) {\n\t      this.getter = expOrFn;\n\t      this.setter = undefined;\n\t    } else {\n\t      var res = parseExpression(expOrFn, this.twoWay);\n\t      this.getter = res.get;\n\t      this.setter = res.set;\n\t    }\n\t    this.value = this.lazy ? undefined : this.get();\n\t    // state for avoiding false triggers for deep and Array\n\t    // watchers during vm._digest()\n\t    this.queued = this.shallow = false;\n\t  }\n\t\n\t  /**\n\t   * Add a dependency to this directive.\n\t   *\n\t   * @param {Dep} dep\n\t   */\n\t\n\t  Watcher.prototype.addDep = function (dep) {\n\t    var id = dep.id;\n\t    if (!this.newDeps[id]) {\n\t      this.newDeps[id] = dep;\n\t      if (!this.deps[id]) {\n\t        this.deps[id] = dep;\n\t        dep.addSub(this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Evaluate the getter, and re-collect dependencies.\n\t   */\n\t\n\t  Watcher.prototype.get = function () {\n\t    this.beforeGet();\n\t    var scope = this.scope || this.vm;\n\t    var value;\n\t    try {\n\t      value = this.getter.call(scope, scope);\n\t    } catch (e) {\n\t      if ('development' !== 'production' && config.warnExpressionErrors) {\n\t        warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t      }\n\t    }\n\t    // \"touch\" every property so they are all tracked as\n\t    // dependencies for deep watching\n\t    if (this.deep) {\n\t      traverse(value);\n\t    }\n\t    if (this.preProcess) {\n\t      value = this.preProcess(value);\n\t    }\n\t    if (this.filters) {\n\t      value = scope._applyFilters(value, null, this.filters, false);\n\t    }\n\t    if (this.postProcess) {\n\t      value = this.postProcess(value);\n\t    }\n\t    this.afterGet();\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Set the corresponding value with the setter.\n\t   *\n\t   * @param {*} value\n\t   */\n\t\n\t  Watcher.prototype.set = function (value) {\n\t    var scope = this.scope || this.vm;\n\t    if (this.filters) {\n\t      value = scope._applyFilters(value, this.value, this.filters, true);\n\t    }\n\t    try {\n\t      this.setter.call(scope, scope, value);\n\t    } catch (e) {\n\t      if ('development' !== 'production' && config.warnExpressionErrors) {\n\t        warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t      }\n\t    }\n\t    // two-way sync for v-for alias\n\t    var forContext = scope.$forContext;\n\t    if (forContext && forContext.alias === this.expression) {\n\t      if (forContext.filters) {\n\t        'development' !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t        return;\n\t      }\n\t      forContext._withLock(function () {\n\t        if (scope.$key) {\n\t          // original is an object\n\t          forContext.rawValue[scope.$key] = value;\n\t        } else {\n\t          forContext.rawValue.$set(scope.$index, value);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Prepare for dependency collection.\n\t   */\n\t\n\t  Watcher.prototype.beforeGet = function () {\n\t    Dep.target = this;\n\t    this.newDeps = Object.create(null);\n\t  };\n\t\n\t  /**\n\t   * Clean up for dependency collection.\n\t   */\n\t\n\t  Watcher.prototype.afterGet = function () {\n\t    Dep.target = null;\n\t    var ids = Object.keys(this.deps);\n\t    var i = ids.length;\n\t    while (i--) {\n\t      var id = ids[i];\n\t      if (!this.newDeps[id]) {\n\t        this.deps[id].removeSub(this);\n\t      }\n\t    }\n\t    this.deps = this.newDeps;\n\t  };\n\t\n\t  /**\n\t   * Subscriber interface.\n\t   * Will be called when a dependency changes.\n\t   *\n\t   * @param {Boolean} shallow\n\t   */\n\t\n\t  Watcher.prototype.update = function (shallow) {\n\t    if (this.lazy) {\n\t      this.dirty = true;\n\t    } else if (this.sync || !config.async) {\n\t      this.run();\n\t    } else {\n\t      // if queued, only overwrite shallow with non-shallow,\n\t      // but not the other way around.\n\t      this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t      this.queued = true;\n\t      // record before-push error stack in debug mode\n\t      /* istanbul ignore if */\n\t      if ('development' !== 'production' && config.debug) {\n\t        this.prevError = new Error('[vue] async stack trace');\n\t      }\n\t      pushWatcher(this);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Batcher job interface.\n\t   * Will be called by the batcher.\n\t   */\n\t\n\t  Watcher.prototype.run = function () {\n\t    if (this.active) {\n\t      var value = this.get();\n\t      if (value !== this.value ||\n\t      // Deep watchers and watchers on Object/Arrays should fire even\n\t      // when the value is the same, because the value may\n\t      // have mutated; but only do so if this is a\n\t      // non-shallow update (caused by a vm digest).\n\t      (isObject(value) || this.deep) && !this.shallow) {\n\t        // set new value\n\t        var oldValue = this.value;\n\t        this.value = value;\n\t        // in debug + async mode, when a watcher callbacks\n\t        // throws, we also throw the saved before-push error\n\t        // so the full cross-tick stack trace is available.\n\t        var prevError = this.prevError;\n\t        /* istanbul ignore if */\n\t        if ('development' !== 'production' && config.debug && prevError) {\n\t          this.prevError = null;\n\t          try {\n\t            this.cb.call(this.vm, value, oldValue);\n\t          } catch (e) {\n\t            nextTick(function () {\n\t              throw prevError;\n\t            }, 0);\n\t            throw e;\n\t          }\n\t        } else {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        }\n\t      }\n\t      this.queued = this.shallow = false;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Evaluate the value of the watcher.\n\t   * This only gets called for lazy watchers.\n\t   */\n\t\n\t  Watcher.prototype.evaluate = function () {\n\t    // avoid overwriting another watcher that is being\n\t    // collected.\n\t    var current = Dep.target;\n\t    this.value = this.get();\n\t    this.dirty = false;\n\t    Dep.target = current;\n\t  };\n\t\n\t  /**\n\t   * Depend on all deps collected by this watcher.\n\t   */\n\t\n\t  Watcher.prototype.depend = function () {\n\t    var depIds = Object.keys(this.deps);\n\t    var i = depIds.length;\n\t    while (i--) {\n\t      this.deps[depIds[i]].depend();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove self from all dependencies' subcriber list.\n\t   */\n\t\n\t  Watcher.prototype.teardown = function () {\n\t    if (this.active) {\n\t      // remove self from vm's watcher list\n\t      // we can skip this if the vm if being destroyed\n\t      // which can improve teardown performance.\n\t      if (!this.vm._isBeingDestroyed) {\n\t        this.vm._watchers.$remove(this);\n\t      }\n\t      var depIds = Object.keys(this.deps);\n\t      var i = depIds.length;\n\t      while (i--) {\n\t        this.deps[depIds[i]].removeSub(this);\n\t      }\n\t      this.active = false;\n\t      this.vm = this.cb = this.value = null;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Recrusively traverse an object to evoke all converted\n\t   * getters, so that every nested property inside the object\n\t   * is collected as a \"deep\" dependency.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function traverse(val) {\n\t    var i, keys;\n\t    if (isArray(val)) {\n\t      i = val.length;\n\t      while (i--) {\n\t        traverse(val[i]);\n\t      }\n\t    } else if (isObject(val)) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) {\n\t        traverse(val[keys[i]]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var cloak = {\n\t    bind: function bind() {\n\t      var el = this.el;\n\t      this.vm.$once('pre-hook:compiled', function () {\n\t        el.removeAttribute('v-cloak');\n\t      });\n\t    }\n\t  };\n\t\n\t  var ref = {\n\t    bind: function bind() {\n\t      'development' !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t    }\n\t  };\n\t\n\t  var ON = 700;\n\t  var MODEL = 800;\n\t  var BIND = 850;\n\t  var TRANSITION = 1100;\n\t  var EL = 1500;\n\t  var COMPONENT = 1500;\n\t  var PARTIAL = 1750;\n\t  var SLOT = 1750;\n\t  var FOR = 2000;\n\t  var IF = 2000;\n\t\n\t  var el = {\n\t\n\t    priority: EL,\n\t\n\t    bind: function bind() {\n\t      /* istanbul ignore if */\n\t      if (!this.arg) {\n\t        return;\n\t      }\n\t      var id = this.id = camelize(this.arg);\n\t      var refs = (this._scope || this.vm).$els;\n\t      if (hasOwn(refs, id)) {\n\t        refs[id] = this.el;\n\t      } else {\n\t        defineReactive(refs, id, this.el);\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      var refs = (this._scope || this.vm).$els;\n\t      if (refs[this.id] === this.el) {\n\t        refs[this.id] = null;\n\t      }\n\t    }\n\t  };\n\t\n\t  var prefixes = ['-webkit-', '-moz-', '-ms-'];\n\t  var camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\t  var importantRE = /!important;?$/;\n\t  var propCache = Object.create(null);\n\t\n\t  var testEl = null;\n\t\n\t  var style = {\n\t\n\t    deep: true,\n\t\n\t    update: function update(value) {\n\t      if (typeof value === 'string') {\n\t        this.el.style.cssText = value;\n\t      } else if (isArray(value)) {\n\t        this.handleObject(value.reduce(extend, {}));\n\t      } else {\n\t        this.handleObject(value || {});\n\t      }\n\t    },\n\t\n\t    handleObject: function handleObject(value) {\n\t      // cache object styles so that only changed props\n\t      // are actually updated.\n\t      var cache = this.cache || (this.cache = {});\n\t      var name, val;\n\t      for (name in cache) {\n\t        if (!(name in value)) {\n\t          this.handleSingle(name, null);\n\t          delete cache[name];\n\t        }\n\t      }\n\t      for (name in value) {\n\t        val = value[name];\n\t        if (val !== cache[name]) {\n\t          cache[name] = val;\n\t          this.handleSingle(name, val);\n\t        }\n\t      }\n\t    },\n\t\n\t    handleSingle: function handleSingle(prop, value) {\n\t      prop = normalize(prop);\n\t      if (!prop) return; // unsupported prop\n\t      // cast possible numbers/booleans into strings\n\t      if (value != null) value += '';\n\t      if (value) {\n\t        var isImportant = importantRE.test(value) ? 'important' : '';\n\t        if (isImportant) {\n\t          value = value.replace(importantRE, '').trim();\n\t        }\n\t        this.el.style.setProperty(prop, value, isImportant);\n\t      } else {\n\t        this.el.style.removeProperty(prop);\n\t      }\n\t    }\n\t\n\t  };\n\t\n\t  /**\n\t   * Normalize a CSS property name.\n\t   * - cache result\n\t   * - auto prefix\n\t   * - camelCase -> dash-case\n\t   *\n\t   * @param {String} prop\n\t   * @return {String}\n\t   */\n\t\n\t  function normalize(prop) {\n\t    if (propCache[prop]) {\n\t      return propCache[prop];\n\t    }\n\t    var res = prefix(prop);\n\t    propCache[prop] = propCache[res] = res;\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Auto detect the appropriate prefix for a CSS property.\n\t   * https://gist.github.com/paulirish/523692\n\t   *\n\t   * @param {String} prop\n\t   * @return {String}\n\t   */\n\t\n\t  function prefix(prop) {\n\t    prop = hyphenate(prop);\n\t    var camel = camelize(prop);\n\t    var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t    if (!testEl) {\n\t      testEl = document.createElement('div');\n\t    }\n\t    if (camel in testEl.style) {\n\t      return prop;\n\t    }\n\t    var i = prefixes.length;\n\t    var prefixed;\n\t    while (i--) {\n\t      prefixed = camelPrefixes[i] + upper;\n\t      if (prefixed in testEl.style) {\n\t        return prefixes[i] + prop;\n\t      }\n\t    }\n\t  }\n\t\n\t  // xlink\n\t  var xlinkNS = 'http://www.w3.org/1999/xlink';\n\t  var xlinkRE = /^xlink:/;\n\t\n\t  // check for attributes that prohibit interpolations\n\t  var disallowedInterpAttrRE = /^v-|^:|^@|^(is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t\n\t  // these attributes should also set their corresponding properties\n\t  // because they only affect the initial state of the element\n\t  var attrWithPropsRE = /^(value|checked|selected|muted)$/;\n\t\n\t  // these attributes should set a hidden property for\n\t  // binding v-model to object values\n\t  var modelProps = {\n\t    value: '_value',\n\t    'true-value': '_trueValue',\n\t    'false-value': '_falseValue'\n\t  };\n\t\n\t  var bind = {\n\t\n\t    priority: BIND,\n\t\n\t    bind: function bind() {\n\t      var attr = this.arg;\n\t      var tag = this.el.tagName;\n\t      // should be deep watch on object mode\n\t      if (!attr) {\n\t        this.deep = true;\n\t      }\n\t      // handle interpolation bindings\n\t      if (this.descriptor.interp) {\n\t        // only allow binding on native attributes\n\t        if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t          'development' !== 'production' && warn(attr + '=\"' + this.descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t          this.el.removeAttribute(attr);\n\t          this.invalid = true;\n\t        }\n\t\n\t        /* istanbul ignore if */\n\t        if (true) {\n\t          var raw = attr + '=\"' + this.descriptor.raw + '\": ';\n\t          // warn src\n\t          if (attr === 'src') {\n\t            warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t          }\n\t\n\t          // warn style\n\t          if (attr === 'style') {\n\t            warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      if (this.invalid) {\n\t        return;\n\t      }\n\t      var attr = this.arg;\n\t      if (this.arg) {\n\t        this.handleSingle(attr, value);\n\t      } else {\n\t        this.handleObject(value || {});\n\t      }\n\t    },\n\t\n\t    // share object handler with v-bind:class\n\t    handleObject: style.handleObject,\n\t\n\t    handleSingle: function handleSingle(attr, value) {\n\t      var el = this.el;\n\t      var interp = this.descriptor.interp;\n\t      if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t        el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t        ? '' : value : value;\n\t      }\n\t      // set model props\n\t      var modelProp = modelProps[attr];\n\t      if (!interp && modelProp) {\n\t        el[modelProp] = value;\n\t        // update v-model if present\n\t        var model = el.__v_model;\n\t        if (model) {\n\t          model.listener();\n\t        }\n\t      }\n\t      // do not set value attribute for textarea\n\t      if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t        el.removeAttribute(attr);\n\t        return;\n\t      }\n\t      // update attribute\n\t      if (value != null && value !== false) {\n\t        if (attr === 'class') {\n\t          // handle edge case #1960:\n\t          // class interpolation should not overwrite Vue transition class\n\t          if (el.__v_trans) {\n\t            value += ' ' + el.__v_trans.id + '-transition';\n\t          }\n\t          setClass(el, value);\n\t        } else if (xlinkRE.test(attr)) {\n\t          el.setAttributeNS(xlinkNS, attr, value);\n\t        } else {\n\t          el.setAttribute(attr, value);\n\t        }\n\t      } else {\n\t        el.removeAttribute(attr);\n\t      }\n\t    }\n\t  };\n\t\n\t  // keyCode aliases\n\t  var keyCodes = {\n\t    esc: 27,\n\t    tab: 9,\n\t    enter: 13,\n\t    space: 32,\n\t    'delete': 46,\n\t    up: 38,\n\t    left: 37,\n\t    right: 39,\n\t    down: 40\n\t  };\n\t\n\t  function keyFilter(handler, keys) {\n\t    var codes = keys.map(function (key) {\n\t      var charCode = key.charCodeAt(0);\n\t      if (charCode > 47 && charCode < 58) {\n\t        return parseInt(key, 10);\n\t      }\n\t      if (key.length === 1) {\n\t        charCode = key.toUpperCase().charCodeAt(0);\n\t        if (charCode > 64 && charCode < 91) {\n\t          return charCode;\n\t        }\n\t      }\n\t      return keyCodes[key];\n\t    });\n\t    return function keyHandler(e) {\n\t      if (codes.indexOf(e.keyCode) > -1) {\n\t        return handler.call(this, e);\n\t      }\n\t    };\n\t  }\n\t\n\t  function stopFilter(handler) {\n\t    return function stopHandler(e) {\n\t      e.stopPropagation();\n\t      return handler.call(this, e);\n\t    };\n\t  }\n\t\n\t  function preventFilter(handler) {\n\t    return function preventHandler(e) {\n\t      e.preventDefault();\n\t      return handler.call(this, e);\n\t    };\n\t  }\n\t\n\t  var on = {\n\t\n\t    acceptStatement: true,\n\t    priority: ON,\n\t\n\t    bind: function bind() {\n\t      // deal with iframes\n\t      if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t        var self = this;\n\t        this.iframeBind = function () {\n\t          on$1(self.el.contentWindow, self.arg, self.handler);\n\t        };\n\t        this.on('load', this.iframeBind);\n\t      }\n\t    },\n\t\n\t    update: function update(handler) {\n\t      // stub a noop for v-on with no value,\n\t      // e.g. @mousedown.prevent\n\t      if (!this.descriptor.raw) {\n\t        handler = function handler() {};\n\t      }\n\t\n\t      if (typeof handler !== 'function') {\n\t        'development' !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t        return;\n\t      }\n\t\n\t      // apply modifiers\n\t      if (this.modifiers.stop) {\n\t        handler = stopFilter(handler);\n\t      }\n\t      if (this.modifiers.prevent) {\n\t        handler = preventFilter(handler);\n\t      }\n\t      // key filter\n\t      var keys = Object.keys(this.modifiers).filter(function (key) {\n\t        return key !== 'stop' && key !== 'prevent';\n\t      });\n\t      if (keys.length) {\n\t        handler = keyFilter(handler, keys);\n\t      }\n\t\n\t      this.reset();\n\t      this.handler = handler;\n\t\n\t      if (this.iframeBind) {\n\t        this.iframeBind();\n\t      } else {\n\t        on$1(this.el, this.arg, this.handler);\n\t      }\n\t    },\n\t\n\t    reset: function reset() {\n\t      var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t      if (this.handler) {\n\t        off(el, this.arg, this.handler);\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      this.reset();\n\t    }\n\t  };\n\t\n\t  var checkbox = {\n\t\n\t    bind: function bind() {\n\t      var self = this;\n\t      var el = this.el;\n\t\n\t      this.getValue = function () {\n\t        return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t      };\n\t\n\t      function getBooleanValue() {\n\t        var val = el.checked;\n\t        if (val && el.hasOwnProperty('_trueValue')) {\n\t          return el._trueValue;\n\t        }\n\t        if (!val && el.hasOwnProperty('_falseValue')) {\n\t          return el._falseValue;\n\t        }\n\t        return val;\n\t      }\n\t\n\t      this.listener = function () {\n\t        var model = self._watcher.value;\n\t        if (isArray(model)) {\n\t          var val = self.getValue();\n\t          if (el.checked) {\n\t            if (indexOf(model, val) < 0) {\n\t              model.push(val);\n\t            }\n\t          } else {\n\t            model.$remove(val);\n\t          }\n\t        } else {\n\t          self.set(getBooleanValue());\n\t        }\n\t      };\n\t\n\t      this.on('change', this.listener);\n\t      if (el.hasAttribute('checked')) {\n\t        this.afterBind = this.listener;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      var el = this.el;\n\t      if (isArray(value)) {\n\t        el.checked = indexOf(value, this.getValue()) > -1;\n\t      } else {\n\t        if (el.hasOwnProperty('_trueValue')) {\n\t          el.checked = looseEqual(value, el._trueValue);\n\t        } else {\n\t          el.checked = !!value;\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  var select = {\n\t\n\t    bind: function bind() {\n\t      var self = this;\n\t      var el = this.el;\n\t\n\t      // method to force update DOM using latest value.\n\t      this.forceUpdate = function () {\n\t        if (self._watcher) {\n\t          self.update(self._watcher.get());\n\t        }\n\t      };\n\t\n\t      // check if this is a multiple select\n\t      var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t      // attach listener\n\t      this.listener = function () {\n\t        var value = getValue(el, multiple);\n\t        value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t        self.set(value);\n\t      };\n\t      this.on('change', this.listener);\n\t\n\t      // if has initial value, set afterBind\n\t      var initValue = getValue(el, multiple, true);\n\t      if (multiple && initValue.length || !multiple && initValue !== null) {\n\t        this.afterBind = this.listener;\n\t      }\n\t\n\t      // All major browsers except Firefox resets\n\t      // selectedIndex with value -1 to 0 when the element\n\t      // is appended to a new parent, therefore we have to\n\t      // force a DOM update whenever that happens...\n\t      this.vm.$on('hook:attached', this.forceUpdate);\n\t    },\n\t\n\t    update: function update(value) {\n\t      var el = this.el;\n\t      el.selectedIndex = -1;\n\t      var multi = this.multiple && isArray(value);\n\t      var options = el.options;\n\t      var i = options.length;\n\t      var op, val;\n\t      while (i--) {\n\t        op = options[i];\n\t        val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t        /* eslint-disable eqeqeq */\n\t        op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t        /* eslint-enable eqeqeq */\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      /* istanbul ignore next */\n\t      this.vm.$off('hook:attached', this.forceUpdate);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get select value\n\t   *\n\t   * @param {SelectElement} el\n\t   * @param {Boolean} multi\n\t   * @param {Boolean} init\n\t   * @return {Array|*}\n\t   */\n\t\n\t  function getValue(el, multi, init) {\n\t    var res = multi ? [] : null;\n\t    var op, val, selected;\n\t    for (var i = 0, l = el.options.length; i < l; i++) {\n\t      op = el.options[i];\n\t      selected = init ? op.hasAttribute('selected') : op.selected;\n\t      if (selected) {\n\t        val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t        if (multi) {\n\t          res.push(val);\n\t        } else {\n\t          return val;\n\t        }\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Native Array.indexOf uses strict equal, but in this\n\t   * case we need to match string/numbers with custom equal.\n\t   *\n\t   * @param {Array} arr\n\t   * @param {*} val\n\t   */\n\t\n\t  function indexOf$1(arr, val) {\n\t    var i = arr.length;\n\t    while (i--) {\n\t      if (looseEqual(arr[i], val)) {\n\t        return i;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  var radio = {\n\t\n\t    bind: function bind() {\n\t      var self = this;\n\t      var el = this.el;\n\t\n\t      this.getValue = function () {\n\t        // value overwrite via v-bind:value\n\t        if (el.hasOwnProperty('_value')) {\n\t          return el._value;\n\t        }\n\t        var val = el.value;\n\t        if (self.params.number) {\n\t          val = toNumber(val);\n\t        }\n\t        return val;\n\t      };\n\t\n\t      this.listener = function () {\n\t        self.set(self.getValue());\n\t      };\n\t      this.on('change', this.listener);\n\t\n\t      if (el.hasAttribute('checked')) {\n\t        this.afterBind = this.listener;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      this.el.checked = looseEqual(value, this.getValue());\n\t    }\n\t  };\n\t\n\t  var text$2 = {\n\t\n\t    bind: function bind() {\n\t      var self = this;\n\t      var el = this.el;\n\t      var isRange = el.type === 'range';\n\t      var lazy = this.params.lazy;\n\t      var number = this.params.number;\n\t      var debounce = this.params.debounce;\n\t\n\t      // handle composition events.\n\t      //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t      // skip this for Android because it handles composition\n\t      // events quite differently. Android doesn't trigger\n\t      // composition events for language input methods e.g.\n\t      // Chinese, but instead triggers them for spelling\n\t      // suggestions... (see Discussion/#162)\n\t      var composing = false;\n\t      if (!isAndroid && !isRange) {\n\t        this.on('compositionstart', function () {\n\t          composing = true;\n\t        });\n\t        this.on('compositionend', function () {\n\t          composing = false;\n\t          // in IE11 the \"compositionend\" event fires AFTER\n\t          // the \"input\" event, so the input handler is blocked\n\t          // at the end... have to call it here.\n\t          //\n\t          // #1327: in lazy mode this is unecessary.\n\t          if (!lazy) {\n\t            self.listener();\n\t          }\n\t        });\n\t      }\n\t\n\t      // prevent messing with the input when user is typing,\n\t      // and force update on blur.\n\t      this.focused = false;\n\t      if (!isRange) {\n\t        this.on('focus', function () {\n\t          self.focused = true;\n\t        });\n\t        this.on('blur', function () {\n\t          self.focused = false;\n\t          // do not sync value after fragment removal (#2017)\n\t          if (!self._frag || self._frag.inserted) {\n\t            self.rawListener();\n\t          }\n\t        });\n\t      }\n\t\n\t      // Now attach the main listener\n\t      this.listener = this.rawListener = function () {\n\t        if (composing || !self._bound) {\n\t          return;\n\t        }\n\t        var val = number || isRange ? toNumber(el.value) : el.value;\n\t        self.set(val);\n\t        // force update on next tick to avoid lock & same value\n\t        // also only update when user is not typing\n\t        nextTick(function () {\n\t          if (self._bound && !self.focused) {\n\t            self.update(self._watcher.value);\n\t          }\n\t        });\n\t      };\n\t\n\t      // apply debounce\n\t      if (debounce) {\n\t        this.listener = _debounce(this.listener, debounce);\n\t      }\n\t\n\t      // Support jQuery events, since jQuery.trigger() doesn't\n\t      // trigger native events in some cases and some plugins\n\t      // rely on $.trigger()\n\t      //\n\t      // We want to make sure if a listener is attached using\n\t      // jQuery, it is also removed with jQuery, that's why\n\t      // we do the check for each directive instance and\n\t      // store that check result on itself. This also allows\n\t      // easier test coverage control by unsetting the global\n\t      // jQuery variable in tests.\n\t      this.hasjQuery = typeof jQuery === 'function';\n\t      if (this.hasjQuery) {\n\t        jQuery(el).on('change', this.listener);\n\t        if (!lazy) {\n\t          jQuery(el).on('input', this.listener);\n\t        }\n\t      } else {\n\t        this.on('change', this.listener);\n\t        if (!lazy) {\n\t          this.on('input', this.listener);\n\t        }\n\t      }\n\t\n\t      // IE9 doesn't fire input event on backspace/del/cut\n\t      if (!lazy && isIE9) {\n\t        this.on('cut', function () {\n\t          nextTick(self.listener);\n\t        });\n\t        this.on('keyup', function (e) {\n\t          if (e.keyCode === 46 || e.keyCode === 8) {\n\t            self.listener();\n\t          }\n\t        });\n\t      }\n\t\n\t      // set initial value if present\n\t      if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t        this.afterBind = this.listener;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      this.el.value = _toString(value);\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      var el = this.el;\n\t      if (this.hasjQuery) {\n\t        jQuery(el).off('change', this.listener);\n\t        jQuery(el).off('input', this.listener);\n\t      }\n\t    }\n\t  };\n\t\n\t  var handlers = {\n\t    text: text$2,\n\t    radio: radio,\n\t    select: select,\n\t    checkbox: checkbox\n\t  };\n\t\n\t  var model = {\n\t\n\t    priority: MODEL,\n\t    twoWay: true,\n\t    handlers: handlers,\n\t    params: ['lazy', 'number', 'debounce'],\n\t\n\t    /**\n\t     * Possible elements:\n\t     *   <select>\n\t     *   <textarea>\n\t     *   <input type=\"*\">\n\t     *     - text\n\t     *     - checkbox\n\t     *     - radio\n\t     *     - number\n\t     */\n\t\n\t    bind: function bind() {\n\t      // friendly warning...\n\t      this.checkFilters();\n\t      if (this.hasRead && !this.hasWrite) {\n\t        'development' !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t      }\n\t      var el = this.el;\n\t      var tag = el.tagName;\n\t      var handler;\n\t      if (tag === 'INPUT') {\n\t        handler = handlers[el.type] || handlers.text;\n\t      } else if (tag === 'SELECT') {\n\t        handler = handlers.select;\n\t      } else if (tag === 'TEXTAREA') {\n\t        handler = handlers.text;\n\t      } else {\n\t        'development' !== 'production' && warn('v-model does not support element type: ' + tag);\n\t        return;\n\t      }\n\t      el.__v_model = this;\n\t      handler.bind.call(this);\n\t      this.update = handler.update;\n\t      this._unbind = handler.unbind;\n\t    },\n\t\n\t    /**\n\t     * Check read/write filter stats.\n\t     */\n\t\n\t    checkFilters: function checkFilters() {\n\t      var filters = this.filters;\n\t      if (!filters) return;\n\t      var i = filters.length;\n\t      while (i--) {\n\t        var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t        if (typeof filter === 'function' || filter.read) {\n\t          this.hasRead = true;\n\t        }\n\t        if (filter.write) {\n\t          this.hasWrite = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      this.el.__v_model = null;\n\t      this._unbind && this._unbind();\n\t    }\n\t  };\n\t\n\t  var show = {\n\t\n\t    bind: function bind() {\n\t      // check else block\n\t      var next = this.el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        this.elseEl = next;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      this.apply(this.el, value);\n\t      if (this.elseEl) {\n\t        this.apply(this.elseEl, !value);\n\t      }\n\t    },\n\t\n\t    apply: function apply(el, value) {\n\t      if (inDoc(el)) {\n\t        applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t      } else {\n\t        toggle();\n\t      }\n\t      function toggle() {\n\t        el.style.display = value ? '' : 'none';\n\t      }\n\t    }\n\t  };\n\t\n\t  var templateCache = new Cache(1000);\n\t  var idSelectorCache = new Cache(1000);\n\t\n\t  var map = {\n\t    efault: [0, '', ''],\n\t    legend: [1, '<fieldset>', '</fieldset>'],\n\t    tr: [2, '<table><tbody>', '</tbody></table>'],\n\t    col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t  };\n\t\n\t  map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\t  map.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\t  map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\t  map.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t  /**\n\t   * Check if a node is a supported template node with a\n\t   * DocumentFragment content.\n\t   *\n\t   * @param {Node} node\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isRealTemplate(node) {\n\t    return isTemplate(node) && node.content instanceof DocumentFragment;\n\t  }\n\t\n\t  var tagRE$1 = /<([\\w:]+)/;\n\t  var entityRE = /&#?\\w+?;/;\n\t\n\t  /**\n\t   * Convert a string template to a DocumentFragment.\n\t   * Determines correct wrapping by tag types. Wrapping\n\t   * strategy found in jQuery & component/domify.\n\t   *\n\t   * @param {String} templateString\n\t   * @param {Boolean} raw\n\t   * @return {DocumentFragment}\n\t   */\n\t\n\t  function stringToFragment(templateString, raw) {\n\t    // try a cache hit first\n\t    var hit = templateCache.get(templateString);\n\t    if (hit) {\n\t      return hit;\n\t    }\n\t\n\t    var frag = document.createDocumentFragment();\n\t    var tagMatch = templateString.match(tagRE$1);\n\t    var entityMatch = entityRE.test(templateString);\n\t\n\t    if (!tagMatch && !entityMatch) {\n\t      // text only, return a single text node.\n\t      frag.appendChild(document.createTextNode(templateString));\n\t    } else {\n\t\n\t      var tag = tagMatch && tagMatch[1];\n\t      var wrap = map[tag] || map.efault;\n\t      var depth = wrap[0];\n\t      var prefix = wrap[1];\n\t      var suffix = wrap[2];\n\t      var node = document.createElement('div');\n\t\n\t      if (!raw) {\n\t        templateString = templateString.trim();\n\t      }\n\t      node.innerHTML = prefix + templateString + suffix;\n\t      while (depth--) {\n\t        node = node.lastChild;\n\t      }\n\t\n\t      var child;\n\t      /* eslint-disable no-cond-assign */\n\t      while (child = node.firstChild) {\n\t        /* eslint-enable no-cond-assign */\n\t        frag.appendChild(child);\n\t      }\n\t    }\n\t\n\t    templateCache.put(templateString, frag);\n\t    return frag;\n\t  }\n\t\n\t  /**\n\t   * Convert a template node to a DocumentFragment.\n\t   *\n\t   * @param {Node} node\n\t   * @return {DocumentFragment}\n\t   */\n\t\n\t  function nodeToFragment(node) {\n\t    // if its a template tag and the browser supports it,\n\t    // its content is already a document fragment.\n\t    if (isRealTemplate(node)) {\n\t      trimNode(node.content);\n\t      return node.content;\n\t    }\n\t    // script template\n\t    if (node.tagName === 'SCRIPT') {\n\t      return stringToFragment(node.textContent);\n\t    }\n\t    // normal node, clone it to avoid mutating the original\n\t    var clonedNode = cloneNode(node);\n\t    var frag = document.createDocumentFragment();\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = clonedNode.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t    trimNode(frag);\n\t    return frag;\n\t  }\n\t\n\t  // Test for the presence of the Safari template cloning bug\n\t  // https://bugs.webkit.org/showug.cgi?id=137755\n\t  var hasBrokenTemplate = function () {\n\t    /* istanbul ignore else */\n\t    if (inBrowser) {\n\t      var a = document.createElement('div');\n\t      a.innerHTML = '<template>1</template>';\n\t      return !a.cloneNode(true).firstChild.innerHTML;\n\t    } else {\n\t      return false;\n\t    }\n\t  }();\n\t\n\t  // Test for IE10/11 textarea placeholder clone bug\n\t  var hasTextareaCloneBug = function () {\n\t    /* istanbul ignore else */\n\t    if (inBrowser) {\n\t      var t = document.createElement('textarea');\n\t      t.placeholder = 't';\n\t      return t.cloneNode(true).value === 't';\n\t    } else {\n\t      return false;\n\t    }\n\t  }();\n\t\n\t  /**\n\t   * 1. Deal with Safari cloning nested <template> bug by\n\t   *    manually cloning all template instances.\n\t   * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t   *    the correct value after cloning.\n\t   *\n\t   * @param {Element|DocumentFragment} node\n\t   * @return {Element|DocumentFragment}\n\t   */\n\t\n\t  function cloneNode(node) {\n\t    if (!node.querySelectorAll) {\n\t      return node.cloneNode();\n\t    }\n\t    var res = node.cloneNode(true);\n\t    var i, original, cloned;\n\t    /* istanbul ignore if */\n\t    if (hasBrokenTemplate) {\n\t      var tempClone = res;\n\t      if (isRealTemplate(node)) {\n\t        node = node.content;\n\t        tempClone = res.content;\n\t      }\n\t      original = node.querySelectorAll('template');\n\t      if (original.length) {\n\t        cloned = tempClone.querySelectorAll('template');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t        }\n\t      }\n\t    }\n\t    /* istanbul ignore if */\n\t    if (hasTextareaCloneBug) {\n\t      if (node.tagName === 'TEXTAREA') {\n\t        res.value = node.value;\n\t      } else {\n\t        original = node.querySelectorAll('textarea');\n\t        if (original.length) {\n\t          cloned = res.querySelectorAll('textarea');\n\t          i = cloned.length;\n\t          while (i--) {\n\t            cloned[i].value = original[i].value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Process the template option and normalizes it into a\n\t   * a DocumentFragment that can be used as a partial or a\n\t   * instance template.\n\t   *\n\t   * @param {*} template\n\t   *        Possible values include:\n\t   *        - DocumentFragment object\n\t   *        - Node object of type Template\n\t   *        - id selector: '#some-template-id'\n\t   *        - template string: '<div><span>{{msg}}</span></div>'\n\t   * @param {Boolean} shouldClone\n\t   * @param {Boolean} raw\n\t   *        inline HTML interpolation. Do not check for id\n\t   *        selector and keep whitespace in the string.\n\t   * @return {DocumentFragment|undefined}\n\t   */\n\t\n\t  function parseTemplate(template, shouldClone, raw) {\n\t    var node, frag;\n\t\n\t    // if the template is already a document fragment,\n\t    // do nothing\n\t    if (template instanceof DocumentFragment) {\n\t      trimNode(template);\n\t      return shouldClone ? cloneNode(template) : template;\n\t    }\n\t\n\t    if (typeof template === 'string') {\n\t      // id selector\n\t      if (!raw && template.charAt(0) === '#') {\n\t        // id selector can be cached too\n\t        frag = idSelectorCache.get(template);\n\t        if (!frag) {\n\t          node = document.getElementById(template.slice(1));\n\t          if (node) {\n\t            frag = nodeToFragment(node);\n\t            // save selector to cache\n\t            idSelectorCache.put(template, frag);\n\t          }\n\t        }\n\t      } else {\n\t        // normal string template\n\t        frag = stringToFragment(template, raw);\n\t      }\n\t    } else if (template.nodeType) {\n\t      // a direct node\n\t      frag = nodeToFragment(template);\n\t    }\n\t\n\t    return frag && shouldClone ? cloneNode(frag) : frag;\n\t  }\n\t\n\t  var template = Object.freeze({\n\t    cloneNode: cloneNode,\n\t    parseTemplate: parseTemplate\n\t  });\n\t\n\t  /**\n\t   * Abstraction for a partially-compiled fragment.\n\t   * Can optionally compile content with a child scope.\n\t   *\n\t   * @param {Function} linker\n\t   * @param {Vue} vm\n\t   * @param {DocumentFragment} frag\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   */\n\t  function Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t    this.children = [];\n\t    this.childFrags = [];\n\t    this.vm = vm;\n\t    this.scope = scope;\n\t    this.inserted = false;\n\t    this.parentFrag = parentFrag;\n\t    if (parentFrag) {\n\t      parentFrag.childFrags.push(this);\n\t    }\n\t    this.unlink = linker(vm, frag, host, scope, this);\n\t    var single = this.single = frag.childNodes.length === 1 &&\n\t    // do not go single mode if the only node is an anchor\n\t    !frag.childNodes[0].__vue_anchor;\n\t    if (single) {\n\t      this.node = frag.childNodes[0];\n\t      this.before = singleBefore;\n\t      this.remove = singleRemove;\n\t    } else {\n\t      this.node = createAnchor('fragment-start');\n\t      this.end = createAnchor('fragment-end');\n\t      this.frag = frag;\n\t      prepend(this.node, frag);\n\t      frag.appendChild(this.end);\n\t      this.before = multiBefore;\n\t      this.remove = multiRemove;\n\t    }\n\t    this.node.__vfrag__ = this;\n\t  }\n\t\n\t  /**\n\t   * Call attach/detach for all components contained within\n\t   * this fragment. Also do so recursively for all child\n\t   * fragments.\n\t   *\n\t   * @param {Function} hook\n\t   */\n\t\n\t  Fragment.prototype.callHook = function (hook) {\n\t    var i, l;\n\t    for (i = 0, l = this.children.length; i < l; i++) {\n\t      hook(this.children[i]);\n\t    }\n\t    for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t      this.childFrags[i].callHook(hook);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Destroy the fragment.\n\t   */\n\t\n\t  Fragment.prototype.destroy = function () {\n\t    if (this.parentFrag) {\n\t      this.parentFrag.childFrags.$remove(this);\n\t    }\n\t    this.unlink();\n\t  };\n\t\n\t  /**\n\t   * Insert fragment before target, single node version\n\t   *\n\t   * @param {Node} target\n\t   * @param {Boolean} withTransition\n\t   */\n\t\n\t  function singleBefore(target, withTransition) {\n\t    this.inserted = true;\n\t    var method = withTransition !== false ? beforeWithTransition : before;\n\t    method(this.node, target, this.vm);\n\t    if (inDoc(this.node)) {\n\t      this.callHook(attach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Remove fragment, single node version\n\t   */\n\t\n\t  function singleRemove() {\n\t    this.inserted = false;\n\t    var shouldCallRemove = inDoc(this.node);\n\t    var self = this;\n\t    self.callHook(destroyChild);\n\t    removeWithTransition(this.node, this.vm, function () {\n\t      if (shouldCallRemove) {\n\t        self.callHook(detach);\n\t      }\n\t      self.destroy();\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Insert fragment before target, multi-nodes version\n\t   *\n\t   * @param {Node} target\n\t   * @param {Boolean} withTransition\n\t   */\n\t\n\t  function multiBefore(target, withTransition) {\n\t    this.inserted = true;\n\t    var vm = this.vm;\n\t    var method = withTransition !== false ? beforeWithTransition : before;\n\t    mapNodeRange(this.node, this.end, function (node) {\n\t      method(node, target, vm);\n\t    });\n\t    if (inDoc(this.node)) {\n\t      this.callHook(attach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Remove fragment, multi-nodes version\n\t   */\n\t\n\t  function multiRemove() {\n\t    this.inserted = false;\n\t    var self = this;\n\t    var shouldCallRemove = inDoc(this.node);\n\t    self.callHook(destroyChild);\n\t    removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t      if (shouldCallRemove) {\n\t        self.callHook(detach);\n\t      }\n\t      self.destroy();\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call attach hook for a Vue instance.\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function attach(child) {\n\t    if (!child._isAttached) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Call destroy for all contained instances,\n\t   * with remove:false and defer:true.\n\t   * Defer is necessary because we need to\n\t   * keep the children to call detach hooks\n\t   * on them.\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function destroyChild(child) {\n\t    child.$destroy(false, true);\n\t  }\n\t\n\t  /**\n\t   * Call detach hook for a Vue instance.\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function detach(child) {\n\t    if (child._isAttached) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  var linkerCache = new Cache(5000);\n\t\n\t  /**\n\t   * A factory that can be used to create instances of a\n\t   * fragment. Caches the compiled linker if possible.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|String} el\n\t   */\n\t  function FragmentFactory(vm, el) {\n\t    this.vm = vm;\n\t    var template;\n\t    var isString = typeof el === 'string';\n\t    if (isString || isTemplate(el)) {\n\t      template = parseTemplate(el, true);\n\t    } else {\n\t      template = document.createDocumentFragment();\n\t      template.appendChild(el);\n\t    }\n\t    this.template = template;\n\t    // linker can be cached, but only for components\n\t    var linker;\n\t    var cid = vm.constructor.cid;\n\t    if (cid > 0) {\n\t      var cacheId = cid + (isString ? el : el.outerHTML);\n\t      linker = linkerCache.get(cacheId);\n\t      if (!linker) {\n\t        linker = compile(template, vm.$options, true);\n\t        linkerCache.put(cacheId, linker);\n\t      }\n\t    } else {\n\t      linker = compile(template, vm.$options, true);\n\t    }\n\t    this.linker = linker;\n\t  }\n\t\n\t  /**\n\t   * Create a fragment instance with given host and scope.\n\t   *\n\t   * @param {Vue} host\n\t   * @param {Object} scope\n\t   * @param {Fragment} parentFrag\n\t   */\n\t\n\t  FragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t    var frag = cloneNode(this.template);\n\t    return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t  };\n\t\n\t  var vIf = {\n\t\n\t    priority: IF,\n\t\n\t    bind: function bind() {\n\t      var el = this.el;\n\t      if (!el.__vue__) {\n\t        // check else block\n\t        var next = el.nextElementSibling;\n\t        if (next && getAttr(next, 'v-else') !== null) {\n\t          remove(next);\n\t          this.elseFactory = new FragmentFactory(this.vm, next);\n\t        }\n\t        // check main block\n\t        this.anchor = createAnchor('v-if');\n\t        replace(el, this.anchor);\n\t        this.factory = new FragmentFactory(this.vm, el);\n\t      } else {\n\t        'development' !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t        this.invalid = true;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      if (this.invalid) return;\n\t      if (value) {\n\t        if (!this.frag) {\n\t          this.insert();\n\t        }\n\t      } else {\n\t        this.remove();\n\t      }\n\t    },\n\t\n\t    insert: function insert() {\n\t      if (this.elseFrag) {\n\t        this.elseFrag.remove();\n\t        this.elseFrag = null;\n\t      }\n\t      this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t      this.frag.before(this.anchor);\n\t    },\n\t\n\t    remove: function remove() {\n\t      if (this.frag) {\n\t        this.frag.remove();\n\t        this.frag = null;\n\t      }\n\t      if (this.elseFactory && !this.elseFrag) {\n\t        this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t        this.elseFrag.before(this.anchor);\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      if (this.frag) {\n\t        this.frag.destroy();\n\t      }\n\t    }\n\t  };\n\t\n\t  var uid$1 = 0;\n\t\n\t  var vFor = {\n\t\n\t    priority: FOR,\n\t\n\t    params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t    bind: function bind() {\n\t      // support \"item in items\" syntax\n\t      var inMatch = this.expression.match(/(.*) in (.*)/);\n\t      if (inMatch) {\n\t        var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t        if (itMatch) {\n\t          this.iterator = itMatch[1].trim();\n\t          this.alias = itMatch[2].trim();\n\t        } else {\n\t          this.alias = inMatch[1].trim();\n\t        }\n\t        this.expression = inMatch[2];\n\t      }\n\t\n\t      if (!this.alias) {\n\t        'development' !== 'production' && warn('Alias is required in v-for.');\n\t        return;\n\t      }\n\t\n\t      // uid as a cache identifier\n\t      this.id = '__v-for__' + ++uid$1;\n\t\n\t      // check if this is an option list,\n\t      // so that we know if we need to update the <select>'s\n\t      // v-model when the option list has changed.\n\t      // because v-model has a lower priority than v-for,\n\t      // the v-model is not bound here yet, so we have to\n\t      // retrive it in the actual updateModel() function.\n\t      var tag = this.el.tagName;\n\t      this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t      // setup anchor nodes\n\t      this.start = createAnchor('v-for-start');\n\t      this.end = createAnchor('v-for-end');\n\t      replace(this.el, this.end);\n\t      before(this.start, this.end);\n\t\n\t      // cache\n\t      this.cache = Object.create(null);\n\t\n\t      // fragment factory\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    },\n\t\n\t    update: function update(data) {\n\t      this.diff(data);\n\t      this.updateRef();\n\t      this.updateModel();\n\t    },\n\t\n\t    /**\n\t     * Diff, based on new data and old data, determine the\n\t     * minimum amount of DOM manipulations needed to make the\n\t     * DOM reflect the new data Array.\n\t     *\n\t     * The algorithm diffs the new data Array by storing a\n\t     * hidden reference to an owner vm instance on previously\n\t     * seen data. This allows us to achieve O(n) which is\n\t     * better than a levenshtein distance based algorithm,\n\t     * which is O(m * n).\n\t     *\n\t     * @param {Array} data\n\t     */\n\t\n\t    diff: function diff(data) {\n\t      // check if the Array was converted from an Object\n\t      var item = data[0];\n\t      var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t      var trackByKey = this.params.trackBy;\n\t      var oldFrags = this.frags;\n\t      var frags = this.frags = new Array(data.length);\n\t      var alias = this.alias;\n\t      var iterator = this.iterator;\n\t      var start = this.start;\n\t      var end = this.end;\n\t      var inDocument = inDoc(start);\n\t      var init = !oldFrags;\n\t      var i, l, frag, key, value, primitive;\n\t\n\t      // First pass, go through the new Array and fill up\n\t      // the new frags array. If a piece of data has a cached\n\t      // instance for it, we reuse it. Otherwise build a new\n\t      // instance.\n\t      for (i = 0, l = data.length; i < l; i++) {\n\t        item = data[i];\n\t        key = convertedFromObject ? item.$key : null;\n\t        value = convertedFromObject ? item.$value : item;\n\t        primitive = !isObject(value);\n\t        frag = !init && this.getCachedFrag(value, i, key);\n\t        if (frag) {\n\t          // reusable fragment\n\t          frag.reused = true;\n\t          // update $index\n\t          frag.scope.$index = i;\n\t          // update $key\n\t          if (key) {\n\t            frag.scope.$key = key;\n\t          }\n\t          // update iterator\n\t          if (iterator) {\n\t            frag.scope[iterator] = key !== null ? key : i;\n\t          }\n\t          // update data for track-by, object repeat &\n\t          // primitive values.\n\t          if (trackByKey || convertedFromObject || primitive) {\n\t            frag.scope[alias] = value;\n\t          }\n\t        } else {\n\t          // new isntance\n\t          frag = this.create(value, alias, i, key);\n\t          frag.fresh = !init;\n\t        }\n\t        frags[i] = frag;\n\t        if (init) {\n\t          frag.before(end);\n\t        }\n\t      }\n\t\n\t      // we're done for the initial render.\n\t      if (init) {\n\t        return;\n\t      }\n\t\n\t      // Second pass, go through the old fragments and\n\t      // destroy those who are not reused (and remove them\n\t      // from cache)\n\t      var removalIndex = 0;\n\t      var totalRemoved = oldFrags.length - frags.length;\n\t      for (i = 0, l = oldFrags.length; i < l; i++) {\n\t        frag = oldFrags[i];\n\t        if (!frag.reused) {\n\t          this.deleteCachedFrag(frag);\n\t          this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t        }\n\t      }\n\t\n\t      // Final pass, move/insert new fragments into the\n\t      // right place.\n\t      var targetPrev, prevEl, currentPrev;\n\t      var insertionIndex = 0;\n\t      for (i = 0, l = frags.length; i < l; i++) {\n\t        frag = frags[i];\n\t        // this is the frag that we should be after\n\t        targetPrev = frags[i - 1];\n\t        prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t        if (frag.reused && !frag.staggerCb) {\n\t          currentPrev = findPrevFrag(frag, start, this.id);\n\t          if (currentPrev !== targetPrev && (!currentPrev ||\n\t          // optimization for moving a single item.\n\t          // thanks to suggestions by @livoras in #1807\n\t          findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t            this.move(frag, prevEl);\n\t          }\n\t        } else {\n\t          // new instance, or still in stagger.\n\t          // insert with updated stagger index.\n\t          this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t        }\n\t        frag.reused = frag.fresh = false;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Create a new fragment instance.\n\t     *\n\t     * @param {*} value\n\t     * @param {String} alias\n\t     * @param {Number} index\n\t     * @param {String} [key]\n\t     * @return {Fragment}\n\t     */\n\t\n\t    create: function create(value, alias, index, key) {\n\t      var host = this._host;\n\t      // create iteration scope\n\t      var parentScope = this._scope || this.vm;\n\t      var scope = Object.create(parentScope);\n\t      // ref holder for the scope\n\t      scope.$refs = Object.create(parentScope.$refs);\n\t      scope.$els = Object.create(parentScope.$els);\n\t      // make sure point $parent to parent scope\n\t      scope.$parent = parentScope;\n\t      // for two-way binding on alias\n\t      scope.$forContext = this;\n\t      // define scope properties\n\t      defineReactive(scope, alias, value);\n\t      defineReactive(scope, '$index', index);\n\t      if (key) {\n\t        defineReactive(scope, '$key', key);\n\t      } else if (scope.$key) {\n\t        // avoid accidental fallback\n\t        def(scope, '$key', null);\n\t      }\n\t      if (this.iterator) {\n\t        defineReactive(scope, this.iterator, key !== null ? key : index);\n\t      }\n\t      var frag = this.factory.create(host, scope, this._frag);\n\t      frag.forId = this.id;\n\t      this.cacheFrag(value, frag, index, key);\n\t      return frag;\n\t    },\n\t\n\t    /**\n\t     * Update the v-ref on owner vm.\n\t     */\n\t\n\t    updateRef: function updateRef() {\n\t      var ref = this.descriptor.ref;\n\t      if (!ref) return;\n\t      var hash = (this._scope || this.vm).$refs;\n\t      var refs;\n\t      if (!this.fromObject) {\n\t        refs = this.frags.map(findVmFromFrag);\n\t      } else {\n\t        refs = {};\n\t        this.frags.forEach(function (frag) {\n\t          refs[frag.scope.$key] = findVmFromFrag(frag);\n\t        });\n\t      }\n\t      hash[ref] = refs;\n\t    },\n\t\n\t    /**\n\t     * For option lists, update the containing v-model on\n\t     * parent <select>.\n\t     */\n\t\n\t    updateModel: function updateModel() {\n\t      if (this.isOption) {\n\t        var parent = this.start.parentNode;\n\t        var model = parent && parent.__v_model;\n\t        if (model) {\n\t          model.forceUpdate();\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Insert a fragment. Handles staggering.\n\t     *\n\t     * @param {Fragment} frag\n\t     * @param {Number} index\n\t     * @param {Node} prevEl\n\t     * @param {Boolean} inDocument\n\t     */\n\t\n\t    insert: function insert(frag, index, prevEl, inDocument) {\n\t      if (frag.staggerCb) {\n\t        frag.staggerCb.cancel();\n\t        frag.staggerCb = null;\n\t      }\n\t      var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t      if (inDocument && staggerAmount) {\n\t        // create an anchor and insert it synchronously,\n\t        // so that we can resolve the correct order without\n\t        // worrying about some elements not inserted yet\n\t        var anchor = frag.staggerAnchor;\n\t        if (!anchor) {\n\t          anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t          anchor.__vfrag__ = frag;\n\t        }\n\t        after(anchor, prevEl);\n\t        var op = frag.staggerCb = cancellable(function () {\n\t          frag.staggerCb = null;\n\t          frag.before(anchor);\n\t          remove(anchor);\n\t        });\n\t        setTimeout(op, staggerAmount);\n\t      } else {\n\t        frag.before(prevEl.nextSibling);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Remove a fragment. Handles staggering.\n\t     *\n\t     * @param {Fragment} frag\n\t     * @param {Number} index\n\t     * @param {Number} total\n\t     * @param {Boolean} inDocument\n\t     */\n\t\n\t    remove: function remove(frag, index, total, inDocument) {\n\t      if (frag.staggerCb) {\n\t        frag.staggerCb.cancel();\n\t        frag.staggerCb = null;\n\t        // it's not possible for the same frag to be removed\n\t        // twice, so if we have a pending stagger callback,\n\t        // it means this frag is queued for enter but removed\n\t        // before its transition started. Since it is already\n\t        // destroyed, we can just leave it in detached state.\n\t        return;\n\t      }\n\t      var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t      if (inDocument && staggerAmount) {\n\t        var op = frag.staggerCb = cancellable(function () {\n\t          frag.staggerCb = null;\n\t          frag.remove();\n\t        });\n\t        setTimeout(op, staggerAmount);\n\t      } else {\n\t        frag.remove();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Move a fragment to a new position.\n\t     * Force no transition.\n\t     *\n\t     * @param {Fragment} frag\n\t     * @param {Node} prevEl\n\t     */\n\t\n\t    move: function move(frag, prevEl) {\n\t      frag.before(prevEl.nextSibling, false);\n\t    },\n\t\n\t    /**\n\t     * Cache a fragment using track-by or the object key.\n\t     *\n\t     * @param {*} value\n\t     * @param {Fragment} frag\n\t     * @param {Number} index\n\t     * @param {String} [key]\n\t     */\n\t\n\t    cacheFrag: function cacheFrag(value, frag, index, key) {\n\t      var trackByKey = this.params.trackBy;\n\t      var cache = this.cache;\n\t      var primitive = !isObject(value);\n\t      var id;\n\t      if (key || trackByKey || primitive) {\n\t        id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t        if (!cache[id]) {\n\t          cache[id] = frag;\n\t        } else if (trackByKey !== '$index') {\n\t          'development' !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        id = this.id;\n\t        if (hasOwn(value, id)) {\n\t          if (value[id] === null) {\n\t            value[id] = frag;\n\t          } else {\n\t            'development' !== 'production' && this.warnDuplicate(value);\n\t          }\n\t        } else {\n\t          def(value, id, frag);\n\t        }\n\t      }\n\t      frag.raw = value;\n\t    },\n\t\n\t    /**\n\t     * Get a cached fragment from the value/index/key\n\t     *\n\t     * @param {*} value\n\t     * @param {Number} index\n\t     * @param {String} key\n\t     * @return {Fragment}\n\t     */\n\t\n\t    getCachedFrag: function getCachedFrag(value, index, key) {\n\t      var trackByKey = this.params.trackBy;\n\t      var primitive = !isObject(value);\n\t      var frag;\n\t      if (key || trackByKey || primitive) {\n\t        var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t        frag = this.cache[id];\n\t      } else {\n\t        frag = value[this.id];\n\t      }\n\t      if (frag && (frag.reused || frag.fresh)) {\n\t        'development' !== 'production' && this.warnDuplicate(value);\n\t      }\n\t      return frag;\n\t    },\n\t\n\t    /**\n\t     * Delete a fragment from cache.\n\t     *\n\t     * @param {Fragment} frag\n\t     */\n\t\n\t    deleteCachedFrag: function deleteCachedFrag(frag) {\n\t      var value = frag.raw;\n\t      var trackByKey = this.params.trackBy;\n\t      var scope = frag.scope;\n\t      var index = scope.$index;\n\t      // fix #948: avoid accidentally fall through to\n\t      // a parent repeater which happens to have $key.\n\t      var key = hasOwn(scope, '$key') && scope.$key;\n\t      var primitive = !isObject(value);\n\t      if (trackByKey || key || primitive) {\n\t        var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t        this.cache[id] = null;\n\t      } else {\n\t        value[this.id] = null;\n\t        frag.raw = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Get the stagger amount for an insertion/removal.\n\t     *\n\t     * @param {Fragment} frag\n\t     * @param {Number} index\n\t     * @param {Number} total\n\t     * @param {String} type\n\t     */\n\t\n\t    getStagger: function getStagger(frag, index, total, type) {\n\t      type = type + 'Stagger';\n\t      var trans = frag.node.__v_trans;\n\t      var hooks = trans && trans.hooks;\n\t      var hook = hooks && (hooks[type] || hooks.stagger);\n\t      return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t    },\n\t\n\t    /**\n\t     * Pre-process the value before piping it through the\n\t     * filters. This is passed to and called by the watcher.\n\t     */\n\t\n\t    _preProcess: function _preProcess(value) {\n\t      // regardless of type, store the un-filtered raw value.\n\t      this.rawValue = value;\n\t      return value;\n\t    },\n\t\n\t    /**\n\t     * Post-process the value after it has been piped through\n\t     * the filters. This is passed to and called by the watcher.\n\t     *\n\t     * It is necessary for this to be called during the\n\t     * wathcer's dependency collection phase because we want\n\t     * the v-for to update when the source Object is mutated.\n\t     */\n\t\n\t    _postProcess: function _postProcess(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      } else if (isPlainObject(value)) {\n\t        // convert plain object to array.\n\t        var keys = Object.keys(value);\n\t        var i = keys.length;\n\t        var res = new Array(i);\n\t        var key;\n\t        while (i--) {\n\t          key = keys[i];\n\t          res[i] = {\n\t            $key: key,\n\t            $value: value[key]\n\t          };\n\t        }\n\t        return res;\n\t      } else {\n\t        if (typeof value === 'number') {\n\t          value = range(value);\n\t        }\n\t        return value || [];\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      if (this.descriptor.ref) {\n\t        (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t      }\n\t      if (this.frags) {\n\t        var i = this.frags.length;\n\t        var frag;\n\t        while (i--) {\n\t          frag = this.frags[i];\n\t          this.deleteCachedFrag(frag);\n\t          frag.destroy();\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Helper to find the previous element that is a fragment\n\t   * anchor. This is necessary because a destroyed frag's\n\t   * element could still be lingering in the DOM before its\n\t   * leaving transition finishes, but its inserted flag\n\t   * should have been set to false so we can skip them.\n\t   *\n\t   * If this is a block repeat, we want to make sure we only\n\t   * return frag that is bound to this v-for. (see #929)\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Comment|Text} anchor\n\t   * @param {String} id\n\t   * @return {Fragment}\n\t   */\n\t\n\t  function findPrevFrag(frag, anchor, id) {\n\t    var el = frag.node.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__vfrag__;\n\t    while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t      el = el.previousSibling;\n\t      /* istanbul ignore if */\n\t      if (!el) return;\n\t      frag = el.__vfrag__;\n\t    }\n\t    return frag;\n\t  }\n\t\n\t  /**\n\t   * Find a vm from a fragment.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  function findVmFromFrag(frag) {\n\t    var node = frag.node;\n\t    // handle multi-node frag\n\t    if (frag.end) {\n\t      while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t        node = node.nextSibling;\n\t      }\n\t    }\n\t    return node.__vue__;\n\t  }\n\t\n\t  /**\n\t   * Create a range array from given number.\n\t   *\n\t   * @param {Number} n\n\t   * @return {Array}\n\t   */\n\t\n\t  function range(n) {\n\t    var i = -1;\n\t    var ret = new Array(n);\n\t    while (++i < n) {\n\t      ret[i] = i;\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  if (true) {\n\t    vFor.warnDuplicate = function (value) {\n\t      warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t    };\n\t  }\n\t\n\t  var html = {\n\t\n\t    bind: function bind() {\n\t      // a comment node means this is a binding for\n\t      // {{{ inline unescaped html }}}\n\t      if (this.el.nodeType === 8) {\n\t        // hold nodes\n\t        this.nodes = [];\n\t        // replace the placeholder with proper anchor\n\t        this.anchor = createAnchor('v-html');\n\t        replace(this.el, this.anchor);\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      value = _toString(value);\n\t      if (this.nodes) {\n\t        this.swap(value);\n\t      } else {\n\t        this.el.innerHTML = value;\n\t      }\n\t    },\n\t\n\t    swap: function swap(value) {\n\t      // remove old nodes\n\t      var i = this.nodes.length;\n\t      while (i--) {\n\t        remove(this.nodes[i]);\n\t      }\n\t      // convert new value to a fragment\n\t      // do not attempt to retrieve from id selector\n\t      var frag = parseTemplate(value, true, true);\n\t      // save a reference to these nodes so we can remove later\n\t      this.nodes = toArray(frag.childNodes);\n\t      before(frag, this.anchor);\n\t    }\n\t  };\n\t\n\t  var text = {\n\t\n\t    bind: function bind() {\n\t      this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t    },\n\t\n\t    update: function update(value) {\n\t      this.el[this.attr] = _toString(value);\n\t    }\n\t  };\n\t\n\t  // must export plain object\n\t  var publicDirectives = {\n\t    text: text,\n\t    html: html,\n\t    'for': vFor,\n\t    'if': vIf,\n\t    show: show,\n\t    model: model,\n\t    on: on,\n\t    bind: bind,\n\t    el: el,\n\t    ref: ref,\n\t    cloak: cloak\n\t  };\n\t\n\t  var queue$1 = [];\n\t  var queued = false;\n\t\n\t  /**\n\t   * Push a job into the queue.\n\t   *\n\t   * @param {Function} job\n\t   */\n\t\n\t  function pushJob(job) {\n\t    queue$1.push(job);\n\t    if (!queued) {\n\t      queued = true;\n\t      nextTick(flush);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Flush the queue, and do one forced reflow before\n\t   * triggering transitions.\n\t   */\n\t\n\t  function flush() {\n\t    // Force layout\n\t    var f = document.documentElement.offsetHeight;\n\t    for (var i = 0; i < queue$1.length; i++) {\n\t      queue$1[i]();\n\t    }\n\t    queue$1 = [];\n\t    queued = false;\n\t    // dummy return, so js linters don't complain about\n\t    // unused variable f\n\t    return f;\n\t  }\n\t\n\t  var TYPE_TRANSITION = 1;\n\t  var TYPE_ANIMATION = 2;\n\t  var transDurationProp = transitionProp + 'Duration';\n\t  var animDurationProp = animationProp + 'Duration';\n\t\n\t  /**\n\t   * A Transition object that encapsulates the state and logic\n\t   * of the transition.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} id\n\t   * @param {Object} hooks\n\t   * @param {Vue} vm\n\t   */\n\t  function Transition(el, id, hooks, vm) {\n\t    this.id = id;\n\t    this.el = el;\n\t    this.enterClass = id + '-enter';\n\t    this.leaveClass = id + '-leave';\n\t    this.hooks = hooks;\n\t    this.vm = vm;\n\t    // async state\n\t    this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t    this.justEntered = false;\n\t    this.entered = this.left = false;\n\t    this.typeCache = {};\n\t    // bind\n\t    var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t      self[m] = bind$1(self[m], self);\n\t    });\n\t  }\n\t\n\t  var p$1 = Transition.prototype;\n\t\n\t  /**\n\t   * Start an entering transition.\n\t   *\n\t   * 1. enter transition triggered\n\t   * 2. call beforeEnter hook\n\t   * 3. add enter class\n\t   * 4. insert/show element\n\t   * 5. call enter hook (with possible explicit js callback)\n\t   * 6. reflow\n\t   * 7. based on transition type:\n\t   *    - transition:\n\t   *        remove class now, wait for transitionend,\n\t   *        then done if there's no explicit js callback.\n\t   *    - animation:\n\t   *        wait for animationend, remove class,\n\t   *        then done if there's no explicit js callback.\n\t   *    - no css transition:\n\t   *        done now if there's no explicit js callback.\n\t   * 8. wait for either done or js callback, then call\n\t   *    afterEnter hook.\n\t   *\n\t   * @param {Function} op - insert/show the element\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  p$1.enter = function (op, cb) {\n\t    this.cancelPending();\n\t    this.callHook('beforeEnter');\n\t    this.cb = cb;\n\t    addClass(this.el, this.enterClass);\n\t    op();\n\t    this.entered = false;\n\t    this.callHookWithCb('enter');\n\t    if (this.entered) {\n\t      return; // user called done synchronously.\n\t    }\n\t    this.cancel = this.hooks && this.hooks.enterCancelled;\n\t    pushJob(this.enterNextTick);\n\t  };\n\t\n\t  /**\n\t   * The \"nextTick\" phase of an entering transition, which is\n\t   * to be pushed into a queue and executed after a reflow so\n\t   * that removing the class can trigger a CSS transition.\n\t   */\n\t\n\t  p$1.enterNextTick = function () {\n\t\n\t    // Important hack:\n\t    // in Chrome, if a just-entered element is applied the\n\t    // leave class while its interpolated property still has\n\t    // a very small value (within one frame), Chrome will\n\t    // skip the leave transition entirely and not firing the\n\t    // transtionend event. Therefore we need to protected\n\t    // against such cases using a one-frame timeout.\n\t    this.justEntered = true;\n\t    var self = this;\n\t    setTimeout(function () {\n\t      self.justEntered = false;\n\t    }, 17);\n\t\n\t    var enterDone = this.enterDone;\n\t    var type = this.getCssTransitionType(this.enterClass);\n\t    if (!this.pendingJsCb) {\n\t      if (type === TYPE_TRANSITION) {\n\t        // trigger transition by removing enter class now\n\t        removeClass(this.el, this.enterClass);\n\t        this.setupCssCb(transitionEndEvent, enterDone);\n\t      } else if (type === TYPE_ANIMATION) {\n\t        this.setupCssCb(animationEndEvent, enterDone);\n\t      } else {\n\t        enterDone();\n\t      }\n\t    } else if (type === TYPE_TRANSITION) {\n\t      removeClass(this.el, this.enterClass);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * The \"cleanup\" phase of an entering transition.\n\t   */\n\t\n\t  p$1.enterDone = function () {\n\t    this.entered = true;\n\t    this.cancel = this.pendingJsCb = null;\n\t    removeClass(this.el, this.enterClass);\n\t    this.callHook('afterEnter');\n\t    if (this.cb) this.cb();\n\t  };\n\t\n\t  /**\n\t   * Start a leaving transition.\n\t   *\n\t   * 1. leave transition triggered.\n\t   * 2. call beforeLeave hook\n\t   * 3. add leave class (trigger css transition)\n\t   * 4. call leave hook (with possible explicit js callback)\n\t   * 5. reflow if no explicit js callback is provided\n\t   * 6. based on transition type:\n\t   *    - transition or animation:\n\t   *        wait for end event, remove class, then done if\n\t   *        there's no explicit js callback.\n\t   *    - no css transition:\n\t   *        done if there's no explicit js callback.\n\t   * 7. wait for either done or js callback, then call\n\t   *    afterLeave hook.\n\t   *\n\t   * @param {Function} op - remove/hide the element\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  p$1.leave = function (op, cb) {\n\t    this.cancelPending();\n\t    this.callHook('beforeLeave');\n\t    this.op = op;\n\t    this.cb = cb;\n\t    addClass(this.el, this.leaveClass);\n\t    this.left = false;\n\t    this.callHookWithCb('leave');\n\t    if (this.left) {\n\t      return; // user called done synchronously.\n\t    }\n\t    this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t    // only need to handle leaveDone if\n\t    // 1. the transition is already done (synchronously called\n\t    //    by the user, which causes this.op set to null)\n\t    // 2. there's no explicit js callback\n\t    if (this.op && !this.pendingJsCb) {\n\t      // if a CSS transition leaves immediately after enter,\n\t      // the transitionend event never fires. therefore we\n\t      // detect such cases and end the leave immediately.\n\t      if (this.justEntered) {\n\t        this.leaveDone();\n\t      } else {\n\t        pushJob(this.leaveNextTick);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * The \"nextTick\" phase of a leaving transition.\n\t   */\n\t\n\t  p$1.leaveNextTick = function () {\n\t    var type = this.getCssTransitionType(this.leaveClass);\n\t    if (type) {\n\t      var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t      this.setupCssCb(event, this.leaveDone);\n\t    } else {\n\t      this.leaveDone();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * The \"cleanup\" phase of a leaving transition.\n\t   */\n\t\n\t  p$1.leaveDone = function () {\n\t    this.left = true;\n\t    this.cancel = this.pendingJsCb = null;\n\t    this.op();\n\t    removeClass(this.el, this.leaveClass);\n\t    this.callHook('afterLeave');\n\t    if (this.cb) this.cb();\n\t    this.op = null;\n\t  };\n\t\n\t  /**\n\t   * Cancel any pending callbacks from a previously running\n\t   * but not finished transition.\n\t   */\n\t\n\t  p$1.cancelPending = function () {\n\t    this.op = this.cb = null;\n\t    var hasPending = false;\n\t    if (this.pendingCssCb) {\n\t      hasPending = true;\n\t      off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t      this.pendingCssEvent = this.pendingCssCb = null;\n\t    }\n\t    if (this.pendingJsCb) {\n\t      hasPending = true;\n\t      this.pendingJsCb.cancel();\n\t      this.pendingJsCb = null;\n\t    }\n\t    if (hasPending) {\n\t      removeClass(this.el, this.enterClass);\n\t      removeClass(this.el, this.leaveClass);\n\t    }\n\t    if (this.cancel) {\n\t      this.cancel.call(this.vm, this.el);\n\t      this.cancel = null;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Call a user-provided synchronous hook function.\n\t   *\n\t   * @param {String} type\n\t   */\n\t\n\t  p$1.callHook = function (type) {\n\t    if (this.hooks && this.hooks[type]) {\n\t      this.hooks[type].call(this.vm, this.el);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Call a user-provided, potentially-async hook function.\n\t   * We check for the length of arguments to see if the hook\n\t   * expects a `done` callback. If true, the transition's end\n\t   * will be determined by when the user calls that callback;\n\t   * otherwise, the end is determined by the CSS transition or\n\t   * animation.\n\t   *\n\t   * @param {String} type\n\t   */\n\t\n\t  p$1.callHookWithCb = function (type) {\n\t    var hook = this.hooks && this.hooks[type];\n\t    if (hook) {\n\t      if (hook.length > 1) {\n\t        this.pendingJsCb = cancellable(this[type + 'Done']);\n\t      }\n\t      hook.call(this.vm, this.el, this.pendingJsCb);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get an element's transition type based on the\n\t   * calculated styles.\n\t   *\n\t   * @param {String} className\n\t   * @return {Number}\n\t   */\n\t\n\t  p$1.getCssTransitionType = function (className) {\n\t    /* istanbul ignore if */\n\t    if (!transitionEndEvent ||\n\t    // skip CSS transitions if page is not visible -\n\t    // this solves the issue of transitionend events not\n\t    // firing until the page is visible again.\n\t    // pageVisibility API is supported in IE10+, same as\n\t    // CSS transitions.\n\t    document.hidden ||\n\t    // explicit js-only transition\n\t    this.hooks && this.hooks.css === false ||\n\t    // element is hidden\n\t    isHidden(this.el)) {\n\t      return;\n\t    }\n\t    var type = this.typeCache[className];\n\t    if (type) return type;\n\t    var inlineStyles = this.el.style;\n\t    var computedStyles = window.getComputedStyle(this.el);\n\t    var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t    if (transDuration && transDuration !== '0s') {\n\t      type = TYPE_TRANSITION;\n\t    } else {\n\t      var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t      if (animDuration && animDuration !== '0s') {\n\t        type = TYPE_ANIMATION;\n\t      }\n\t    }\n\t    if (type) {\n\t      this.typeCache[className] = type;\n\t    }\n\t    return type;\n\t  };\n\t\n\t  /**\n\t   * Setup a CSS transitionend/animationend callback.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} cb\n\t   */\n\t\n\t  p$1.setupCssCb = function (event, cb) {\n\t    this.pendingCssEvent = event;\n\t    var self = this;\n\t    var el = this.el;\n\t    var onEnd = this.pendingCssCb = function (e) {\n\t      if (e.target === el) {\n\t        off(el, event, onEnd);\n\t        self.pendingCssEvent = self.pendingCssCb = null;\n\t        if (!self.pendingJsCb && cb) {\n\t          cb();\n\t        }\n\t      }\n\t    };\n\t    on$1(el, event, onEnd);\n\t  };\n\t\n\t  /**\n\t   * Check if an element is hidden - in that case we can just\n\t   * skip the transition alltogether.\n\t   *\n\t   * @param {Element} el\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isHidden(el) {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t\n\t  var transition = {\n\t\n\t    priority: TRANSITION,\n\t\n\t    update: function update(id, oldId) {\n\t      var el = this.el;\n\t      // resolve on owner vm\n\t      var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t      id = id || 'v';\n\t      // apply on closest vm\n\t      el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n\t      if (oldId) {\n\t        removeClass(el, oldId + '-transition');\n\t      }\n\t      addClass(el, id + '-transition');\n\t    }\n\t  };\n\t\n\t  var bindingModes = config._propBindingModes;\n\t\n\t  var propDef = {\n\t\n\t    bind: function bind() {\n\t\n\t      var child = this.vm;\n\t      var parent = child._context;\n\t      // passed in from compiler directly\n\t      var prop = this.descriptor.prop;\n\t      var childKey = prop.path;\n\t      var parentKey = prop.parentPath;\n\t      var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t      var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t        val = coerceProp(prop, val);\n\t        if (assertProp(prop, val)) {\n\t          child[childKey] = val;\n\t        }\n\t      }, {\n\t        twoWay: twoWay,\n\t        filters: prop.filters,\n\t        // important: props need to be observed on the\n\t        // v-for scope if present\n\t        scope: this._scope\n\t      });\n\t\n\t      // set the child initial value.\n\t      initProp(child, prop, parentWatcher.value);\n\t\n\t      // setup two-way binding\n\t      if (twoWay) {\n\t        // important: defer the child watcher creation until\n\t        // the created hook (after data observation)\n\t        var self = this;\n\t        child.$once('pre-hook:created', function () {\n\t          self.childWatcher = new Watcher(child, childKey, function (val) {\n\t            parentWatcher.set(val);\n\t          }, {\n\t            // ensure sync upward before parent sync down.\n\t            // this is necessary in cases e.g. the child\n\t            // mutates a prop array, then replaces it. (#1683)\n\t            sync: true\n\t          });\n\t        });\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      this.parentWatcher.teardown();\n\t      if (this.childWatcher) {\n\t        this.childWatcher.teardown();\n\t      }\n\t    }\n\t  };\n\t\n\t  var component = {\n\t\n\t    priority: COMPONENT,\n\t\n\t    params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t    /**\n\t     * Setup. Two possible usages:\n\t     *\n\t     * - static:\n\t     *   <comp> or <div v-component=\"comp\">\n\t     *\n\t     * - dynamic:\n\t     *   <component :is=\"view\">\n\t     */\n\t\n\t    bind: function bind() {\n\t      if (!this.el.__vue__) {\n\t        // keep-alive cache\n\t        this.keepAlive = this.params.keepAlive;\n\t        if (this.keepAlive) {\n\t          this.cache = {};\n\t        }\n\t        // check inline-template\n\t        if (this.params.inlineTemplate) {\n\t          // extract inline template as a DocumentFragment\n\t          this.inlineTemplate = extractContent(this.el, true);\n\t        }\n\t        // component resolution related state\n\t        this.pendingComponentCb = this.Component = null;\n\t        // transition related state\n\t        this.pendingRemovals = 0;\n\t        this.pendingRemovalCb = null;\n\t        // create a ref anchor\n\t        this.anchor = createAnchor('v-component');\n\t        replace(this.el, this.anchor);\n\t        // remove is attribute.\n\t        // this is removed during compilation, but because compilation is\n\t        // cached, when the component is used elsewhere this attribute\n\t        // will remain at link time.\n\t        this.el.removeAttribute('is');\n\t        // remove ref, same as above\n\t        if (this.descriptor.ref) {\n\t          this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t        }\n\t        // if static, build right now.\n\t        if (this.literal) {\n\t          this.setComponent(this.expression);\n\t        }\n\t      } else {\n\t        'development' !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Public update, called by the watcher in the dynamic\n\t     * literal scenario, e.g. <component :is=\"view\">\n\t     */\n\t\n\t    update: function update(value) {\n\t      if (!this.literal) {\n\t        this.setComponent(value);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Switch dynamic components. May resolve the component\n\t     * asynchronously, and perform transition based on\n\t     * specified transition mode. Accepts a few additional\n\t     * arguments specifically for vue-router.\n\t     *\n\t     * The callback is called when the full transition is\n\t     * finished.\n\t     *\n\t     * @param {String} value\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    setComponent: function setComponent(value, cb) {\n\t      this.invalidatePending();\n\t      if (!value) {\n\t        // just remove current\n\t        this.unbuild(true);\n\t        this.remove(this.childVM, cb);\n\t        this.childVM = null;\n\t      } else {\n\t        var self = this;\n\t        this.resolveComponent(value, function () {\n\t          self.mountComponent(cb);\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Resolve the component constructor to use when creating\n\t     * the child vm.\n\t     */\n\t\n\t    resolveComponent: function resolveComponent(id, cb) {\n\t      var self = this;\n\t      this.pendingComponentCb = cancellable(function (Component) {\n\t        self.ComponentName = Component.options.name || id;\n\t        self.Component = Component;\n\t        cb();\n\t      });\n\t      this.vm._resolveComponent(id, this.pendingComponentCb);\n\t    },\n\t\n\t    /**\n\t     * Create a new instance using the current constructor and\n\t     * replace the existing instance. This method doesn't care\n\t     * whether the new component and the old one are actually\n\t     * the same.\n\t     *\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    mountComponent: function mountComponent(cb) {\n\t      // actual mount\n\t      this.unbuild(true);\n\t      var self = this;\n\t      var activateHook = this.Component.options.activate;\n\t      var cached = this.getCached();\n\t      var newComponent = this.build();\n\t      if (activateHook && !cached) {\n\t        this.waitingFor = newComponent;\n\t        activateHook.call(newComponent, function () {\n\t          if (self.waitingFor !== newComponent) {\n\t            return;\n\t          }\n\t          self.waitingFor = null;\n\t          self.transition(newComponent, cb);\n\t        });\n\t      } else {\n\t        // update ref for kept-alive component\n\t        if (cached) {\n\t          newComponent._updateRef();\n\t        }\n\t        this.transition(newComponent, cb);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * When the component changes or unbinds before an async\n\t     * constructor is resolved, we need to invalidate its\n\t     * pending callback.\n\t     */\n\t\n\t    invalidatePending: function invalidatePending() {\n\t      if (this.pendingComponentCb) {\n\t        this.pendingComponentCb.cancel();\n\t        this.pendingComponentCb = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Instantiate/insert a new child vm.\n\t     * If keep alive and has cached instance, insert that\n\t     * instance; otherwise build a new one and cache it.\n\t     *\n\t     * @param {Object} [extraOptions]\n\t     * @return {Vue} - the created instance\n\t     */\n\t\n\t    build: function build(extraOptions) {\n\t      var cached = this.getCached();\n\t      if (cached) {\n\t        return cached;\n\t      }\n\t      if (this.Component) {\n\t        // default options\n\t        var options = {\n\t          name: this.ComponentName,\n\t          el: cloneNode(this.el),\n\t          template: this.inlineTemplate,\n\t          // make sure to add the child with correct parent\n\t          // if this is a transcluded component, its parent\n\t          // should be the transclusion host.\n\t          parent: this._host || this.vm,\n\t          // if no inline-template, then the compiled\n\t          // linker can be cached for better performance.\n\t          _linkerCachable: !this.inlineTemplate,\n\t          _ref: this.descriptor.ref,\n\t          _asComponent: true,\n\t          _isRouterView: this._isRouterView,\n\t          // if this is a transcluded component, context\n\t          // will be the common parent vm of this instance\n\t          // and its host.\n\t          _context: this.vm,\n\t          // if this is inside an inline v-for, the scope\n\t          // will be the intermediate scope created for this\n\t          // repeat fragment. this is used for linking props\n\t          // and container directives.\n\t          _scope: this._scope,\n\t          // pass in the owner fragment of this component.\n\t          // this is necessary so that the fragment can keep\n\t          // track of its contained components in order to\n\t          // call attach/detach hooks for them.\n\t          _frag: this._frag\n\t        };\n\t        // extra options\n\t        // in 1.0.0 this is used by vue-router only\n\t        /* istanbul ignore if */\n\t        if (extraOptions) {\n\t          extend(options, extraOptions);\n\t        }\n\t        var child = new this.Component(options);\n\t        if (this.keepAlive) {\n\t          this.cache[this.Component.cid] = child;\n\t        }\n\t        /* istanbul ignore if */\n\t        if ('development' !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n\t          warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t        }\n\t        return child;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Try to get a cached instance of the current component.\n\t     *\n\t     * @return {Vue|undefined}\n\t     */\n\t\n\t    getCached: function getCached() {\n\t      return this.keepAlive && this.cache[this.Component.cid];\n\t    },\n\t\n\t    /**\n\t     * Teardown the current child, but defers cleanup so\n\t     * that we can separate the destroy and removal steps.\n\t     *\n\t     * @param {Boolean} defer\n\t     */\n\t\n\t    unbuild: function unbuild(defer) {\n\t      if (this.waitingFor) {\n\t        this.waitingFor.$destroy();\n\t        this.waitingFor = null;\n\t      }\n\t      var child = this.childVM;\n\t      if (!child || this.keepAlive) {\n\t        if (child) {\n\t          // remove ref\n\t          child._updateRef(true);\n\t        }\n\t        return;\n\t      }\n\t      // the sole purpose of `deferCleanup` is so that we can\n\t      // \"deactivate\" the vm right now and perform DOM removal\n\t      // later.\n\t      child.$destroy(false, defer);\n\t    },\n\t\n\t    /**\n\t     * Remove current destroyed child and manually do\n\t     * the cleanup after removal.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    remove: function remove(child, cb) {\n\t      var keepAlive = this.keepAlive;\n\t      if (child) {\n\t        // we may have a component switch when a previous\n\t        // component is still being transitioned out.\n\t        // we want to trigger only one lastest insertion cb\n\t        // when the existing transition finishes. (#1119)\n\t        this.pendingRemovals++;\n\t        this.pendingRemovalCb = cb;\n\t        var self = this;\n\t        child.$remove(function () {\n\t          self.pendingRemovals--;\n\t          if (!keepAlive) child._cleanup();\n\t          if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t            self.pendingRemovalCb();\n\t            self.pendingRemovalCb = null;\n\t          }\n\t        });\n\t      } else if (cb) {\n\t        cb();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Actually swap the components, depending on the\n\t     * transition mode. Defaults to simultaneous.\n\t     *\n\t     * @param {Vue} target\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    transition: function transition(target, cb) {\n\t      var self = this;\n\t      var current = this.childVM;\n\t      // for devtool inspection\n\t      if (true) {\n\t        if (current) current._inactive = true;\n\t        target._inactive = false;\n\t      }\n\t      this.childVM = target;\n\t      switch (self.params.transitionMode) {\n\t        case 'in-out':\n\t          target.$before(self.anchor, function () {\n\t            self.remove(current, cb);\n\t          });\n\t          break;\n\t        case 'out-in':\n\t          self.remove(current, function () {\n\t            target.$before(self.anchor, cb);\n\t          });\n\t          break;\n\t        default:\n\t          self.remove(current);\n\t          target.$before(self.anchor, cb);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Unbind.\n\t     */\n\t\n\t    unbind: function unbind() {\n\t      this.invalidatePending();\n\t      // Do not defer cleanup when unbinding\n\t      this.unbuild();\n\t      // destroy all keep-alive cached instances\n\t      if (this.cache) {\n\t        for (var key in this.cache) {\n\t          this.cache[key].$destroy();\n\t        }\n\t        this.cache = null;\n\t      }\n\t    }\n\t  };\n\t\n\t  var vClass = {\n\t\n\t    deep: true,\n\t\n\t    update: function update(value) {\n\t      if (value && typeof value === 'string') {\n\t        this.handleObject(stringToObject(value));\n\t      } else if (isPlainObject(value)) {\n\t        this.handleObject(value);\n\t      } else if (isArray(value)) {\n\t        this.handleArray(value);\n\t      } else {\n\t        this.cleanup();\n\t      }\n\t    },\n\t\n\t    handleObject: function handleObject(value) {\n\t      this.cleanup(value);\n\t      var keys = this.prevKeys = Object.keys(value);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        var key = keys[i];\n\t        if (value[key]) {\n\t          addClass(this.el, key);\n\t        } else {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    },\n\t\n\t    handleArray: function handleArray(value) {\n\t      this.cleanup(value);\n\t      for (var i = 0, l = value.length; i < l; i++) {\n\t        if (value[i]) {\n\t          addClass(this.el, value[i]);\n\t        }\n\t      }\n\t      this.prevKeys = value.slice();\n\t    },\n\t\n\t    cleanup: function cleanup(value) {\n\t      if (this.prevKeys) {\n\t        var i = this.prevKeys.length;\n\t        while (i--) {\n\t          var key = this.prevKeys[i];\n\t          if (key && (!value || !contains$1(value, key))) {\n\t            removeClass(this.el, key);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  function stringToObject(value) {\n\t    var res = {};\n\t    var keys = value.trim().split(/\\s+/);\n\t    var i = keys.length;\n\t    while (i--) {\n\t      res[keys[i]] = true;\n\t    }\n\t    return res;\n\t  }\n\t\n\t  function contains$1(value, key) {\n\t    return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t  }\n\t\n\t  var internalDirectives = {\n\t    style: style,\n\t    'class': vClass,\n\t    component: component,\n\t    prop: propDef,\n\t    transition: transition\n\t  };\n\t\n\t  var propBindingModes = config._propBindingModes;\n\t  var empty = {};\n\t\n\t  // regexes\n\t  var identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\t  var settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t  /**\n\t   * Compile props on a root element and return\n\t   * a props link function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Array} propOptions\n\t   * @return {Function} propsLinkFn\n\t   */\n\t\n\t  function compileProps(el, propOptions) {\n\t    var props = [];\n\t    var names = Object.keys(propOptions);\n\t    var i = names.length;\n\t    var options, name, attr, value, path, parsed, prop;\n\t    while (i--) {\n\t      name = names[i];\n\t      options = propOptions[name] || empty;\n\t\n\t      if ('development' !== 'production' && name === '$data') {\n\t        warn('Do not use $data as prop.');\n\t        continue;\n\t      }\n\t\n\t      // props could contain dashes, which will be\n\t      // interpreted as minus calculations by the parser\n\t      // so we need to camelize the path here\n\t      path = camelize(name);\n\t      if (!identRE$1.test(path)) {\n\t        'development' !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t        continue;\n\t      }\n\t\n\t      prop = {\n\t        name: name,\n\t        path: path,\n\t        options: options,\n\t        mode: propBindingModes.ONE_WAY,\n\t        raw: null\n\t      };\n\t\n\t      attr = hyphenate(name);\n\t      // first check dynamic version\n\t      if ((value = getBindAttr(el, attr)) === null) {\n\t        if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t          prop.mode = propBindingModes.TWO_WAY;\n\t        } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t          prop.mode = propBindingModes.ONE_TIME;\n\t        }\n\t      }\n\t      if (value !== null) {\n\t        // has dynamic binding!\n\t        prop.raw = value;\n\t        parsed = parseDirective(value);\n\t        value = parsed.expression;\n\t        prop.filters = parsed.filters;\n\t        // check binding type\n\t        if (isLiteral(value)) {\n\t          // for expressions containing literal numbers and\n\t          // booleans, there's no need to setup a prop binding,\n\t          // so we can optimize them as a one-time set.\n\t          prop.optimizedLiteral = true;\n\t        } else {\n\t          prop.dynamic = true;\n\t          // check non-settable path for two-way bindings\n\t          if ('development' !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n\t            prop.mode = propBindingModes.ONE_WAY;\n\t            warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t          }\n\t        }\n\t        prop.parentPath = value;\n\t\n\t        // warn required two-way\n\t        if ('development' !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n\t          warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t        }\n\t      } else if ((value = getAttr(el, attr)) !== null) {\n\t        // has literal binding!\n\t        prop.raw = value;\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        'development' !== 'production' && warn('Missing required prop: ' + name);\n\t      }\n\t      // push prop\n\t      props.push(prop);\n\t    }\n\t    return makePropsLinkFn(props);\n\t  }\n\t\n\t  /**\n\t   * Build a function that applies props to a vm.\n\t   *\n\t   * @param {Array} props\n\t   * @return {Function} propsLinkFn\n\t   */\n\t\n\t  function makePropsLinkFn(props) {\n\t    return function propsLinkFn(vm, scope) {\n\t      // store resolved props info\n\t      vm._props = {};\n\t      var i = props.length;\n\t      var prop, path, options, value, raw;\n\t      while (i--) {\n\t        prop = props[i];\n\t        raw = prop.raw;\n\t        path = prop.path;\n\t        options = prop.options;\n\t        vm._props[path] = prop;\n\t        if (raw === null) {\n\t          // initialize absent prop\n\t          initProp(vm, prop, getDefault(vm, options));\n\t        } else if (prop.dynamic) {\n\t          // dynamic prop\n\t          if (vm._context) {\n\t            if (prop.mode === propBindingModes.ONE_TIME) {\n\t              // one time binding\n\t              value = (scope || vm._context).$get(prop.parentPath);\n\t              initProp(vm, prop, value);\n\t            } else {\n\t              // dynamic binding\n\t              vm._bindDir({\n\t                name: 'prop',\n\t                def: propDef,\n\t                prop: prop\n\t              }, null, null, scope); // el, host, scope\n\t            }\n\t          } else {\n\t            'development' !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n\t          }\n\t        } else if (prop.optimizedLiteral) {\n\t          // optimized literal, cast it and just set once\n\t          var stripped = stripQuotes(raw);\n\t          value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          // string literal, but we need to cater for\n\t          // Boolean props with no value\n\t          value = options.type === Boolean && raw === '' ? true : raw;\n\t          initProp(vm, prop, value);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Get the default value of a prop.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Object} options\n\t   * @return {*}\n\t   */\n\t\n\t  function getDefault(vm, options) {\n\t    // no default, return undefined\n\t    if (!hasOwn(options, 'default')) {\n\t      // absent boolean value defaults to false\n\t      return options.type === Boolean ? false : undefined;\n\t    }\n\t    var def = options['default'];\n\t    // warn against non-factory defaults for Object & Array\n\t    if (isObject(def)) {\n\t      'development' !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t    }\n\t    // call factory function for non-Function types\n\t    return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t  }\n\t\n\t  // special binding prefixes\n\t  var bindRE = /^v-bind:|^:/;\n\t  var onRE = /^v-on:|^@/;\n\t  var argRE = /:(.*)$/;\n\t  var modifierRE = /\\.[^\\.]+/g;\n\t  var transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t  // terminal directives\n\t  var terminalDirectives = ['for', 'if'];\n\t\n\t  // default directive priority\n\t  var DEFAULT_PRIORITY = 1000;\n\t\n\t  /**\n\t   * Compile a template and return a reusable composite link\n\t   * function, which recursively contains more link functions\n\t   * inside. This top level compile function would normally\n\t   * be called on instance root nodes, but can also be used\n\t   * for partial compilation if the partial argument is true.\n\t   *\n\t   * The returned composite link function, when called, will\n\t   * return an unlink function that tearsdown all directives\n\t   * created during the linking phase.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Object} options\n\t   * @param {Boolean} partial\n\t   * @return {Function}\n\t   */\n\t\n\t  function compile(el, options, partial) {\n\t    // link function for the node itself.\n\t    var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t    // link function for the childNodes\n\t    var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t    /**\n\t     * A composite linker function to be called on a already\n\t     * compiled piece of DOM, which instantiates all directive\n\t     * instances.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {Element|DocumentFragment} el\n\t     * @param {Vue} [host] - host vm of transcluded content\n\t     * @param {Object} [scope] - v-for scope\n\t     * @param {Fragment} [frag] - link context fragment\n\t     * @return {Function|undefined}\n\t     */\n\t\n\t    return function compositeLinkFn(vm, el, host, scope, frag) {\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(el.childNodes);\n\t      // link\n\t      var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t        if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t        if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t      }, vm);\n\t      return makeUnlinkFn(vm, dirs);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Apply a linker to a vm/element pair and capture the\n\t   * directives created during the process.\n\t   *\n\t   * @param {Function} linker\n\t   * @param {Vue} vm\n\t   */\n\t\n\t  function linkAndCapture(linker, vm) {\n\t    var originalDirCount = vm._directives.length;\n\t    linker();\n\t    var dirs = vm._directives.slice(originalDirCount);\n\t    dirs.sort(directiveComparator);\n\t    for (var i = 0, l = dirs.length; i < l; i++) {\n\t      dirs[i]._bind();\n\t    }\n\t    return dirs;\n\t  }\n\t\n\t  /**\n\t   * Directive priority sort comparator\n\t   *\n\t   * @param {Object} a\n\t   * @param {Object} b\n\t   */\n\t\n\t  function directiveComparator(a, b) {\n\t    a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t    b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t    return a > b ? -1 : a === b ? 0 : 1;\n\t  }\n\t\n\t  /**\n\t   * Linker functions return an unlink function that\n\t   * tearsdown all directives instances generated during\n\t   * the process.\n\t   *\n\t   * We create unlink functions with only the necessary\n\t   * information to avoid retaining additional closures.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Array} dirs\n\t   * @param {Vue} [context]\n\t   * @param {Array} [contextDirs]\n\t   * @return {Function}\n\t   */\n\t\n\t  function makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t    return function unlink(destroying) {\n\t      teardownDirs(vm, dirs, destroying);\n\t      if (context && contextDirs) {\n\t        teardownDirs(context, contextDirs);\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Teardown partial linked directives.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Array} dirs\n\t   * @param {Boolean} destroying\n\t   */\n\t\n\t  function teardownDirs(vm, dirs, destroying) {\n\t    var i = dirs.length;\n\t    while (i--) {\n\t      dirs[i]._teardown();\n\t      if (!destroying) {\n\t        vm._directives.$remove(dirs[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Compile link props on an instance.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   * @param {Object} props\n\t   * @param {Object} [scope]\n\t   * @return {Function}\n\t   */\n\t\n\t  function compileAndLinkProps(vm, el, props, scope) {\n\t    var propsLinkFn = compileProps(el, props);\n\t    var propDirs = linkAndCapture(function () {\n\t      propsLinkFn(vm, scope);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, propDirs);\n\t  }\n\t\n\t  /**\n\t   * Compile the root element of an instance.\n\t   *\n\t   * 1. attrs on context container (context scope)\n\t   * 2. attrs on the component template root node, if\n\t   *    replace:true (child scope)\n\t   *\n\t   * If this is a fragment instance, we only need to compile 1.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @param {Object} contextOptions\n\t   * @return {Function}\n\t   */\n\t\n\t  function compileRoot(el, options, contextOptions) {\n\t    var containerAttrs = options._containerAttrs;\n\t    var replacerAttrs = options._replacerAttrs;\n\t    var contextLinkFn, replacerLinkFn;\n\t\n\t    // only need to compile other attributes for\n\t    // non-fragment instances\n\t    if (el.nodeType !== 11) {\n\t      // for components, container and replacer need to be\n\t      // compiled separately and linked in different scopes.\n\t      if (options._asComponent) {\n\t        // 2. container attributes\n\t        if (containerAttrs && contextOptions) {\n\t          contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t        }\n\t        if (replacerAttrs) {\n\t          // 3. replacer attributes\n\t          replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t        }\n\t      } else {\n\t        // non-component, just compile as a normal element.\n\t        replacerLinkFn = compileDirectives(el.attributes, options);\n\t      }\n\t    } else if ('development' !== 'production' && containerAttrs) {\n\t      // warn container directives for fragment instances\n\t      var names = containerAttrs.filter(function (attr) {\n\t        // allow vue-loader/vueify scoped css attributes\n\t        return attr.name.indexOf('_v-') < 0 &&\n\t        // allow event listeners\n\t        !onRE.test(attr.name) &&\n\t        // allow slots\n\t        attr.name !== 'slot';\n\t      }).map(function (attr) {\n\t        return '\"' + attr.name + '\"';\n\t      });\n\t      if (names.length) {\n\t        var plural = names.length > 1;\n\t        warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t      }\n\t    }\n\t\n\t    return function rootLinkFn(vm, el, scope) {\n\t      // link context scope dirs\n\t      var context = vm._context;\n\t      var contextDirs;\n\t      if (context && contextLinkFn) {\n\t        contextDirs = linkAndCapture(function () {\n\t          contextLinkFn(context, el, null, scope);\n\t        }, context);\n\t      }\n\t\n\t      // link self\n\t      var selfDirs = linkAndCapture(function () {\n\t        if (replacerLinkFn) replacerLinkFn(vm, el);\n\t      }, vm);\n\t\n\t      // return the unlink function that tearsdown context\n\t      // container directives.\n\t      return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Compile a node and return a nodeLinkFn based on the\n\t   * node type.\n\t   *\n\t   * @param {Node} node\n\t   * @param {Object} options\n\t   * @return {Function|null}\n\t   */\n\t\n\t  function compileNode(node, options) {\n\t    var type = node.nodeType;\n\t    if (type === 1 && node.tagName !== 'SCRIPT') {\n\t      return compileElement(node, options);\n\t    } else if (type === 3 && node.data.trim()) {\n\t      return compileTextNode(node, options);\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Compile an element and return a nodeLinkFn.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Function|null}\n\t   */\n\t\n\t  function compileElement(el, options) {\n\t    // preprocess textareas.\n\t    // textarea treats its text content as the initial value.\n\t    // just bind it as an attr directive for value.\n\t    if (el.tagName === 'TEXTAREA') {\n\t      var tokens = parseText(el.value);\n\t      if (tokens) {\n\t        el.setAttribute(':value', tokensToExp(tokens));\n\t        el.value = '';\n\t      }\n\t    }\n\t    var linkFn;\n\t    var hasAttrs = el.hasAttributes();\n\t    // check terminal directives (for & if)\n\t    if (hasAttrs) {\n\t      linkFn = checkTerminalDirectives(el, options);\n\t    }\n\t    // check element directives\n\t    if (!linkFn) {\n\t      linkFn = checkElementDirectives(el, options);\n\t    }\n\t    // check component\n\t    if (!linkFn) {\n\t      linkFn = checkComponent(el, options);\n\t    }\n\t    // normal directives\n\t    if (!linkFn && hasAttrs) {\n\t      linkFn = compileDirectives(el.attributes, options);\n\t    }\n\t    return linkFn;\n\t  }\n\t\n\t  /**\n\t   * Compile a textNode and return a nodeLinkFn.\n\t   *\n\t   * @param {TextNode} node\n\t   * @param {Object} options\n\t   * @return {Function|null} textNodeLinkFn\n\t   */\n\t\n\t  function compileTextNode(node, options) {\n\t    // skip marked text nodes\n\t    if (node._skip) {\n\t      return removeText;\n\t    }\n\t\n\t    var tokens = parseText(node.wholeText);\n\t    if (!tokens) {\n\t      return null;\n\t    }\n\t\n\t    // mark adjacent text nodes as skipped,\n\t    // because we are using node.wholeText to compile\n\t    // all adjacent text nodes together. This fixes\n\t    // issues in IE where sometimes it splits up a single\n\t    // text node into multiple ones.\n\t    var next = node.nextSibling;\n\t    while (next && next.nodeType === 3) {\n\t      next._skip = true;\n\t      next = next.nextSibling;\n\t    }\n\t\n\t    var frag = document.createDocumentFragment();\n\t    var el, token;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t      frag.appendChild(el);\n\t    }\n\t    return makeTextNodeLinkFn(tokens, frag, options);\n\t  }\n\t\n\t  /**\n\t   * Linker for an skipped text node.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Text} node\n\t   */\n\t\n\t  function removeText(vm, node) {\n\t    remove(node);\n\t  }\n\t\n\t  /**\n\t   * Process a single text token.\n\t   *\n\t   * @param {Object} token\n\t   * @param {Object} options\n\t   * @return {Node}\n\t   */\n\t\n\t  function processTextToken(token, options) {\n\t    var el;\n\t    if (token.oneTime) {\n\t      el = document.createTextNode(token.value);\n\t    } else {\n\t      if (token.html) {\n\t        el = document.createComment('v-html');\n\t        setTokenType('html');\n\t      } else {\n\t        // IE will clean up empty textNodes during\n\t        // frag.cloneNode(true), so we have to give it\n\t        // something here...\n\t        el = document.createTextNode(' ');\n\t        setTokenType('text');\n\t      }\n\t    }\n\t    function setTokenType(type) {\n\t      if (token.descriptor) return;\n\t      var parsed = parseDirective(token.value);\n\t      token.descriptor = {\n\t        name: type,\n\t        def: publicDirectives[type],\n\t        expression: parsed.expression,\n\t        filters: parsed.filters\n\t      };\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Build a function that processes a textNode.\n\t   *\n\t   * @param {Array<Object>} tokens\n\t   * @param {DocumentFragment} frag\n\t   */\n\t\n\t  function makeTextNodeLinkFn(tokens, frag) {\n\t    return function textNodeLinkFn(vm, el, host, scope) {\n\t      var fragClone = frag.cloneNode(true);\n\t      var childNodes = toArray(fragClone.childNodes);\n\t      var token, value, node;\n\t      for (var i = 0, l = tokens.length; i < l; i++) {\n\t        token = tokens[i];\n\t        value = token.value;\n\t        if (token.tag) {\n\t          node = childNodes[i];\n\t          if (token.oneTime) {\n\t            value = (scope || vm).$eval(value);\n\t            if (token.html) {\n\t              replace(node, parseTemplate(value, true));\n\t            } else {\n\t              node.data = value;\n\t            }\n\t          } else {\n\t            vm._bindDir(token.descriptor, node, host, scope);\n\t          }\n\t        }\n\t      }\n\t      replace(el, fragClone);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Compile a node list and return a childLinkFn.\n\t   *\n\t   * @param {NodeList} nodeList\n\t   * @param {Object} options\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  function compileNodeList(nodeList, options) {\n\t    var linkFns = [];\n\t    var nodeLinkFn, childLinkFn, node;\n\t    for (var i = 0, l = nodeList.length; i < l; i++) {\n\t      node = nodeList[i];\n\t      nodeLinkFn = compileNode(node, options);\n\t      childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t      linkFns.push(nodeLinkFn, childLinkFn);\n\t    }\n\t    return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t  }\n\t\n\t  /**\n\t   * Make a child link function for a node's childNodes.\n\t   *\n\t   * @param {Array<Function>} linkFns\n\t   * @return {Function} childLinkFn\n\t   */\n\t\n\t  function makeChildLinkFn(linkFns) {\n\t    return function childLinkFn(vm, nodes, host, scope, frag) {\n\t      var node, nodeLinkFn, childrenLinkFn;\n\t      for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t        node = nodes[n];\n\t        nodeLinkFn = linkFns[i++];\n\t        childrenLinkFn = linkFns[i++];\n\t        // cache childNodes before linking parent, fix #657\n\t        var childNodes = toArray(node.childNodes);\n\t        if (nodeLinkFn) {\n\t          nodeLinkFn(vm, node, host, scope, frag);\n\t        }\n\t        if (childrenLinkFn) {\n\t          childrenLinkFn(vm, childNodes, host, scope, frag);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Check for element directives (custom elements that should\n\t   * be resovled as terminal directives).\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   */\n\t\n\t  function checkElementDirectives(el, options) {\n\t    var tag = el.tagName.toLowerCase();\n\t    if (commonTagRE.test(tag)) return;\n\t    // special case: give named slot a higher priority\n\t    // than unnamed slots\n\t    if (tag === 'slot' && hasBindAttr(el, 'name')) {\n\t      tag = '_namedSlot';\n\t    }\n\t    var def = resolveAsset(options, 'elementDirectives', tag);\n\t    if (def) {\n\t      return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if an element is a component. If yes, return\n\t   * a component link function.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  function checkComponent(el, options) {\n\t    var component = checkComponentAttr(el, options);\n\t    if (component) {\n\t      var ref = findRef(el);\n\t      var descriptor = {\n\t        name: 'component',\n\t        ref: ref,\n\t        expression: component.id,\n\t        def: internalDirectives.component,\n\t        modifiers: {\n\t          literal: !component.dynamic\n\t        }\n\t      };\n\t      var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t        if (ref) {\n\t          defineReactive((scope || vm).$refs, ref, null);\n\t        }\n\t        vm._bindDir(descriptor, el, host, scope, frag);\n\t      };\n\t      componentLinkFn.terminal = true;\n\t      return componentLinkFn;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check an element for terminal directives in fixed order.\n\t   * If it finds one, return a terminal link function.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Function} terminalLinkFn\n\t   */\n\t\n\t  function checkTerminalDirectives(el, options) {\n\t    // skip v-pre\n\t    if (getAttr(el, 'v-pre') !== null) {\n\t      return skip;\n\t    }\n\t    // skip v-else block, but only if following v-if\n\t    if (el.hasAttribute('v-else')) {\n\t      var prev = el.previousElementSibling;\n\t      if (prev && prev.hasAttribute('v-if')) {\n\t        return skip;\n\t      }\n\t    }\n\t    var value, dirName;\n\t    for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t      dirName = terminalDirectives[i];\n\t      /* eslint-disable no-cond-assign */\n\t      if (value = el.getAttribute('v-' + dirName)) {\n\t        return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t      }\n\t      /* eslint-enable no-cond-assign */\n\t    }\n\t  }\n\t\n\t  function skip() {}\n\t  skip.terminal = true;\n\t\n\t  /**\n\t   * Build a node link function for a terminal directive.\n\t   * A terminal link function terminates the current\n\t   * compilation recursion and handles compilation of the\n\t   * subtree in the directive.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} dirName\n\t   * @param {String} value\n\t   * @param {Object} options\n\t   * @param {Object} [def]\n\t   * @return {Function} terminalLinkFn\n\t   */\n\t\n\t  function makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t    var parsed = parseDirective(value);\n\t    var descriptor = {\n\t      name: dirName,\n\t      expression: parsed.expression,\n\t      filters: parsed.filters,\n\t      raw: value,\n\t      // either an element directive, or if/for\n\t      def: def || publicDirectives[dirName]\n\t    };\n\t    // check ref for v-for and router-view\n\t    if (dirName === 'for' || dirName === 'router-view') {\n\t      descriptor.ref = findRef(el);\n\t    }\n\t    var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t      if (descriptor.ref) {\n\t        defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    fn.terminal = true;\n\t    return fn;\n\t  }\n\t\n\t  /**\n\t   * Compile the directives on an element and return a linker.\n\t   *\n\t   * @param {Array|NamedNodeMap} attrs\n\t   * @param {Object} options\n\t   * @return {Function}\n\t   */\n\t\n\t  function compileDirectives(attrs, options) {\n\t    var i = attrs.length;\n\t    var dirs = [];\n\t    var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens;\n\t    while (i--) {\n\t      attr = attrs[i];\n\t      name = rawName = attr.name;\n\t      value = rawValue = attr.value;\n\t      tokens = parseText(value);\n\t      // reset arg\n\t      arg = null;\n\t      // check modifiers\n\t      modifiers = parseModifiers(name);\n\t      name = name.replace(modifierRE, '');\n\t\n\t      // attribute interpolations\n\t      if (tokens) {\n\t        value = tokensToExp(tokens);\n\t        arg = name;\n\t        pushDir('bind', publicDirectives.bind, true);\n\t        // warn against mixing mustaches with v-bind\n\t        if (true) {\n\t          if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t            return attr.name === ':class' || attr.name === 'v-bind:class';\n\t          })) {\n\t            warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t          }\n\t        }\n\t      } else\n\t\n\t        // special attribute: transition\n\t        if (transitionRE.test(name)) {\n\t          modifiers.literal = !bindRE.test(name);\n\t          pushDir('transition', internalDirectives.transition);\n\t        } else\n\t\n\t          // event handlers\n\t          if (onRE.test(name)) {\n\t            arg = name.replace(onRE, '');\n\t            pushDir('on', publicDirectives.on);\n\t          } else\n\t\n\t            // attribute bindings\n\t            if (bindRE.test(name)) {\n\t              dirName = name.replace(bindRE, '');\n\t              if (dirName === 'style' || dirName === 'class') {\n\t                pushDir(dirName, internalDirectives[dirName]);\n\t              } else {\n\t                arg = dirName;\n\t                pushDir('bind', publicDirectives.bind);\n\t              }\n\t            } else\n\t\n\t              // normal directives\n\t              if (name.indexOf('v-') === 0) {\n\t                // check arg\n\t                arg = (arg = name.match(argRE)) && arg[1];\n\t                if (arg) {\n\t                  name = name.replace(argRE, '');\n\t                }\n\t                // extract directive name\n\t                dirName = name.slice(2);\n\t\n\t                // skip v-else (when used with v-show)\n\t                if (dirName === 'else') {\n\t                  continue;\n\t                }\n\t\n\t                dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t                if (true) {\n\t                  assertAsset(dirDef, 'directive', dirName);\n\t                }\n\t\n\t                if (dirDef) {\n\t                  pushDir(dirName, dirDef);\n\t                }\n\t              }\n\t    }\n\t\n\t    /**\n\t     * Push a directive.\n\t     *\n\t     * @param {String} dirName\n\t     * @param {Object|Function} def\n\t     * @param {Boolean} [interp]\n\t     */\n\t\n\t    function pushDir(dirName, def, interp) {\n\t      var parsed = parseDirective(value);\n\t      dirs.push({\n\t        name: dirName,\n\t        attr: rawName,\n\t        raw: rawValue,\n\t        def: def,\n\t        arg: arg,\n\t        modifiers: modifiers,\n\t        expression: parsed.expression,\n\t        filters: parsed.filters,\n\t        interp: interp\n\t      });\n\t    }\n\t\n\t    if (dirs.length) {\n\t      return makeNodeLinkFn(dirs);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Parse modifiers from directive attribute name.\n\t   *\n\t   * @param {String} name\n\t   * @return {Object}\n\t   */\n\t\n\t  function parseModifiers(name) {\n\t    var res = Object.create(null);\n\t    var match = name.match(modifierRE);\n\t    if (match) {\n\t      var i = match.length;\n\t      while (i--) {\n\t        res[match[i].slice(1)] = true;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Build a link function for all directives on a single node.\n\t   *\n\t   * @param {Array} directives\n\t   * @return {Function} directivesLinkFn\n\t   */\n\t\n\t  function makeNodeLinkFn(directives) {\n\t    return function nodeLinkFn(vm, el, host, scope, frag) {\n\t      // reverse apply because it's sorted low to high\n\t      var i = directives.length;\n\t      while (i--) {\n\t        vm._bindDir(directives[i], el, host, scope, frag);\n\t      }\n\t    };\n\t  }\n\t\n\t  var specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t  /**\n\t   * Process an element or a DocumentFragment based on a\n\t   * instance option object. This allows us to transclude\n\t   * a template node/fragment before the instance is created,\n\t   * so the processed fragment can then be cloned and reused\n\t   * in v-for.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Element|DocumentFragment}\n\t   */\n\t\n\t  function transclude(el, options) {\n\t    // extract container attributes to pass them down\n\t    // to compiler, because they need to be compiled in\n\t    // parent scope. we are mutating the options object here\n\t    // assuming the same object will be used for compile\n\t    // right after this.\n\t    if (options) {\n\t      options._containerAttrs = extractAttrs(el);\n\t    }\n\t    // for template tags, what we want is its content as\n\t    // a documentFragment (for fragment instances)\n\t    if (isTemplate(el)) {\n\t      el = parseTemplate(el);\n\t    }\n\t    if (options) {\n\t      if (options._asComponent && !options.template) {\n\t        options.template = '<slot></slot>';\n\t      }\n\t      if (options.template) {\n\t        options._content = extractContent(el);\n\t        el = transcludeTemplate(el, options);\n\t      }\n\t    }\n\t    if (el instanceof DocumentFragment) {\n\t      // anchors for fragment instance\n\t      // passing in `persist: true` to avoid them being\n\t      // discarded by IE during template cloning\n\t      prepend(createAnchor('v-start', true), el);\n\t      el.appendChild(createAnchor('v-end', true));\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Process the template option.\n\t   * If the replace option is true this will swap the $el.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Element|DocumentFragment}\n\t   */\n\t\n\t  function transcludeTemplate(el, options) {\n\t    var template = options.template;\n\t    var frag = parseTemplate(template, true);\n\t    if (frag) {\n\t      var replacer = frag.firstChild;\n\t      var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t      if (options.replace) {\n\t        /* istanbul ignore if */\n\t        if (el === document.body) {\n\t          'development' !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t        }\n\t        // there are many cases where the instance must\n\t        // become a fragment instance: basically anything that\n\t        // can create more than 1 root nodes.\n\t        if (\n\t        // multi-children template\n\t        frag.childNodes.length > 1 ||\n\t        // non-element template\n\t        replacer.nodeType !== 1 ||\n\t        // single nested component\n\t        tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t        // element directive\n\t        resolveAsset(options, 'elementDirectives', tag) ||\n\t        // for block\n\t        replacer.hasAttribute('v-for') ||\n\t        // if block\n\t        replacer.hasAttribute('v-if')) {\n\t          return frag;\n\t        } else {\n\t          options._replacerAttrs = extractAttrs(replacer);\n\t          mergeAttrs(el, replacer);\n\t          return replacer;\n\t        }\n\t      } else {\n\t        el.appendChild(frag);\n\t        return el;\n\t      }\n\t    } else {\n\t      'development' !== 'production' && warn('Invalid template option: ' + template);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to extract a component container's attributes\n\t   * into a plain object array.\n\t   *\n\t   * @param {Element} el\n\t   * @return {Array}\n\t   */\n\t\n\t  function extractAttrs(el) {\n\t    if (el.nodeType === 1 && el.hasAttributes()) {\n\t      return toArray(el.attributes);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Merge the attributes of two elements, and make sure\n\t   * the class names are merged properly.\n\t   *\n\t   * @param {Element} from\n\t   * @param {Element} to\n\t   */\n\t\n\t  function mergeAttrs(from, to) {\n\t    var attrs = from.attributes;\n\t    var i = attrs.length;\n\t    var name, value;\n\t    while (i--) {\n\t      name = attrs[i].name;\n\t      value = attrs[i].value;\n\t      if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t        to.setAttribute(name, value);\n\t      } else if (name === 'class') {\n\t        value.split(/\\s+/).forEach(function (cls) {\n\t          addClass(to, cls);\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  var compiler = Object.freeze({\n\t    compile: compile,\n\t    compileAndLinkProps: compileAndLinkProps,\n\t    compileRoot: compileRoot,\n\t    transclude: transclude\n\t  });\n\t\n\t  function stateMixin(Vue) {\n\t\n\t    /**\n\t     * Accessor for `$data` property, since setting $data\n\t     * requires observing the new object and updating\n\t     * proxied properties.\n\t     */\n\t\n\t    Object.defineProperty(Vue.prototype, '$data', {\n\t      get: function get() {\n\t        return this._data;\n\t      },\n\t      set: function set(newData) {\n\t        if (newData !== this._data) {\n\t          this._setData(newData);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Setup the scope of an instance, which contains:\n\t     * - observed data\n\t     * - computed properties\n\t     * - user methods\n\t     * - meta properties\n\t     */\n\t\n\t    Vue.prototype._initState = function () {\n\t      this._initProps();\n\t      this._initMeta();\n\t      this._initMethods();\n\t      this._initData();\n\t      this._initComputed();\n\t    };\n\t\n\t    /**\n\t     * Initialize props.\n\t     */\n\t\n\t    Vue.prototype._initProps = function () {\n\t      var options = this.$options;\n\t      var el = options.el;\n\t      var props = options.props;\n\t      if (props && !el) {\n\t        'development' !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t      }\n\t      // make sure to convert string selectors into element now\n\t      el = options.el = query(el);\n\t      this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t      // props must be linked in proper scope if inside v-for\n\t      ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t    };\n\t\n\t    /**\n\t     * Initialize the data.\n\t     */\n\t\n\t    Vue.prototype._initData = function () {\n\t      var propsData = this._data;\n\t      var optionsDataFn = this.$options.data;\n\t      var optionsData = optionsDataFn && optionsDataFn();\n\t      if (optionsData) {\n\t        this._data = optionsData;\n\t        for (var prop in propsData) {\n\t          if ('development' !== 'production' && hasOwn(optionsData, prop)) {\n\t            warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t          }\n\t          if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n\t            set(optionsData, prop, propsData[prop]);\n\t          }\n\t        }\n\t      }\n\t      var data = this._data;\n\t      // proxy data on instance\n\t      var keys = Object.keys(data);\n\t      var i, key;\n\t      i = keys.length;\n\t      while (i--) {\n\t        key = keys[i];\n\t        this._proxy(key);\n\t      }\n\t      // observe data\n\t      observe(data, this);\n\t    };\n\t\n\t    /**\n\t     * Swap the instance's $data. Called in $data's setter.\n\t     *\n\t     * @param {Object} newData\n\t     */\n\t\n\t    Vue.prototype._setData = function (newData) {\n\t      newData = newData || {};\n\t      var oldData = this._data;\n\t      this._data = newData;\n\t      var keys, key, i;\n\t      // unproxy keys not present in new data\n\t      keys = Object.keys(oldData);\n\t      i = keys.length;\n\t      while (i--) {\n\t        key = keys[i];\n\t        if (!(key in newData)) {\n\t          this._unproxy(key);\n\t        }\n\t      }\n\t      // proxy keys not already proxied,\n\t      // and trigger change for changed values\n\t      keys = Object.keys(newData);\n\t      i = keys.length;\n\t      while (i--) {\n\t        key = keys[i];\n\t        if (!hasOwn(this, key)) {\n\t          // new property\n\t          this._proxy(key);\n\t        }\n\t      }\n\t      oldData.__ob__.removeVm(this);\n\t      observe(newData, this);\n\t      this._digest();\n\t    };\n\t\n\t    /**\n\t     * Proxy a property, so that\n\t     * vm.prop === vm._data.prop\n\t     *\n\t     * @param {String} key\n\t     */\n\t\n\t    Vue.prototype._proxy = function (key) {\n\t      if (!isReserved(key)) {\n\t        // need to store ref to self here\n\t        // because these getter/setters might\n\t        // be called by child scopes via\n\t        // prototype inheritance.\n\t        var self = this;\n\t        Object.defineProperty(self, key, {\n\t          configurable: true,\n\t          enumerable: true,\n\t          get: function proxyGetter() {\n\t            return self._data[key];\n\t          },\n\t          set: function proxySetter(val) {\n\t            self._data[key] = val;\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Unproxy a property.\n\t     *\n\t     * @param {String} key\n\t     */\n\t\n\t    Vue.prototype._unproxy = function (key) {\n\t      if (!isReserved(key)) {\n\t        delete this[key];\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Force update on every watcher in scope.\n\t     */\n\t\n\t    Vue.prototype._digest = function () {\n\t      for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t        this._watchers[i].update(true); // shallow updates\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Setup computed properties. They are essentially\n\t     * special getter/setters\n\t     */\n\t\n\t    function noop() {}\n\t    Vue.prototype._initComputed = function () {\n\t      var computed = this.$options.computed;\n\t      if (computed) {\n\t        for (var key in computed) {\n\t          var userDef = computed[key];\n\t          var def = {\n\t            enumerable: true,\n\t            configurable: true\n\t          };\n\t          if (typeof userDef === 'function') {\n\t            def.get = makeComputedGetter(userDef, this);\n\t            def.set = noop;\n\t          } else {\n\t            def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n\t            def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n\t          }\n\t          Object.defineProperty(this, key, def);\n\t        }\n\t      }\n\t    };\n\t\n\t    function makeComputedGetter(getter, owner) {\n\t      var watcher = new Watcher(owner, getter, null, {\n\t        lazy: true\n\t      });\n\t      return function computedGetter() {\n\t        if (watcher.dirty) {\n\t          watcher.evaluate();\n\t        }\n\t        if (Dep.target) {\n\t          watcher.depend();\n\t        }\n\t        return watcher.value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Setup instance methods. Methods must be bound to the\n\t     * instance since they might be passed down as a prop to\n\t     * child components.\n\t     */\n\t\n\t    Vue.prototype._initMethods = function () {\n\t      var methods = this.$options.methods;\n\t      if (methods) {\n\t        for (var key in methods) {\n\t          this[key] = bind$1(methods[key], this);\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Initialize meta information like $index, $key & $value.\n\t     */\n\t\n\t    Vue.prototype._initMeta = function () {\n\t      var metas = this.$options._meta;\n\t      if (metas) {\n\t        for (var key in metas) {\n\t          defineReactive(this, key, metas[key]);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  var eventRE = /^v-on:|^@/;\n\t\n\t  function eventsMixin(Vue) {\n\t\n\t    /**\n\t     * Setup the instance's option events & watchers.\n\t     * If the value is a string, we pull it from the\n\t     * instance's methods by name.\n\t     */\n\t\n\t    Vue.prototype._initEvents = function () {\n\t      var options = this.$options;\n\t      if (options._asComponent) {\n\t        registerComponentEvents(this, options.el);\n\t      }\n\t      registerCallbacks(this, '$on', options.events);\n\t      registerCallbacks(this, '$watch', options.watch);\n\t    };\n\t\n\t    /**\n\t     * Register v-on events on a child component\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {Element} el\n\t     */\n\t\n\t    function registerComponentEvents(vm, el) {\n\t      var attrs = el.attributes;\n\t      var name, handler;\n\t      for (var i = 0, l = attrs.length; i < l; i++) {\n\t        name = attrs[i].name;\n\t        if (eventRE.test(name)) {\n\t          name = name.replace(eventRE, '');\n\t          handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t          vm.$on(name.replace(eventRE), handler);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Register callbacks for option events and watchers.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} action\n\t     * @param {Object} hash\n\t     */\n\t\n\t    function registerCallbacks(vm, action, hash) {\n\t      if (!hash) return;\n\t      var handlers, key, i, j;\n\t      for (key in hash) {\n\t        handlers = hash[key];\n\t        if (isArray(handlers)) {\n\t          for (i = 0, j = handlers.length; i < j; i++) {\n\t            register(vm, action, key, handlers[i]);\n\t          }\n\t        } else {\n\t          register(vm, action, key, handlers);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Helper to register an event/watch callback.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} action\n\t     * @param {String} key\n\t     * @param {Function|String|Object} handler\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    function register(vm, action, key, handler, options) {\n\t      var type = typeof handler === 'undefined' ? 'undefined' : _typeof(handler);\n\t      if (type === 'function') {\n\t        vm[action](key, handler, options);\n\t      } else if (type === 'string') {\n\t        var methods = vm.$options.methods;\n\t        var method = methods && methods[handler];\n\t        if (method) {\n\t          vm[action](key, method, options);\n\t        } else {\n\t          'development' !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t        }\n\t      } else if (handler && type === 'object') {\n\t        register(vm, action, key, handler.handler, handler);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Setup recursive attached/detached calls\n\t     */\n\t\n\t    Vue.prototype._initDOMHooks = function () {\n\t      this.$on('hook:attached', onAttached);\n\t      this.$on('hook:detached', onDetached);\n\t    };\n\t\n\t    /**\n\t     * Callback to recursively call attached hook on children\n\t     */\n\t\n\t    function onAttached() {\n\t      if (!this._isAttached) {\n\t        this._isAttached = true;\n\t        this.$children.forEach(callAttach);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Iterator to call attached hook\n\t     *\n\t     * @param {Vue} child\n\t     */\n\t\n\t    function callAttach(child) {\n\t      if (!child._isAttached && inDoc(child.$el)) {\n\t        child._callHook('attached');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Callback to recursively call detached hook on children\n\t     */\n\t\n\t    function onDetached() {\n\t      if (this._isAttached) {\n\t        this._isAttached = false;\n\t        this.$children.forEach(callDetach);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Iterator to call detached hook\n\t     *\n\t     * @param {Vue} child\n\t     */\n\t\n\t    function callDetach(child) {\n\t      if (child._isAttached && !inDoc(child.$el)) {\n\t        child._callHook('detached');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Trigger all handlers for a hook\n\t     *\n\t     * @param {String} hook\n\t     */\n\t\n\t    Vue.prototype._callHook = function (hook) {\n\t      this.$emit('pre-hook:' + hook);\n\t      var handlers = this.$options[hook];\n\t      if (handlers) {\n\t        for (var i = 0, j = handlers.length; i < j; i++) {\n\t          handlers[i].call(this);\n\t        }\n\t      }\n\t      this.$emit('hook:' + hook);\n\t    };\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  /**\n\t   * A directive links a DOM element with a piece of data,\n\t   * which is the result of evaluating an expression.\n\t   * It registers a watcher with the expression and calls\n\t   * the DOM update function when a change is triggered.\n\t   *\n\t   * @param {String} name\n\t   * @param {Node} el\n\t   * @param {Vue} vm\n\t   * @param {Object} descriptor\n\t   *                 - {String} name\n\t   *                 - {Object} def\n\t   *                 - {String} expression\n\t   *                 - {Array<Object>} [filters]\n\t   *                 - {Boolean} literal\n\t   *                 - {String} attr\n\t   *                 - {String} raw\n\t   * @param {Object} def - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   * @constructor\n\t   */\n\t  function Directive(descriptor, vm, el, host, scope, frag) {\n\t    this.vm = vm;\n\t    this.el = el;\n\t    // copy descriptor properties\n\t    this.descriptor = descriptor;\n\t    this.name = descriptor.name;\n\t    this.expression = descriptor.expression;\n\t    this.arg = descriptor.arg;\n\t    this.modifiers = descriptor.modifiers;\n\t    this.filters = descriptor.filters;\n\t    this.literal = this.modifiers && this.modifiers.literal;\n\t    // private\n\t    this._locked = false;\n\t    this._bound = false;\n\t    this._listeners = null;\n\t    // link context\n\t    this._host = host;\n\t    this._scope = scope;\n\t    this._frag = frag;\n\t    // store directives on node in dev mode\n\t    if ('development' !== 'production' && this.el) {\n\t      this.el._vue_directives = this.el._vue_directives || [];\n\t      this.el._vue_directives.push(this);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Initialize the directive, mixin definition properties,\n\t   * setup the watcher, call definition bind() and update()\n\t   * if present.\n\t   *\n\t   * @param {Object} def\n\t   */\n\t\n\t  Directive.prototype._bind = function () {\n\t    var name = this.name;\n\t    var descriptor = this.descriptor;\n\t\n\t    // remove attribute\n\t    if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t      var attr = descriptor.attr || 'v-' + name;\n\t      this.el.removeAttribute(attr);\n\t    }\n\t\n\t    // copy def properties\n\t    var def = descriptor.def;\n\t    if (typeof def === 'function') {\n\t      this.update = def;\n\t    } else {\n\t      extend(this, def);\n\t    }\n\t\n\t    // setup directive params\n\t    this._setupParams();\n\t\n\t    // initial bind\n\t    if (this.bind) {\n\t      this.bind();\n\t    }\n\t    this._bound = true;\n\t\n\t    if (this.literal) {\n\t      this.update && this.update(descriptor.raw);\n\t    } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t      // wrapped updater for context\n\t      var dir = this;\n\t      if (this.update) {\n\t        this._update = function (val, oldVal) {\n\t          if (!dir._locked) {\n\t            dir.update(val, oldVal);\n\t          }\n\t        };\n\t      } else {\n\t        this._update = noop;\n\t      }\n\t      var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n\t      var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n\t      var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t      {\n\t        filters: this.filters,\n\t        twoWay: this.twoWay,\n\t        deep: this.deep,\n\t        preProcess: preProcess,\n\t        postProcess: postProcess,\n\t        scope: this._scope\n\t      });\n\t      // v-model with inital inline value need to sync back to\n\t      // model instead of update to DOM on init. They would\n\t      // set the afterBind hook to indicate that.\n\t      if (this.afterBind) {\n\t        this.afterBind();\n\t      } else if (this.update) {\n\t        this.update(watcher.value);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup all param attributes, e.g. track-by,\n\t   * transition-mode, etc...\n\t   */\n\t\n\t  Directive.prototype._setupParams = function () {\n\t    if (!this.params) {\n\t      return;\n\t    }\n\t    var params = this.params;\n\t    // swap the params array with a fresh object.\n\t    this.params = Object.create(null);\n\t    var i = params.length;\n\t    var key, val, mappedKey;\n\t    while (i--) {\n\t      key = params[i];\n\t      mappedKey = camelize(key);\n\t      val = getBindAttr(this.el, key);\n\t      if (val != null) {\n\t        // dynamic\n\t        this._setupParamWatcher(mappedKey, val);\n\t      } else {\n\t        // static\n\t        val = getAttr(this.el, key);\n\t        if (val != null) {\n\t          this.params[mappedKey] = val === '' ? true : val;\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup a watcher for a dynamic param.\n\t   *\n\t   * @param {String} key\n\t   * @param {String} expression\n\t   */\n\t\n\t  Directive.prototype._setupParamWatcher = function (key, expression) {\n\t    var self = this;\n\t    var called = false;\n\t    var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t      self.params[key] = val;\n\t      // since we are in immediate mode,\n\t      // only call the param change callbacks if this is not the first update.\n\t      if (called) {\n\t        var cb = self.paramWatchers && self.paramWatchers[key];\n\t        if (cb) {\n\t          cb.call(self, val, oldVal);\n\t        }\n\t      } else {\n\t        called = true;\n\t      }\n\t    }, {\n\t      immediate: true,\n\t      user: false\n\t    });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t  };\n\t\n\t  /**\n\t   * Check if the directive is a function caller\n\t   * and if the expression is a callable one. If both true,\n\t   * we wrap up the expression and use it as the event\n\t   * handler.\n\t   *\n\t   * e.g. on-click=\"a++\"\n\t   *\n\t   * @return {Boolean}\n\t   */\n\t\n\t  Directive.prototype._checkStatement = function () {\n\t    var expression = this.expression;\n\t    if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t      var fn = parseExpression(expression).get;\n\t      var scope = this._scope || this.vm;\n\t      var handler = function handler(e) {\n\t        scope.$event = e;\n\t        fn.call(scope, scope);\n\t        scope.$event = null;\n\t      };\n\t      if (this.filters) {\n\t        handler = scope._applyFilters(handler, null, this.filters);\n\t      }\n\t      this.update(handler);\n\t      return true;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the corresponding value with the setter.\n\t   * This should only be used in two-way directives\n\t   * e.g. v-model.\n\t   *\n\t   * @param {*} value\n\t   * @public\n\t   */\n\t\n\t  Directive.prototype.set = function (value) {\n\t    /* istanbul ignore else */\n\t    if (this.twoWay) {\n\t      this._withLock(function () {\n\t        this._watcher.set(value);\n\t      });\n\t    } else if (true) {\n\t      warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Execute a function while preventing that function from\n\t   * triggering updates on this directive instance.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Directive.prototype._withLock = function (fn) {\n\t    var self = this;\n\t    self._locked = true;\n\t    fn.call(self);\n\t    nextTick(function () {\n\t      self._locked = false;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Convenience method that attaches a DOM event listener\n\t   * to the directive element and autometically tears it down\n\t   * during unbind.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} handler\n\t   */\n\t\n\t  Directive.prototype.on = function (event, handler) {\n\t    on$1(this.el, event, handler);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t  };\n\t\n\t  /**\n\t   * Teardown the watcher and call unbind.\n\t   */\n\t\n\t  Directive.prototype._teardown = function () {\n\t    if (this._bound) {\n\t      this._bound = false;\n\t      if (this.unbind) {\n\t        this.unbind();\n\t      }\n\t      if (this._watcher) {\n\t        this._watcher.teardown();\n\t      }\n\t      var listeners = this._listeners;\n\t      var i;\n\t      if (listeners) {\n\t        i = listeners.length;\n\t        while (i--) {\n\t          off(this.el, listeners[i][0], listeners[i][1]);\n\t        }\n\t      }\n\t      var unwatchFns = this._paramUnwatchFns;\n\t      if (unwatchFns) {\n\t        i = unwatchFns.length;\n\t        while (i--) {\n\t          unwatchFns[i]();\n\t        }\n\t      }\n\t      if ('development' !== 'production' && this.el) {\n\t        this.el._vue_directives.$remove(this);\n\t      }\n\t      this.vm = this.el = this._watcher = this._listeners = null;\n\t    }\n\t  };\n\t\n\t  function lifecycleMixin(Vue) {\n\t\n\t    /**\n\t     * Update v-ref for component.\n\t     *\n\t     * @param {Boolean} remove\n\t     */\n\t\n\t    Vue.prototype._updateRef = function (remove) {\n\t      var ref = this.$options._ref;\n\t      if (ref) {\n\t        var refs = (this._scope || this._context).$refs;\n\t        if (remove) {\n\t          if (refs[ref] === this) {\n\t            refs[ref] = null;\n\t          }\n\t        } else {\n\t          refs[ref] = this;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Transclude, compile and link element.\n\t     *\n\t     * If a pre-compiled linker is available, that means the\n\t     * passed in element will be pre-transcluded and compiled\n\t     * as well - all we need to do is to call the linker.\n\t     *\n\t     * Otherwise we need to call transclude/compile/link here.\n\t     *\n\t     * @param {Element} el\n\t     * @return {Element}\n\t     */\n\t\n\t    Vue.prototype._compile = function (el) {\n\t      var options = this.$options;\n\t\n\t      // transclude and init element\n\t      // transclude can potentially replace original\n\t      // so we need to keep reference; this step also injects\n\t      // the template and caches the original attributes\n\t      // on the container node and replacer node.\n\t      var original = el;\n\t      el = transclude(el, options);\n\t      this._initElement(el);\n\t\n\t      // handle v-pre on root node (#2026)\n\t      if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t        return;\n\t      }\n\t\n\t      // root is always compiled per-instance, because\n\t      // container attrs and props can be different every time.\n\t      var contextOptions = this._context && this._context.$options;\n\t      var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t      // compile and link the rest\n\t      var contentLinkFn;\n\t      var ctor = this.constructor;\n\t      // component compilation can be cached\n\t      // as long as it's not using inline-template\n\t      if (options._linkerCachable) {\n\t        contentLinkFn = ctor.linker;\n\t        if (!contentLinkFn) {\n\t          contentLinkFn = ctor.linker = compile(el, options);\n\t        }\n\t      }\n\t\n\t      // link phase\n\t      // make sure to link root with prop scope!\n\t      var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t      var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t      // register composite unlink function\n\t      // to be called during instance destruction\n\t      this._unlinkFn = function () {\n\t        rootUnlinkFn();\n\t        // passing destroying: true to avoid searching and\n\t        // splicing the directives\n\t        contentUnlinkFn(true);\n\t      };\n\t\n\t      // finally replace original\n\t      if (options.replace) {\n\t        replace(original, el);\n\t      }\n\t\n\t      this._isCompiled = true;\n\t      this._callHook('compiled');\n\t      return el;\n\t    };\n\t\n\t    /**\n\t     * Initialize instance element. Called in the public\n\t     * $mount() method.\n\t     *\n\t     * @param {Element} el\n\t     */\n\t\n\t    Vue.prototype._initElement = function (el) {\n\t      if (el instanceof DocumentFragment) {\n\t        this._isFragment = true;\n\t        this.$el = this._fragmentStart = el.firstChild;\n\t        this._fragmentEnd = el.lastChild;\n\t        // set persisted text anchors to empty\n\t        if (this._fragmentStart.nodeType === 3) {\n\t          this._fragmentStart.data = this._fragmentEnd.data = '';\n\t        }\n\t        this._fragment = el;\n\t      } else {\n\t        this.$el = el;\n\t      }\n\t      this.$el.__vue__ = this;\n\t      this._callHook('beforeCompile');\n\t    };\n\t\n\t    /**\n\t     * Create and bind a directive to an element.\n\t     *\n\t     * @param {String} name - directive name\n\t     * @param {Node} node   - target node\n\t     * @param {Object} desc - parsed directive descriptor\n\t     * @param {Object} def  - directive definition object\n\t     * @param {Vue} [host] - transclusion host component\n\t     * @param {Object} [scope] - v-for scope\n\t     * @param {Fragment} [frag] - owner fragment\n\t     */\n\t\n\t    Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t      this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t    };\n\t\n\t    /**\n\t     * Teardown an instance, unobserves the data, unbind all the\n\t     * directives, turn off all the event listeners, etc.\n\t     *\n\t     * @param {Boolean} remove - whether to remove the DOM node.\n\t     * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t     *                                 be called later\n\t     */\n\t\n\t    Vue.prototype._destroy = function (remove, deferCleanup) {\n\t      if (this._isBeingDestroyed) {\n\t        if (!deferCleanup) {\n\t          this._cleanup();\n\t        }\n\t        return;\n\t      }\n\t\n\t      var destroyReady;\n\t      var pendingRemoval;\n\t\n\t      var self = this;\n\t      // Cleanup should be called either synchronously or asynchronoysly as\n\t      // callback of this.$remove(), or if remove and deferCleanup are false.\n\t      // In any case it should be called after all other removing, unbinding and\n\t      // turning of is done\n\t      var cleanupIfPossible = function cleanupIfPossible() {\n\t        if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t          self._cleanup();\n\t        }\n\t      };\n\t\n\t      // remove DOM element\n\t      if (remove && this.$el) {\n\t        pendingRemoval = true;\n\t        this.$remove(function () {\n\t          pendingRemoval = false;\n\t          cleanupIfPossible();\n\t        });\n\t      }\n\t\n\t      this._callHook('beforeDestroy');\n\t      this._isBeingDestroyed = true;\n\t      var i;\n\t      // remove self from parent. only necessary\n\t      // if parent is not being destroyed as well.\n\t      var parent = this.$parent;\n\t      if (parent && !parent._isBeingDestroyed) {\n\t        parent.$children.$remove(this);\n\t        // unregister ref (remove: true)\n\t        this._updateRef(true);\n\t      }\n\t      // destroy all children.\n\t      i = this.$children.length;\n\t      while (i--) {\n\t        this.$children[i].$destroy();\n\t      }\n\t      // teardown props\n\t      if (this._propsUnlinkFn) {\n\t        this._propsUnlinkFn();\n\t      }\n\t      // teardown all directives. this also tearsdown all\n\t      // directive-owned watchers.\n\t      if (this._unlinkFn) {\n\t        this._unlinkFn();\n\t      }\n\t      i = this._watchers.length;\n\t      while (i--) {\n\t        this._watchers[i].teardown();\n\t      }\n\t      // remove reference to self on $el\n\t      if (this.$el) {\n\t        this.$el.__vue__ = null;\n\t      }\n\t\n\t      destroyReady = true;\n\t      cleanupIfPossible();\n\t    };\n\t\n\t    /**\n\t     * Clean up to ensure garbage collection.\n\t     * This is called after the leave transition if there\n\t     * is any.\n\t     */\n\t\n\t    Vue.prototype._cleanup = function () {\n\t      if (this._isDestroyed) {\n\t        return;\n\t      }\n\t      // remove self from owner fragment\n\t      // do it in cleanup so that we can call $destroy with\n\t      // defer right when a fragment is about to be removed.\n\t      if (this._frag) {\n\t        this._frag.children.$remove(this);\n\t      }\n\t      // remove reference from data ob\n\t      // frozen object may not have observer.\n\t      if (this._data.__ob__) {\n\t        this._data.__ob__.removeVm(this);\n\t      }\n\t      // Clean up references to private properties and other\n\t      // instances. preserve reference to _data so that proxy\n\t      // accessors still work. The only potential side effect\n\t      // here is that mutating the instance after it's destroyed\n\t      // may affect the state of other components that are still\n\t      // observing the same object, but that seems to be a\n\t      // reasonable responsibility for the user rather than\n\t      // always throwing an error on them.\n\t      this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t      // call the last hook...\n\t      this._isDestroyed = true;\n\t      this._callHook('destroyed');\n\t      // turn off all instance listeners.\n\t      this.$off();\n\t    };\n\t  }\n\t\n\t  function miscMixin(Vue) {\n\t\n\t    /**\n\t     * Apply a list of filter (descriptors) to a value.\n\t     * Using plain for loops here because this will be called in\n\t     * the getter of any watcher with filters so it is very\n\t     * performance sensitive.\n\t     *\n\t     * @param {*} value\n\t     * @param {*} [oldValue]\n\t     * @param {Array} filters\n\t     * @param {Boolean} write\n\t     * @return {*}\n\t     */\n\t\n\t    Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t      var filter, fn, args, arg, offset, i, l, j, k;\n\t      for (i = 0, l = filters.length; i < l; i++) {\n\t        filter = filters[i];\n\t        fn = resolveAsset(this.$options, 'filters', filter.name);\n\t        if (true) {\n\t          assertAsset(fn, 'filter', filter.name);\n\t        }\n\t        if (!fn) continue;\n\t        fn = write ? fn.write : fn.read || fn;\n\t        if (typeof fn !== 'function') continue;\n\t        args = write ? [value, oldValue] : [value];\n\t        offset = write ? 2 : 1;\n\t        if (filter.args) {\n\t          for (j = 0, k = filter.args.length; j < k; j++) {\n\t            arg = filter.args[j];\n\t            args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t          }\n\t        }\n\t        value = fn.apply(this, args);\n\t      }\n\t      return value;\n\t    };\n\t\n\t    /**\n\t     * Resolve a component, depending on whether the component\n\t     * is defined normally or using an async factory function.\n\t     * Resolves synchronously if already resolved, otherwise\n\t     * resolves asynchronously and caches the resolved\n\t     * constructor on the factory.\n\t     *\n\t     * @param {String} id\n\t     * @param {Function} cb\n\t     */\n\t\n\t    Vue.prototype._resolveComponent = function (id, cb) {\n\t      var factory = resolveAsset(this.$options, 'components', id);\n\t      if (true) {\n\t        assertAsset(factory, 'component', id);\n\t      }\n\t      if (!factory) {\n\t        return;\n\t      }\n\t      // async component factory\n\t      if (!factory.options) {\n\t        if (factory.resolved) {\n\t          // cached\n\t          cb(factory.resolved);\n\t        } else if (factory.requested) {\n\t          // pool callbacks\n\t          factory.pendingCallbacks.push(cb);\n\t        } else {\n\t          factory.requested = true;\n\t          var cbs = factory.pendingCallbacks = [cb];\n\t          factory(function resolve(res) {\n\t            if (isPlainObject(res)) {\n\t              res = Vue.extend(res);\n\t            }\n\t            // cache resolved\n\t            factory.resolved = res;\n\t            // invoke callbacks\n\t            for (var i = 0, l = cbs.length; i < l; i++) {\n\t              cbs[i](res);\n\t            }\n\t          }, function reject(reason) {\n\t            'development' !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t          });\n\t        }\n\t      } else {\n\t        // normal component\n\t        cb(factory);\n\t      }\n\t    };\n\t  }\n\t\n\t  function globalAPI(Vue) {\n\t\n\t    /**\n\t     * Expose useful internals\n\t     */\n\t\n\t    Vue.util = util;\n\t    Vue.config = config;\n\t    Vue.set = set;\n\t    Vue['delete'] = del;\n\t    Vue.nextTick = nextTick;\n\t\n\t    /**\n\t     * The following are exposed for advanced usage / plugins\n\t     */\n\t\n\t    Vue.compiler = compiler;\n\t    Vue.FragmentFactory = FragmentFactory;\n\t    Vue.internalDirectives = internalDirectives;\n\t    Vue.parsers = {\n\t      path: path,\n\t      text: text$1,\n\t      template: template,\n\t      directive: directive,\n\t      expression: expression\n\t    };\n\t\n\t    /**\n\t     * Each instance constructor, including Vue, has a unique\n\t     * cid. This enables us to create wrapped \"child\n\t     * constructors\" for prototypal inheritance and cache them.\n\t     */\n\t\n\t    Vue.cid = 0;\n\t    var cid = 1;\n\t\n\t    /**\n\t     * Class inheritance\n\t     *\n\t     * @param {Object} extendOptions\n\t     */\n\t\n\t    Vue.extend = function (extendOptions) {\n\t      extendOptions = extendOptions || {};\n\t      var Super = this;\n\t      var isFirstExtend = Super.cid === 0;\n\t      if (isFirstExtend && extendOptions._Ctor) {\n\t        return extendOptions._Ctor;\n\t      }\n\t      var name = extendOptions.name || Super.options.name;\n\t      if (true) {\n\t        if (!/^[a-zA-Z][\\w-]+$/.test(name)) {\n\t          warn('Invalid component name: ' + name);\n\t          name = null;\n\t        }\n\t      }\n\t      var Sub = createClass(name || 'VueComponent');\n\t      Sub.prototype = Object.create(Super.prototype);\n\t      Sub.prototype.constructor = Sub;\n\t      Sub.cid = cid++;\n\t      Sub.options = mergeOptions(Super.options, extendOptions);\n\t      Sub['super'] = Super;\n\t      // allow further extension\n\t      Sub.extend = Super.extend;\n\t      // create asset registers, so extended classes\n\t      // can have their private assets too.\n\t      config._assetTypes.forEach(function (type) {\n\t        Sub[type] = Super[type];\n\t      });\n\t      // enable recursive self-lookup\n\t      if (name) {\n\t        Sub.options.components[name] = Sub;\n\t      }\n\t      // cache constructor\n\t      if (isFirstExtend) {\n\t        extendOptions._Ctor = Sub;\n\t      }\n\t      return Sub;\n\t    };\n\t\n\t    /**\n\t     * A function that returns a sub-class constructor with the\n\t     * given name. This gives us much nicer output when\n\t     * logging instances in the console.\n\t     *\n\t     * @param {String} name\n\t     * @return {Function}\n\t     */\n\t\n\t    function createClass(name) {\n\t      return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    }\n\t\n\t    /**\n\t     * Plugin system\n\t     *\n\t     * @param {Object} plugin\n\t     */\n\t\n\t    Vue.use = function (plugin) {\n\t      /* istanbul ignore if */\n\t      if (plugin.installed) {\n\t        return;\n\t      }\n\t      // additional parameters\n\t      var args = toArray(arguments, 1);\n\t      args.unshift(this);\n\t      if (typeof plugin.install === 'function') {\n\t        plugin.install.apply(plugin, args);\n\t      } else {\n\t        plugin.apply(null, args);\n\t      }\n\t      plugin.installed = true;\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Apply a global mixin by merging it into the default\n\t     * options.\n\t     */\n\t\n\t    Vue.mixin = function (mixin) {\n\t      Vue.options = mergeOptions(Vue.options, mixin);\n\t    };\n\t\n\t    /**\n\t     * Create asset registration methods with the following\n\t     * signature:\n\t     *\n\t     * @param {String} id\n\t     * @param {*} definition\n\t     */\n\t\n\t    config._assetTypes.forEach(function (type) {\n\t      Vue[type] = function (id, definition) {\n\t        if (!definition) {\n\t          return this.options[type + 's'][id];\n\t        } else {\n\t          /* istanbul ignore if */\n\t          if (true) {\n\t            if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t            }\n\t          }\n\t          if (type === 'component' && isPlainObject(definition)) {\n\t            definition.name = id;\n\t            definition = Vue.extend(definition);\n\t          }\n\t          this.options[type + 's'][id] = definition;\n\t          return definition;\n\t        }\n\t      };\n\t    });\n\t  }\n\t\n\t  var filterRE = /[^|]\\|[^|]/;\n\t\n\t  function dataAPI(Vue) {\n\t\n\t    /**\n\t     * Get the value from an expression on this vm.\n\t     *\n\t     * @param {String} exp\n\t     * @param {Boolean} [asStatement]\n\t     * @return {*}\n\t     */\n\t\n\t    Vue.prototype.$get = function (exp, asStatement) {\n\t      var res = parseExpression(exp);\n\t      if (res) {\n\t        if (asStatement && !isSimplePath(exp)) {\n\t          var self = this;\n\t          return function statementHandler() {\n\t            self.$arguments = toArray(arguments);\n\t            res.get.call(self, self);\n\t            self.$arguments = null;\n\t          };\n\t        } else {\n\t          try {\n\t            return res.get.call(this, this);\n\t          } catch (e) {}\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the value from an expression on this vm.\n\t     * The expression must be a valid left-hand\n\t     * expression in an assignment.\n\t     *\n\t     * @param {String} exp\n\t     * @param {*} val\n\t     */\n\t\n\t    Vue.prototype.$set = function (exp, val) {\n\t      var res = parseExpression(exp, true);\n\t      if (res && res.set) {\n\t        res.set.call(this, this, val);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Delete a property on the VM\n\t     *\n\t     * @param {String} key\n\t     */\n\t\n\t    Vue.prototype.$delete = function (key) {\n\t      del(this._data, key);\n\t    };\n\t\n\t    /**\n\t     * Watch an expression, trigger callback when its\n\t     * value changes.\n\t     *\n\t     * @param {String|Function} expOrFn\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} deep\n\t     *                 - {Boolean} immediate\n\t     * @return {Function} - unwatchFn\n\t     */\n\t\n\t    Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t      var vm = this;\n\t      var parsed;\n\t      if (typeof expOrFn === 'string') {\n\t        parsed = parseDirective(expOrFn);\n\t        expOrFn = parsed.expression;\n\t      }\n\t      var watcher = new Watcher(vm, expOrFn, cb, {\n\t        deep: options && options.deep,\n\t        sync: options && options.sync,\n\t        filters: parsed && parsed.filters,\n\t        user: !options || options.user !== false\n\t      });\n\t      if (options && options.immediate) {\n\t        cb.call(vm, watcher.value);\n\t      }\n\t      return function unwatchFn() {\n\t        watcher.teardown();\n\t      };\n\t    };\n\t\n\t    /**\n\t     * Evaluate a text directive, including filters.\n\t     *\n\t     * @param {String} text\n\t     * @param {Boolean} [asStatement]\n\t     * @return {String}\n\t     */\n\t\n\t    Vue.prototype.$eval = function (text, asStatement) {\n\t      // check for filters.\n\t      if (filterRE.test(text)) {\n\t        var dir = parseDirective(text);\n\t        // the filter regex check might give false positive\n\t        // for pipes inside strings, so it's possible that\n\t        // we don't get any filters here\n\t        var val = this.$get(dir.expression, asStatement);\n\t        return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t      } else {\n\t        // no filter\n\t        return this.$get(text, asStatement);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Interpolate a piece of template text.\n\t     *\n\t     * @param {String} text\n\t     * @return {String}\n\t     */\n\t\n\t    Vue.prototype.$interpolate = function (text) {\n\t      var tokens = parseText(text);\n\t      var vm = this;\n\t      if (tokens) {\n\t        if (tokens.length === 1) {\n\t          return vm.$eval(tokens[0].value) + '';\n\t        } else {\n\t          return tokens.map(function (token) {\n\t            return token.tag ? vm.$eval(token.value) : token.value;\n\t          }).join('');\n\t        }\n\t      } else {\n\t        return text;\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Log instance data as a plain JS object\n\t     * so that it is easier to inspect in console.\n\t     * This method assumes console is available.\n\t     *\n\t     * @param {String} [path]\n\t     */\n\t\n\t    Vue.prototype.$log = function (path) {\n\t      var data = path ? getPath(this._data, path) : this._data;\n\t      if (data) {\n\t        data = clean(data);\n\t      }\n\t      // include computed fields\n\t      if (!path) {\n\t        for (var key in this.$options.computed) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t      console.log(data);\n\t    };\n\t\n\t    /**\n\t     * \"clean\" a getter/setter converted object into a plain\n\t     * object copy.\n\t     *\n\t     * @param {Object} - obj\n\t     * @return {Object}\n\t     */\n\t\n\t    function clean(obj) {\n\t      return JSON.parse(JSON.stringify(obj));\n\t    }\n\t  }\n\t\n\t  function domAPI(Vue) {\n\t\n\t    /**\n\t     * Convenience on-instance nextTick. The callback is\n\t     * auto-bound to the instance, and this avoids component\n\t     * modules having to rely on the global Vue.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Vue.prototype.$nextTick = function (fn) {\n\t      nextTick(fn, this);\n\t    };\n\t\n\t    /**\n\t     * Append instance to target\n\t     *\n\t     * @param {Node} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t      return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t    };\n\t\n\t    /**\n\t     * Prepend instance to target\n\t     *\n\t     * @param {Node} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t      target = query(target);\n\t      if (target.hasChildNodes()) {\n\t        this.$before(target.firstChild, cb, withTransition);\n\t      } else {\n\t        this.$appendTo(target, cb, withTransition);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Insert instance before target\n\t     *\n\t     * @param {Node} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$before = function (target, cb, withTransition) {\n\t      return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t    };\n\t\n\t    /**\n\t     * Insert instance after target\n\t     *\n\t     * @param {Node} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$after = function (target, cb, withTransition) {\n\t      target = query(target);\n\t      if (target.nextSibling) {\n\t        this.$before(target.nextSibling, cb, withTransition);\n\t      } else {\n\t        this.$appendTo(target.parentNode, cb, withTransition);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Remove instance from DOM\n\t     *\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$remove = function (cb, withTransition) {\n\t      if (!this.$el.parentNode) {\n\t        return cb && cb();\n\t      }\n\t      var inDocument = this._isAttached && inDoc(this.$el);\n\t      // if we are not in document, no need to check\n\t      // for transitions\n\t      if (!inDocument) withTransition = false;\n\t      var self = this;\n\t      var realCb = function realCb() {\n\t        if (inDocument) self._callHook('detached');\n\t        if (cb) cb();\n\t      };\n\t      if (this._isFragment) {\n\t        removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t      } else {\n\t        var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t        op(this.$el, this, realCb);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Shared DOM insertion function.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {Element} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition]\n\t     * @param {Function} op1 - op for non-transition insert\n\t     * @param {Function} op2 - op for transition insert\n\t     * @return vm\n\t     */\n\t\n\t    function insert(vm, target, cb, withTransition, op1, op2) {\n\t      target = query(target);\n\t      var targetIsDetached = !inDoc(target);\n\t      var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t      var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t      if (vm._isFragment) {\n\t        mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t          op(node, target, vm);\n\t        });\n\t        cb && cb();\n\t      } else {\n\t        op(vm.$el, target, vm, cb);\n\t      }\n\t      if (shouldCallHook) {\n\t        vm._callHook('attached');\n\t      }\n\t      return vm;\n\t    }\n\t\n\t    /**\n\t     * Check for selectors\n\t     *\n\t     * @param {String|Element} el\n\t     */\n\t\n\t    function query(el) {\n\t      return typeof el === 'string' ? document.querySelector(el) : el;\n\t    }\n\t\n\t    /**\n\t     * Append operation that takes a callback.\n\t     *\n\t     * @param {Node} el\n\t     * @param {Node} target\n\t     * @param {Vue} vm - unused\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    function append(el, target, vm, cb) {\n\t      target.appendChild(el);\n\t      if (cb) cb();\n\t    }\n\t\n\t    /**\n\t     * InsertBefore operation that takes a callback.\n\t     *\n\t     * @param {Node} el\n\t     * @param {Node} target\n\t     * @param {Vue} vm - unused\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    function beforeWithCb(el, target, vm, cb) {\n\t      before(el, target);\n\t      if (cb) cb();\n\t    }\n\t\n\t    /**\n\t     * Remove operation that takes a callback.\n\t     *\n\t     * @param {Node} el\n\t     * @param {Vue} vm - unused\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    function removeWithCb(el, vm, cb) {\n\t      remove(el);\n\t      if (cb) cb();\n\t    }\n\t  }\n\t\n\t  function eventsAPI(Vue) {\n\t\n\t    /**\n\t     * Listen on the given `event` with `fn`.\n\t     *\n\t     * @param {String} event\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Vue.prototype.$on = function (event, fn) {\n\t      (this._events[event] || (this._events[event] = [])).push(fn);\n\t      modifyListenerCount(this, event, 1);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Adds an `event` listener that will be invoked a single\n\t     * time then automatically removed.\n\t     *\n\t     * @param {String} event\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Vue.prototype.$once = function (event, fn) {\n\t      var self = this;\n\t      function on() {\n\t        self.$off(event, on);\n\t        fn.apply(this, arguments);\n\t      }\n\t      on.fn = fn;\n\t      this.$on(event, on);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Remove the given callback for `event` or all\n\t     * registered callbacks.\n\t     *\n\t     * @param {String} event\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Vue.prototype.$off = function (event, fn) {\n\t      var cbs;\n\t      // all\n\t      if (!arguments.length) {\n\t        if (this.$parent) {\n\t          for (event in this._events) {\n\t            cbs = this._events[event];\n\t            if (cbs) {\n\t              modifyListenerCount(this, event, -cbs.length);\n\t            }\n\t          }\n\t        }\n\t        this._events = {};\n\t        return this;\n\t      }\n\t      // specific event\n\t      cbs = this._events[event];\n\t      if (!cbs) {\n\t        return this;\n\t      }\n\t      if (arguments.length === 1) {\n\t        modifyListenerCount(this, event, -cbs.length);\n\t        this._events[event] = null;\n\t        return this;\n\t      }\n\t      // specific handler\n\t      var cb;\n\t      var i = cbs.length;\n\t      while (i--) {\n\t        cb = cbs[i];\n\t        if (cb === fn || cb.fn === fn) {\n\t          modifyListenerCount(this, event, -1);\n\t          cbs.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Trigger an event on self.\n\t     *\n\t     * @param {String} event\n\t     * @return {Boolean} shouldPropagate\n\t     */\n\t\n\t    Vue.prototype.$emit = function (event) {\n\t      var cbs = this._events[event];\n\t      var shouldPropagate = !cbs;\n\t      if (cbs) {\n\t        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t        var args = toArray(arguments, 1);\n\t        for (var i = 0, l = cbs.length; i < l; i++) {\n\t          var res = cbs[i].apply(this, args);\n\t          if (res === true) {\n\t            shouldPropagate = true;\n\t          }\n\t        }\n\t      }\n\t      return shouldPropagate;\n\t    };\n\t\n\t    /**\n\t     * Recursively broadcast an event to all children instances.\n\t     *\n\t     * @param {String} event\n\t     * @param {...*} additional arguments\n\t     */\n\t\n\t    Vue.prototype.$broadcast = function (event) {\n\t      // if no child has registered for this event,\n\t      // then there's no need to broadcast.\n\t      if (!this._eventsCount[event]) return;\n\t      var children = this.$children;\n\t      for (var i = 0, l = children.length; i < l; i++) {\n\t        var child = children[i];\n\t        var shouldPropagate = child.$emit.apply(child, arguments);\n\t        if (shouldPropagate) {\n\t          child.$broadcast.apply(child, arguments);\n\t        }\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Recursively propagate an event up the parent chain.\n\t     *\n\t     * @param {String} event\n\t     * @param {...*} additional arguments\n\t     */\n\t\n\t    Vue.prototype.$dispatch = function () {\n\t      this.$emit.apply(this, arguments);\n\t      var parent = this.$parent;\n\t      while (parent) {\n\t        var shouldPropagate = parent.$emit.apply(parent, arguments);\n\t        parent = shouldPropagate ? parent.$parent : null;\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Modify the listener counts on all parents.\n\t     * This bookkeeping allows $broadcast to return early when\n\t     * no child has listened to a certain event.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} event\n\t     * @param {Number} count\n\t     */\n\t\n\t    var hookRE = /^hook:/;\n\t    function modifyListenerCount(vm, event, count) {\n\t      var parent = vm.$parent;\n\t      // hooks do not get broadcasted so no need\n\t      // to do bookkeeping for them\n\t      if (!parent || !count || hookRE.test(event)) return;\n\t      while (parent) {\n\t        parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t        parent = parent.$parent;\n\t      }\n\t    }\n\t  }\n\t\n\t  function lifecycleAPI(Vue) {\n\t\n\t    /**\n\t     * Set instance target element and kick off the compilation\n\t     * process. The passed in `el` can be a selector string, an\n\t     * existing Element, or a DocumentFragment (for block\n\t     * instances).\n\t     *\n\t     * @param {Element|DocumentFragment|string} el\n\t     * @public\n\t     */\n\t\n\t    Vue.prototype.$mount = function (el) {\n\t      if (this._isCompiled) {\n\t        'development' !== 'production' && warn('$mount() should be called only once.');\n\t        return;\n\t      }\n\t      el = query(el);\n\t      if (!el) {\n\t        el = document.createElement('div');\n\t      }\n\t      this._compile(el);\n\t      this._initDOMHooks();\n\t      if (inDoc(this.$el)) {\n\t        this._callHook('attached');\n\t        ready.call(this);\n\t      } else {\n\t        this.$once('hook:attached', ready);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Mark an instance as ready.\n\t     */\n\t\n\t    function ready() {\n\t      this._isAttached = true;\n\t      this._isReady = true;\n\t      this._callHook('ready');\n\t    }\n\t\n\t    /**\n\t     * Teardown the instance, simply delegate to the internal\n\t     * _destroy.\n\t     */\n\t\n\t    Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t      this._destroy(remove, deferCleanup);\n\t    };\n\t\n\t    /**\n\t     * Partially compile a piece of DOM and return a\n\t     * decompile function.\n\t     *\n\t     * @param {Element|DocumentFragment} el\n\t     * @param {Vue} [host]\n\t     * @return {Function}\n\t     */\n\t\n\t    Vue.prototype.$compile = function (el, host, scope, frag) {\n\t      return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The exposed Vue constructor.\n\t   *\n\t   * API conventions:\n\t   * - public API methods/properties are prefixed with `$`\n\t   * - internal methods/properties are prefixed with `_`\n\t   * - non-prefixed properties are assumed to be proxied user\n\t   *   data.\n\t   *\n\t   * @constructor\n\t   * @param {Object} [options]\n\t   * @public\n\t   */\n\t\n\t  function Vue(options) {\n\t    this._init(options);\n\t  }\n\t\n\t  // install internals\n\t  initMixin(Vue);\n\t  stateMixin(Vue);\n\t  eventsMixin(Vue);\n\t  lifecycleMixin(Vue);\n\t  miscMixin(Vue);\n\t\n\t  // install APIs\n\t  globalAPI(Vue);\n\t  dataAPI(Vue);\n\t  domAPI(Vue);\n\t  eventsAPI(Vue);\n\t  lifecycleAPI(Vue);\n\t\n\t  var convertArray = vFor._postProcess;\n\t\n\t  /**\n\t   * Limit filter for arrays\n\t   *\n\t   * @param {Number} n\n\t   * @param {Number} offset (Decimal expected)\n\t   */\n\t\n\t  function limitBy(arr, n, offset) {\n\t    offset = offset ? parseInt(offset, 10) : 0;\n\t    return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t  }\n\t\n\t  /**\n\t   * Filter filter for arrays\n\t   *\n\t   * @param {String} search\n\t   * @param {String} [delimiter]\n\t   * @param {String} ...dataKeys\n\t   */\n\t\n\t  function filterBy(arr, search, delimiter) {\n\t    arr = convertArray(arr);\n\t    if (search == null) {\n\t      return arr;\n\t    }\n\t    if (typeof search === 'function') {\n\t      return arr.filter(search);\n\t    }\n\t    // cast to lowercase string\n\t    search = ('' + search).toLowerCase();\n\t    // allow optional `in` delimiter\n\t    // because why not\n\t    var n = delimiter === 'in' ? 3 : 2;\n\t    // extract and flatten keys\n\t    var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t      return prev.concat(cur);\n\t    }, []);\n\t    var res = [];\n\t    var item, key, val, j;\n\t    for (var i = 0, l = arr.length; i < l; i++) {\n\t      item = arr[i];\n\t      val = item && item.$value || item;\n\t      j = keys.length;\n\t      if (j) {\n\t        while (j--) {\n\t          key = keys[j];\n\t          if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t            res.push(item);\n\t            break;\n\t          }\n\t        }\n\t      } else if (contains(item, search)) {\n\t        res.push(item);\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Filter filter for arrays\n\t   *\n\t   * @param {String} sortKey\n\t   * @param {String} reverse\n\t   */\n\t\n\t  function orderBy(arr, sortKey, reverse) {\n\t    arr = convertArray(arr);\n\t    if (!sortKey) {\n\t      return arr;\n\t    }\n\t    var order = reverse && reverse < 0 ? -1 : 1;\n\t    // sort on a copy to avoid mutating original array\n\t    return arr.slice().sort(function (a, b) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t      return a === b ? 0 : a > b ? order : -order;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * String contain helper\n\t   *\n\t   * @param {*} val\n\t   * @param {String} search\n\t   */\n\t\n\t  function contains(val, search) {\n\t    var i;\n\t    if (isPlainObject(val)) {\n\t      var keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) {\n\t        if (contains(val[keys[i]], search)) {\n\t          return true;\n\t        }\n\t      }\n\t    } else if (isArray(val)) {\n\t      i = val.length;\n\t      while (i--) {\n\t        if (contains(val[i], search)) {\n\t          return true;\n\t        }\n\t      }\n\t    } else if (val != null) {\n\t      return val.toString().toLowerCase().indexOf(search) > -1;\n\t    }\n\t  }\n\t\n\t  var digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t  // asset collections must be a plain object.\n\t  var filters = {\n\t\n\t    orderBy: orderBy,\n\t    filterBy: filterBy,\n\t    limitBy: limitBy,\n\t\n\t    /**\n\t     * Stringify value.\n\t     *\n\t     * @param {Number} indent\n\t     */\n\t\n\t    json: {\n\t      read: function read(value, indent) {\n\t        return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t      },\n\t      write: function write(value) {\n\t        try {\n\t          return JSON.parse(value);\n\t        } catch (e) {\n\t          return value;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * 'abc' => 'Abc'\n\t     */\n\t\n\t    capitalize: function capitalize(value) {\n\t      if (!value && value !== 0) return '';\n\t      value = value.toString();\n\t      return value.charAt(0).toUpperCase() + value.slice(1);\n\t    },\n\t\n\t    /**\n\t     * 'abc' => 'ABC'\n\t     */\n\t\n\t    uppercase: function uppercase(value) {\n\t      return value || value === 0 ? value.toString().toUpperCase() : '';\n\t    },\n\t\n\t    /**\n\t     * 'AbC' => 'abc'\n\t     */\n\t\n\t    lowercase: function lowercase(value) {\n\t      return value || value === 0 ? value.toString().toLowerCase() : '';\n\t    },\n\t\n\t    /**\n\t     * 12345 => $12,345.00\n\t     *\n\t     * @param {String} sign\n\t     */\n\t\n\t    currency: function currency(value, _currency) {\n\t      value = parseFloat(value);\n\t      if (!isFinite(value) || !value && value !== 0) return '';\n\t      _currency = _currency != null ? _currency : '$';\n\t      var stringified = Math.abs(value).toFixed(2);\n\t      var _int = stringified.slice(0, -3);\n\t      var i = _int.length % 3;\n\t      var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t      var _float = stringified.slice(-3);\n\t      var sign = value < 0 ? '-' : '';\n\t      return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t    },\n\t\n\t    /**\n\t     * 'item' => 'items'\n\t     *\n\t     * @params\n\t     *  an array of strings corresponding to\n\t     *  the single, double, triple ... forms of the word to\n\t     *  be pluralized. When the number to be pluralized\n\t     *  exceeds the length of the args, it will use the last\n\t     *  entry in the array.\n\t     *\n\t     *  e.g. ['single', 'double', 'triple', 'multiple']\n\t     */\n\t\n\t    pluralize: function pluralize(value) {\n\t      var args = toArray(arguments, 1);\n\t      return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t    },\n\t\n\t    /**\n\t     * Debounce a handler function.\n\t     *\n\t     * @param {Function} handler\n\t     * @param {Number} delay = 300\n\t     * @return {Function}\n\t     */\n\t\n\t    debounce: function debounce(handler, delay) {\n\t      if (!handler) return;\n\t      if (!delay) {\n\t        delay = 300;\n\t      }\n\t      return _debounce(handler, delay);\n\t    }\n\t  };\n\t\n\t  var partial = {\n\t\n\t    priority: PARTIAL,\n\t\n\t    params: ['name'],\n\t\n\t    // watch changes to name for dynamic partials\n\t    paramWatchers: {\n\t      name: function name(value) {\n\t        vIf.remove.call(this);\n\t        if (value) {\n\t          this.insert(value);\n\t        }\n\t      }\n\t    },\n\t\n\t    bind: function bind() {\n\t      this.anchor = createAnchor('v-partial');\n\t      replace(this.el, this.anchor);\n\t      this.insert(this.params.name);\n\t    },\n\t\n\t    insert: function insert(id) {\n\t      var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t      if (true) {\n\t        assertAsset(partial, 'partial', id);\n\t      }\n\t      if (partial) {\n\t        this.factory = new FragmentFactory(this.vm, partial);\n\t        vIf.insert.call(this);\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      if (this.frag) {\n\t        this.frag.destroy();\n\t      }\n\t    }\n\t  };\n\t\n\t  // This is the elementDirective that handles <content>\n\t  // transclusions. It relies on the raw content of an\n\t  // instance being stored as `$options._content` during\n\t  // the transclude phase.\n\t\n\t  // We are exporting two versions, one for named and one\n\t  // for unnamed, because the unnamed slots must be compiled\n\t  // AFTER all named slots have selected their content. So\n\t  // we need to give them different priorities in the compilation\n\t  // process. (See #1965)\n\t\n\t  var slot = {\n\t\n\t    priority: SLOT,\n\t\n\t    bind: function bind() {\n\t      var host = this.vm;\n\t      var raw = host.$options._content;\n\t      if (!raw) {\n\t        this.fallback();\n\t        return;\n\t      }\n\t      var context = host._context;\n\t      var slotName = this.params && this.params.name;\n\t      if (!slotName) {\n\t        // Default slot\n\t        this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n\t      } else {\n\t        // Named slot\n\t        var selector = '[slot=\"' + slotName + '\"]';\n\t        var nodes = raw.querySelectorAll(selector);\n\t        if (nodes.length) {\n\t          this.tryCompile(extractFragment(nodes, raw), context, host);\n\t        } else {\n\t          this.fallback();\n\t        }\n\t      }\n\t    },\n\t\n\t    tryCompile: function tryCompile(content, context, host) {\n\t      if (content.hasChildNodes()) {\n\t        this.compile(content, context, host);\n\t      } else {\n\t        this.fallback();\n\t      }\n\t    },\n\t\n\t    compile: function compile(content, context, host) {\n\t      if (content && context) {\n\t        var scope = host ? host._scope : this._scope;\n\t        this.unlink = context.$compile(content, host, scope, this._frag);\n\t      }\n\t      if (content) {\n\t        replace(this.el, content);\n\t      } else {\n\t        remove(this.el);\n\t      }\n\t    },\n\t\n\t    fallback: function fallback() {\n\t      this.compile(extractContent(this.el, true), this.vm);\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      if (this.unlink) {\n\t        this.unlink();\n\t      }\n\t    }\n\t  };\n\t\n\t  var namedSlot = extend(extend({}, slot), {\n\t    priority: slot.priority + 1,\n\t    params: ['name']\n\t  });\n\t\n\t  /**\n\t   * Extract qualified content nodes from a node list.\n\t   *\n\t   * @param {NodeList} nodes\n\t   * @param {Element} parent\n\t   * @param {Boolean} main\n\t   * @return {DocumentFragment}\n\t   */\n\t\n\t  function extractFragment(nodes, parent, main) {\n\t    var frag = document.createDocumentFragment();\n\t    for (var i = 0, l = nodes.length; i < l; i++) {\n\t      var node = nodes[i];\n\t      // if this is the main outlet, we want to skip all\n\t      // previously selected nodes;\n\t      // otherwise, we want to mark the node as selected.\n\t      // clone the node so the original raw content remains\n\t      // intact. this ensures proper re-compilation in cases\n\t      // where the outlet is inside a conditional block\n\t      if (main && !node.__v_selected) {\n\t        append(node);\n\t      } else if (!main && node.parentNode === parent) {\n\t        node.__v_selected = true;\n\t        append(node);\n\t      }\n\t    }\n\t    return frag;\n\t\n\t    function append(node) {\n\t      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t        node = parseTemplate(node);\n\t      }\n\t      node = cloneNode(node);\n\t      frag.appendChild(node);\n\t    }\n\t  }\n\t\n\t  var elementDirectives = {\n\t    slot: slot,\n\t    _namedSlot: namedSlot, // same as slot but with higher priority\n\t    partial: partial\n\t  };\n\t\n\t  Vue.version = '1.0.13';\n\t\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: publicDirectives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  // devtools global hook\n\t  /* istanbul ignore if */\n\t  if ('development' !== 'production' && inBrowser) {\n\t    if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n\t      window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('init', Vue);\n\t    } else if (/Chrome\\/\\d+/.test(navigator.userAgent)) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t\n\t  return Vue;\n\t});\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(4)\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(8)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _product = __webpack_require__(6);\n\t\n\tvar _product2 = _interopRequireDefault(_product);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// <style>\n\t// \tbody{\n\t// \t\tcolor:#ddd;\n\t// \t\th2{color:#ff0;}\n\t// \t}\n\t// </style>\n\t//\n\t// <template>\n\t// \t<div class=\"my-component\">\n\t// \t\t<h2 v-on:click=\"test\">{{msg}}</h2>\n\t// \t\t<input v-model=\"msg\">\n\t// \t</div>\n\t// </template>\n\t//\n\t// <script>\n\t\n\t__webpack_require__(7);\n\t\n\tconsole.log(_product2.default);\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      msg: 'Hellow Vue Component'\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    test: function test() {\n\t      alert(this.msg);\n\t    }\n\t  }\n\t};\n\t// </script>\n\t/* generated by vue-loader */\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"goods\": [\n\t\t\t{\n\t\t\t\t\"cart_id\": \"59003907\",\n\t\t\t\t\"goods_id\": \"451001\",\n\t\t\t\t\"title\": \"Casual Scoop Neck Floral Print Hollow Out Dress For Women\",\n\t\t\t\t\"market_price\": \"16.85\",\n\t\t\t\t\"goods_price\": \"10.33\",\n\t\t\t\t\"goods_number\": 20,\n\t\t\t\t\"goods_attr\": \"Size:M Color: COLORMIX\",\n\t\t\t\t\"goods_off\": 39,\n\t\t\t\t\"is_checked\": false,\n\t\t\t\t\"is_collect\": false,\n\t\t\t\t\"is_presale\": true,\n\t\t\t\t\"subtotal\": \"20.66\",\n\t\t\t\t\"img\": \"http://gloimg.rosegal.com/rosegal/pdm-product-pic/Clothing/2016/05/11/grid-img/1462913545923970764.jpg\",\n\t\t\t\t\"url\": \"http://www.rosegal.com/casual-dresses/casual-scoop-neck-floral-print-451001.html\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"cart_id\": \"58933347\",\n\t\t\t\t\"goods_id\": \"469331\",\n\t\t\t\t\"title\": \"Stylish Rhinestone and Fishbone Design Sandals For Women\",\n\t\t\t\t\"market_price\": \"53.35\",\n\t\t\t\t\"goods_price\": \"22.22\",\n\t\t\t\t\"goods_number\": 10,\n\t\t\t\t\"goods_attr\": \"Size:38 Color: PINK\",\n\t\t\t\t\"goods_off\": 58,\n\t\t\t\t\"is_checked\": false,\n\t\t\t\t\"is_collect\": true,\n\t\t\t\t\"is_presale\": false,\n\t\t\t\t\"subtotal\": \"44.44\",\n\t\t\t\t\"img\": \"http://gloimg.rosegal.com/rosegal/pdm-product-pic/Clothing/2016/03/31/grid-img/1463358613445438700.jpg\",\n\t\t\t\t\"url\": \"http://www.rosegal.com/sandals/stylish-rhinestone-and-fishbone-design-sandals-for-women-469331.html\"\n\t\t\t}\n\t\t],\n\t\t\"total\": {\n\t\t\t\"goods_price\": \"65.10\"\n\t\t}\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=my-component> <h2 v-on:click=test>{{msg}}</h2> <input v-model=msg> </div> \";\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** js/bundle.js?v=b22c7c47a6a430860fce\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b22c7c47a6a430860fce\n **/","import {yuuk}  from './js/sub';\r\nimport Vue from './js/vue';\r\nimport App from './components/test';\r\n\r\nvar vm = new Vue({\r\n\tel: 'body',\r\n \tcomponents:{\r\n    \t'app': App\r\n  \t}\r\n});\r\n\r\n//require('./less/main.less');\n\n\n/** WEBPACK FOOTER **\n ** ./src/entry.js\n **/","var yuuk = {\r\n\tname : \"kevin\",\r\n\tage : 23\r\n}\r\nexport {yuuk};\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/sub.js\n **/","/*!\n * Vue.js v1.0.13\n * (c) 2015 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Vue = factory();\n}(this, function () { 'use strict';\n\n  function set(obj, key, val) {\n    if (hasOwn(obj, key)) {\n      obj[key] = val;\n      return;\n    }\n    if (obj._isVue) {\n      set(obj._data, key, val);\n      return;\n    }\n    var ob = obj.__ob__;\n    if (!ob) {\n      obj[key] = val;\n      return;\n    }\n    ob.convert(key, val);\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._proxy(key);\n        vm._digest();\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Delete a property and trigger change if necessary.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   */\n\n  function del(obj, key) {\n    if (!hasOwn(obj, key)) {\n      return;\n    }\n    delete obj[key];\n    var ob = obj.__ob__;\n    if (!ob) {\n      return;\n    }\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._unproxy(key);\n        vm._digest();\n      }\n    }\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check whether the object has the property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @return {Boolean}\n   */\n\n  function hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }\n\n  /**\n   * Check if an expression is a literal value.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  var literalValueRE = /^\\s?(true|false|[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\n  function isLiteral(exp) {\n    return literalValueRE.test(exp);\n  }\n\n  /**\n   * Check if a string starts with $ or _\n   *\n   * @param {String} str\n   * @return {Boolean}\n   */\n\n  function isReserved(str) {\n    var c = (str + '').charCodeAt(0);\n    return c === 0x24 || c === 0x5F;\n  }\n\n  /**\n   * Guard text output, make sure undefined outputs\n   * empty string\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function _toString(value) {\n    return value == null ? '' : value.toString();\n  }\n\n  /**\n   * Check and convert possible numeric strings to numbers\n   * before setting back to data\n   *\n   * @param {*} value\n   * @return {*|Number}\n   */\n\n  function toNumber(value) {\n    if (typeof value !== 'string') {\n      return value;\n    } else {\n      var parsed = Number(value);\n      return isNaN(parsed) ? value : parsed;\n    }\n  }\n\n  /**\n   * Convert string boolean literals into real booleans.\n   *\n   * @param {*} value\n   * @return {*|Boolean}\n   */\n\n  function toBoolean(value) {\n    return value === 'true' ? true : value === 'false' ? false : value;\n  }\n\n  /**\n   * Strip quotes from a string\n   *\n   * @param {String} str\n   * @return {String | false}\n   */\n\n  function stripQuotes(str) {\n    var a = str.charCodeAt(0);\n    var b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n  }\n\n  /**\n   * Camelize a hyphen-delmited string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var camelizeRE = /-(\\w)/g;\n\n  function camelize(str) {\n    return str.replace(camelizeRE, toUpper);\n  }\n\n  function toUpper(_, c) {\n    return c ? c.toUpperCase() : '';\n  }\n\n  /**\n   * Hyphenate a camelCase string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var hyphenateRE = /([a-z\\d])([A-Z])/g;\n\n  function hyphenate(str) {\n    return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Converts hyphen/underscore/slash delimitered names into\n   * camelized classNames.\n   *\n   * e.g. my-component => MyComponent\n   *      some_else    => SomeElse\n   *      some/comp    => SomeComp\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\n  function classify(str) {\n    return str.replace(classifyRE, toUpper);\n  }\n\n  /**\n   * Simple bind, faster than native\n   *\n   * @param {Function} fn\n   * @param {Object} ctx\n   * @return {Function}\n   */\n\n  function bind$1(fn, ctx) {\n    return function (a) {\n      var l = arguments.length;\n      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n    };\n  }\n\n  /**\n   * Convert an Array-like object to a real Array.\n   *\n   * @param {Array-like} list\n   * @param {Number} [start] - start index\n   * @return {Array}\n   */\n\n  function toArray(list, start) {\n    start = start || 0;\n    var i = list.length - start;\n    var ret = new Array(i);\n    while (i--) {\n      ret[i] = list[i + start];\n    }\n    return ret;\n  }\n\n  /**\n   * Mix properties into target object.\n   *\n   * @param {Object} to\n   * @param {Object} from\n   */\n\n  function extend(to, from) {\n    var keys = Object.keys(from);\n    var i = keys.length;\n    while (i--) {\n      to[keys[i]] = from[keys[i]];\n    }\n    return to;\n  }\n\n  /**\n   * Quick object check - this is primarily used to tell\n   * Objects from primitive values when we know the value\n   * is a JSON-compliant type.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  function isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n  }\n\n  /**\n   * Strict object type check. Only returns true\n   * for plain JavaScript objects.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var toString = Object.prototype.toString;\n  var OBJECT_STRING = '[object Object]';\n\n  function isPlainObject(obj) {\n    return toString.call(obj) === OBJECT_STRING;\n  }\n\n  /**\n   * Array type check.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var isArray = Array.isArray;\n\n  /**\n   * Define a non-enumerable property\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   * @param {Boolean} [enumerable]\n   */\n\n  function def(obj, key, val, enumerable) {\n    Object.defineProperty(obj, key, {\n      value: val,\n      enumerable: !!enumerable,\n      writable: true,\n      configurable: true\n    });\n  }\n\n  /**\n   * Debounce a function so it only gets called after the\n   * input stops arriving after the given wait period.\n   *\n   * @param {Function} func\n   * @param {Number} wait\n   * @return {Function} - the debounced function\n   */\n\n  function _debounce(func, wait) {\n    var timeout, args, context, timestamp, result;\n    var later = function later() {\n      var last = Date.now() - timestamp;\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    };\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = Date.now();\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Manual indexOf because it's slightly faster than\n   * native.\n   *\n   * @param {Array} arr\n   * @param {*} obj\n   */\n\n  function indexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Make a cancellable version of an async callback.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   */\n\n  function cancellable(fn) {\n    var cb = function cb() {\n      if (!cb.cancelled) {\n        return fn.apply(this, arguments);\n      }\n    };\n    cb.cancel = function () {\n      cb.cancelled = true;\n    };\n    return cb;\n  }\n\n  /**\n   * Check if two values are loosely equal - that is,\n   * if they are plain objects, do they have the same shape?\n   *\n   * @param {*} a\n   * @param {*} b\n   * @return {Boolean}\n   */\n\n  function looseEqual(a, b) {\n    /* eslint-disable eqeqeq */\n    return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n    /* eslint-enable eqeqeq */\n  }\n\n  var hasProto = ('__proto__' in {});\n\n  // Browser environment sniffing\n  var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n  var isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\n  var isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\n  var transitionProp = undefined;\n  var transitionEndEvent = undefined;\n  var animationProp = undefined;\n  var animationEndEvent = undefined;\n\n  // Transition property/event sniffing\n  if (inBrowser && !isIE9) {\n    var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n    var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n    transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n    transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n    animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n    animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n  }\n\n  /**\n   * Defer a task to execute it asynchronously. Ideally this\n   * should be executed as a microtask, so we leverage\n   * MutationObserver if it's available, and fallback to\n   * setTimeout(0).\n   *\n   * @param {Function} cb\n   * @param {Object} ctx\n   */\n\n  var nextTick = (function () {\n    var callbacks = [];\n    var pending = false;\n    var timerFunc;\n    function nextTickHandler() {\n      pending = false;\n      var copies = callbacks.slice(0);\n      callbacks = [];\n      for (var i = 0; i < copies.length; i++) {\n        copies[i]();\n      }\n    }\n    /* istanbul ignore if */\n    if (typeof MutationObserver !== 'undefined') {\n      var counter = 1;\n      var observer = new MutationObserver(nextTickHandler);\n      var textNode = document.createTextNode(counter);\n      observer.observe(textNode, {\n        characterData: true\n      });\n      timerFunc = function () {\n        counter = (counter + 1) % 2;\n        textNode.data = counter;\n      };\n    } else {\n      timerFunc = setTimeout;\n    }\n    return function (cb, ctx) {\n      var func = ctx ? function () {\n        cb.call(ctx);\n      } : cb;\n      callbacks.push(func);\n      if (pending) return;\n      pending = true;\n      timerFunc(nextTickHandler, 0);\n    };\n  })();\n\n  function Cache(limit) {\n    this.size = 0;\n    this.limit = limit;\n    this.head = this.tail = undefined;\n    this._keymap = Object.create(null);\n  }\n\n  var p = Cache.prototype;\n\n  /**\n   * Put <value> into the cache associated with <key>.\n   * Returns the entry which was removed to make room for\n   * the new entry. Otherwise undefined is returned.\n   * (i.e. if there was enough room already).\n   *\n   * @param {String} key\n   * @param {*} value\n   * @return {Entry|undefined}\n   */\n\n  p.put = function (key, value) {\n    var entry = {\n      key: key,\n      value: value\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    if (this.size === this.limit) {\n      return this.shift();\n    } else {\n      this.size++;\n    }\n  };\n\n  /**\n   * Purge the least recently used (oldest) entry from the\n   * cache. Returns the removed entry or undefined if the\n   * cache was empty.\n   */\n\n  p.shift = function () {\n    var entry = this.head;\n    if (entry) {\n      this.head = this.head.newer;\n      this.head.older = undefined;\n      entry.newer = entry.older = undefined;\n      this._keymap[entry.key] = undefined;\n    }\n    return entry;\n  };\n\n  /**\n   * Get and register recent use of <key>. Returns the value\n   * associated with <key> or undefined if not in cache.\n   *\n   * @param {String} key\n   * @param {Boolean} returnEntry\n   * @return {Entry|*}\n   */\n\n  p.get = function (key, returnEntry) {\n    var entry = this._keymap[key];\n    if (entry === undefined) return;\n    if (entry === this.tail) {\n      return returnEntry ? entry : entry.value;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry.newer) {\n      if (entry === this.head) {\n        this.head = entry.newer;\n      }\n      entry.newer.older = entry.older; // C <-- E.\n    }\n    if (entry.older) {\n      entry.older.newer = entry.newer; // C. --> E\n    }\n    entry.newer = undefined; // D --x\n    entry.older = this.tail; // D. --> E\n    if (this.tail) {\n      this.tail.newer = entry; // E. <-- D\n    }\n    this.tail = entry;\n    return returnEntry ? entry : entry.value;\n  };\n\n  var cache$1 = new Cache(1000);\n  var filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n  var reservedArgRE = /^in$|^-?\\d+/;\n\n  /**\n   * Parser state\n   */\n\n  var str;\n  var dir;\n  var c;\n  var prev;\n  var i;\n  var l;\n  var lastFilterIndex;\n  var inSingle;\n  var inDouble;\n  var curly;\n  var square;\n  var paren;\n  /**\n   * Push a filter to the current directive object\n   */\n\n  function pushFilter() {\n    var exp = str.slice(lastFilterIndex, i).trim();\n    var filter;\n    if (exp) {\n      filter = {};\n      var tokens = exp.match(filterTokenRE);\n      filter.name = tokens[0];\n      if (tokens.length > 1) {\n        filter.args = tokens.slice(1).map(processFilterArg);\n      }\n    }\n    if (filter) {\n      (dir.filters = dir.filters || []).push(filter);\n    }\n    lastFilterIndex = i + 1;\n  }\n\n  /**\n   * Check if an argument is dynamic and strip quotes.\n   *\n   * @param {String} arg\n   * @return {Object}\n   */\n\n  function processFilterArg(arg) {\n    if (reservedArgRE.test(arg)) {\n      return {\n        value: toNumber(arg),\n        dynamic: false\n      };\n    } else {\n      var stripped = stripQuotes(arg);\n      var dynamic = stripped === arg;\n      return {\n        value: dynamic ? arg : stripped,\n        dynamic: dynamic\n      };\n    }\n  }\n\n  /**\n   * Parse a directive value and extract the expression\n   * and its filters into a descriptor.\n   *\n   * Example:\n   *\n   * \"a + 1 | uppercase\" will yield:\n   * {\n   *   expression: 'a + 1',\n   *   filters: [\n   *     { name: 'uppercase', args: null }\n   *   ]\n   * }\n   *\n   * @param {String} str\n   * @return {Object}\n   */\n\n  function parseDirective(s) {\n\n    var hit = cache$1.get(s);\n    if (hit) {\n      return hit;\n    }\n\n    // reset parser state\n    str = s;\n    inSingle = inDouble = false;\n    curly = square = paren = 0;\n    lastFilterIndex = 0;\n    dir = {};\n\n    for (i = 0, l = str.length; i < l; i++) {\n      prev = c;\n      c = str.charCodeAt(i);\n      if (inSingle) {\n        // check single quote\n        if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n      } else if (inDouble) {\n        // check double quote\n        if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n      } else if (c === 0x7C && // pipe\n      str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n        if (dir.expression == null) {\n          // first filter, end of expression\n          lastFilterIndex = i + 1;\n          dir.expression = str.slice(0, i).trim();\n        } else {\n          // already has filter\n          pushFilter();\n        }\n      } else {\n        switch (c) {\n          case 0x22:\n            inDouble = true;break; // \"\n          case 0x27:\n            inSingle = true;break; // '\n          case 0x28:\n            paren++;break; // (\n          case 0x29:\n            paren--;break; // )\n          case 0x5B:\n            square++;break; // [\n          case 0x5D:\n            square--;break; // ]\n          case 0x7B:\n            curly++;break; // {\n          case 0x7D:\n            curly--;break; // }\n        }\n      }\n    }\n\n    if (dir.expression == null) {\n      dir.expression = str.slice(0, i).trim();\n    } else if (lastFilterIndex !== 0) {\n      pushFilter();\n    }\n\n    cache$1.put(s, dir);\n    return dir;\n  }\n\n  var directive = Object.freeze({\n    parseDirective: parseDirective\n  });\n\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var cache = undefined;\n  var tagRE = undefined;\n  var htmlRE = undefined;\n  /**\n   * Escape a string so it can be used in a RegExp\n   * constructor.\n   *\n   * @param {String} str\n   */\n\n  function escapeRegex(str) {\n    return str.replace(regexEscapeRE, '\\\\$&');\n  }\n\n  function compileRegex() {\n    var open = escapeRegex(config.delimiters[0]);\n    var close = escapeRegex(config.delimiters[1]);\n    var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n    var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n    tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n    htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n    // reset cache\n    cache = new Cache(1000);\n  }\n\n  /**\n   * Parse a template text string into an array of tokens.\n   *\n   * @param {String} text\n   * @return {Array<Object> | null}\n   *               - {String} type\n   *               - {String} value\n   *               - {Boolean} [html]\n   *               - {Boolean} [oneTime]\n   */\n\n  function parseText(text) {\n    if (!cache) {\n      compileRegex();\n    }\n    var hit = cache.get(text);\n    if (hit) {\n      return hit;\n    }\n    text = text.replace(/\\n/g, '');\n    if (!tagRE.test(text)) {\n      return null;\n    }\n    var tokens = [];\n    var lastIndex = tagRE.lastIndex = 0;\n    var match, index, html, value, first, oneTime;\n    /* eslint-disable no-cond-assign */\n    while (match = tagRE.exec(text)) {\n      /* eslint-enable no-cond-assign */\n      index = match.index;\n      // push text token\n      if (index > lastIndex) {\n        tokens.push({\n          value: text.slice(lastIndex, index)\n        });\n      }\n      // tag token\n      html = htmlRE.test(match[0]);\n      value = html ? match[1] : match[2];\n      first = value.charCodeAt(0);\n      oneTime = first === 42; // *\n      value = oneTime ? value.slice(1) : value;\n      tokens.push({\n        tag: true,\n        value: value.trim(),\n        html: html,\n        oneTime: oneTime\n      });\n      lastIndex = index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      tokens.push({\n        value: text.slice(lastIndex)\n      });\n    }\n    cache.put(text, tokens);\n    return tokens;\n  }\n\n  /**\n   * Format a list of tokens into an expression.\n   * e.g. tokens parsed from 'a {{b}} c' can be serialized\n   * into one single expression as '\"a \" + b + \" c\"'.\n   *\n   * @param {Array} tokens\n   * @return {String}\n   */\n\n  function tokensToExp(tokens) {\n    if (tokens.length > 1) {\n      return tokens.map(function (token) {\n        return formatToken(token);\n      }).join('+');\n    } else {\n      return formatToken(tokens[0], true);\n    }\n  }\n\n  /**\n   * Format a single token.\n   *\n   * @param {Object} token\n   * @param {Boolean} single\n   * @return {String}\n   */\n\n  function formatToken(token, single) {\n    return token.tag ? inlineFilters(token.value, single) : '\"' + token.value + '\"';\n  }\n\n  /**\n   * For an attribute with multiple interpolation tags,\n   * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n   * the whole thing into a single watchable expression, we\n   * have to inline those filters. This function does exactly\n   * that. This is a bit hacky but it avoids heavy changes\n   * to directive parser and watcher mechanism.\n   *\n   * @param {String} exp\n   * @param {Boolean} single\n   * @return {String}\n   */\n\n  var filterRE$1 = /[^|]\\|[^|]/;\n  function inlineFilters(exp, single) {\n    if (!filterRE$1.test(exp)) {\n      return single ? exp : '(' + exp + ')';\n    } else {\n      var dir = parseDirective(exp);\n      if (!dir.filters) {\n        return '(' + exp + ')';\n      } else {\n        return 'this._applyFilters(' + dir.expression + // value\n        ',null,' + // oldValue (null for read)\n        JSON.stringify(dir.filters) + // filter descriptors\n        ',false)'; // write?\n      }\n    }\n  }\n\n  var text$1 = Object.freeze({\n    compileRegex: compileRegex,\n    parseText: parseText,\n    tokensToExp: tokensToExp\n  });\n\n  var delimiters = ['{{', '}}'];\n  var unsafeDelimiters = ['{{{', '}}}'];\n\n  var config = Object.defineProperties({\n\n    /**\n     * Whether to print debug messages.\n     * Also enables stack trace for warnings.\n     *\n     * @type {Boolean}\n     */\n\n    debug: false,\n\n    /**\n     * Whether to suppress warnings.\n     *\n     * @type {Boolean}\n     */\n\n    silent: false,\n\n    /**\n     * Whether to use async rendering.\n     */\n\n    async: true,\n\n    /**\n     * Whether to warn against errors caught when evaluating\n     * expressions.\n     */\n\n    warnExpressionErrors: true,\n\n    /**\n     * Whether or not to handle fully object properties which\n     * are already backed by getters and seters. Depending on\n     * use case and environment, this might introduce non-neglible\n     * performance penalties.\n     */\n    convertAllProperties: false,\n\n    /**\n     * Internal flag to indicate the delimiters have been\n     * changed.\n     *\n     * @type {Boolean}\n     */\n\n    _delimitersChanged: true,\n\n    /**\n     * List of asset types that a component can own.\n     *\n     * @type {Array}\n     */\n\n    _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n    /**\n     * prop binding modes\n     */\n\n    _propBindingModes: {\n      ONE_WAY: 0,\n      TWO_WAY: 1,\n      ONE_TIME: 2\n    },\n\n    /**\n     * Max circular updates allowed in a batcher flush cycle.\n     */\n\n    _maxUpdateCount: 100\n\n  }, {\n    delimiters: { /**\n                   * Interpolation delimiters. Changing these would trigger\n                   * the text parser to re-compile the regular expressions.\n                   *\n                   * @type {Array<String>}\n                   */\n\n      get: function get() {\n        return delimiters;\n      },\n      set: function set(val) {\n        delimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    },\n    unsafeDelimiters: {\n      get: function get() {\n        return unsafeDelimiters;\n      },\n      set: function set(val) {\n        unsafeDelimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    }\n  });\n\n  var warn = undefined;\n\n  if ('development' !== 'production') {\n    (function () {\n      var hasConsole = typeof console !== 'undefined';\n      warn = function (msg, e) {\n        if (hasConsole && (!config.silent || config.debug)) {\n          console.warn('[Vue warn]: ' + msg);\n          /* istanbul ignore if */\n          if (config.debug) {\n            if (e) {\n              throw e;\n            } else {\n              console.warn(new Error('Warning Stack Trace').stack);\n            }\n          }\n        }\n      };\n    })();\n  }\n\n  /**\n   * Append with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function appendWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      target.appendChild(el);\n    }, vm, cb);\n  }\n\n  /**\n   * InsertBefore with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function beforeWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      before(el, target);\n    }, vm, cb);\n  }\n\n  /**\n   * Remove with transition.\n   *\n   * @param {Element} el\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function removeWithTransition(el, vm, cb) {\n    applyTransition(el, -1, function () {\n      remove(el);\n    }, vm, cb);\n  }\n\n  /**\n   * Apply transitions with an operation callback.\n   *\n   * @param {Element} el\n   * @param {Number} direction\n   *                  1: enter\n   *                 -1: leave\n   * @param {Function} op - the actual DOM operation\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function applyTransition(el, direction, op, vm, cb) {\n    var transition = el.__v_trans;\n    if (!transition ||\n    // skip if there are no js hooks and CSS transition is\n    // not supported\n    !transition.hooks && !transitionEndEvent ||\n    // skip transitions for initial compile\n    !vm._isCompiled ||\n    // if the vm is being manipulated by a parent directive\n    // during the parent's compilation phase, skip the\n    // animation.\n    vm.$parent && !vm.$parent._isCompiled) {\n      op();\n      if (cb) cb();\n      return;\n    }\n    var action = direction > 0 ? 'enter' : 'leave';\n    transition[action](op, cb);\n  }\n\n  /**\n   * Query an element selector if it's not an element already.\n   *\n   * @param {String|Element} el\n   * @return {Element}\n   */\n\n  function query(el) {\n    if (typeof el === 'string') {\n      var selector = el;\n      el = document.querySelector(el);\n      if (!el) {\n        'development' !== 'production' && warn('Cannot find element: ' + selector);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Check if a node is in the document.\n   * Note: document.documentElement.contains should work here\n   * but always returns false for comment nodes in phantomjs,\n   * making unit tests difficult. This is fixed by doing the\n   * contains() check on the node's parentNode instead of\n   * the node itself.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function inDoc(node) {\n    var doc = document.documentElement;\n    var parent = node && node.parentNode;\n    return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n  }\n\n  /**\n   * Get and remove an attribute from a node.\n   *\n   * @param {Node} node\n   * @param {String} _attr\n   */\n\n  function getAttr(node, _attr) {\n    var val = node.getAttribute(_attr);\n    if (val !== null) {\n      node.removeAttribute(_attr);\n    }\n    return val;\n  }\n\n  /**\n   * Get an attribute with colon or v-bind: prefix.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {String|null}\n   */\n\n  function getBindAttr(node, name) {\n    var val = getAttr(node, ':' + name);\n    if (val === null) {\n      val = getAttr(node, 'v-bind:' + name);\n    }\n    return val;\n  }\n\n  /**\n   * Check the presence of a bind attribute.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {Boolean}\n   */\n\n  function hasBindAttr(node, name) {\n    return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n  }\n\n  /**\n   * Insert el before target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function before(el, target) {\n    target.parentNode.insertBefore(el, target);\n  }\n\n  /**\n   * Insert el after target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function after(el, target) {\n    if (target.nextSibling) {\n      before(el, target.nextSibling);\n    } else {\n      target.parentNode.appendChild(el);\n    }\n  }\n\n  /**\n   * Remove el from DOM\n   *\n   * @param {Element} el\n   */\n\n  function remove(el) {\n    el.parentNode.removeChild(el);\n  }\n\n  /**\n   * Prepend el to target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function prepend(el, target) {\n    if (target.firstChild) {\n      before(el, target.firstChild);\n    } else {\n      target.appendChild(el);\n    }\n  }\n\n  /**\n   * Replace target with el\n   *\n   * @param {Element} target\n   * @param {Element} el\n   */\n\n  function replace(target, el) {\n    var parent = target.parentNode;\n    if (parent) {\n      parent.replaceChild(el, target);\n    }\n  }\n\n  /**\n   * Add event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  function on$1(el, event, cb) {\n    el.addEventListener(event, cb);\n  }\n\n  /**\n   * Remove event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  function off(el, event, cb) {\n    el.removeEventListener(event, cb);\n  }\n\n  /**\n   * In IE9, setAttribute('class') will result in empty class\n   * if the element also has the :class attribute; However in\n   * PhantomJS, setting `className` does not work on SVG elements...\n   * So we have to do a conditional check here.\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function setClass(el, cls) {\n    /* istanbul ignore if */\n    if (isIE9 && !(el instanceof SVGElement)) {\n      el.className = cls;\n    } else {\n      el.setAttribute('class', cls);\n    }\n  }\n\n  /**\n   * Add class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function addClass(el, cls) {\n    if (el.classList) {\n      el.classList.add(cls);\n    } else {\n      var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n      if (cur.indexOf(' ' + cls + ' ') < 0) {\n        setClass(el, (cur + cls).trim());\n      }\n    }\n  }\n\n  /**\n   * Remove class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function removeClass(el, cls) {\n    if (el.classList) {\n      el.classList.remove(cls);\n    } else {\n      var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n      var tar = ' ' + cls + ' ';\n      while (cur.indexOf(tar) >= 0) {\n        cur = cur.replace(tar, ' ');\n      }\n      setClass(el, cur.trim());\n    }\n    if (!el.className) {\n      el.removeAttribute('class');\n    }\n  }\n\n  /**\n   * Extract raw content inside an element into a temporary\n   * container div\n   *\n   * @param {Element} el\n   * @param {Boolean} asFragment\n   * @return {Element}\n   */\n\n  function extractContent(el, asFragment) {\n    var child;\n    var rawContent;\n    /* istanbul ignore if */\n    if (isTemplate(el) && el.content instanceof DocumentFragment) {\n      el = el.content;\n    }\n    if (el.hasChildNodes()) {\n      trimNode(el);\n      rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n      /* eslint-disable no-cond-assign */\n      while (child = el.firstChild) {\n        /* eslint-enable no-cond-assign */\n        rawContent.appendChild(child);\n      }\n    }\n    return rawContent;\n  }\n\n  /**\n   * Trim possible empty head/tail textNodes inside a parent.\n   *\n   * @param {Node} node\n   */\n\n  function trimNode(node) {\n    trim(node, node.firstChild);\n    trim(node, node.lastChild);\n  }\n\n  function trim(parent, node) {\n    if (node && node.nodeType === 3 && !node.data.trim()) {\n      parent.removeChild(node);\n    }\n  }\n\n  /**\n   * Check if an element is a template tag.\n   * Note if the template appears inside an SVG its tagName\n   * will be in lowercase.\n   *\n   * @param {Element} el\n   */\n\n  function isTemplate(el) {\n    return el.tagName && el.tagName.toLowerCase() === 'template';\n  }\n\n  /**\n   * Create an \"anchor\" for performing dom insertion/removals.\n   * This is used in a number of scenarios:\n   * - fragment instance\n   * - v-html\n   * - v-if\n   * - v-for\n   * - component\n   *\n   * @param {String} content\n   * @param {Boolean} persist - IE trashes empty textNodes on\n   *                            cloneNode(true), so in certain\n   *                            cases the anchor needs to be\n   *                            non-empty to be persisted in\n   *                            templates.\n   * @return {Comment|Text}\n   */\n\n  function createAnchor(content, persist) {\n    var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n    anchor.__vue_anchor = true;\n    return anchor;\n  }\n\n  /**\n   * Find a component ref attribute that starts with $.\n   *\n   * @param {Element} node\n   * @return {String|undefined}\n   */\n\n  var refRE = /^v-ref:/;\n\n  function findRef(node) {\n    if (node.hasAttributes()) {\n      var attrs = node.attributes;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        var name = attrs[i].name;\n        if (refRE.test(name)) {\n          return camelize(name.replace(refRE, ''));\n        }\n      }\n    }\n  }\n\n  /**\n   * Map a function to a range of nodes .\n   *\n   * @param {Node} node\n   * @param {Node} end\n   * @param {Function} op\n   */\n\n  function mapNodeRange(node, end, op) {\n    var next;\n    while (node !== end) {\n      next = node.nextSibling;\n      op(node);\n      node = next;\n    }\n    op(end);\n  }\n\n  /**\n   * Remove a range of nodes with transition, store\n   * the nodes in a fragment with correct ordering,\n   * and call callback when done.\n   *\n   * @param {Node} start\n   * @param {Node} end\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Function} cb\n   */\n\n  function removeNodeRange(start, end, vm, frag, cb) {\n    var done = false;\n    var removed = 0;\n    var nodes = [];\n    mapNodeRange(start, end, function (node) {\n      if (node === end) done = true;\n      nodes.push(node);\n      removeWithTransition(node, vm, onRemoved);\n    });\n    function onRemoved() {\n      removed++;\n      if (done && removed >= nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          frag.appendChild(nodes[i]);\n        }\n        cb && cb();\n      }\n    }\n  }\n\n  var commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n  var reservedTagRE = /^(slot|partial|component)$/;\n\n  /**\n   * Check if an element is a component, if yes return its\n   * component id.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function checkComponentAttr(el, options) {\n    var tag = el.tagName.toLowerCase();\n    var hasAttrs = el.hasAttributes();\n    if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n      if (resolveAsset(options, 'components', tag)) {\n        return { id: tag };\n      } else {\n        var is = hasAttrs && getIsBinding(el);\n        if (is) {\n          return is;\n        } else if ('development' !== 'production') {\n          if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n          // Chrome returns unknown for several HTML5 elements.\n          // https://code.google.com/p/chromium/issues/detail?id=540526\n          !/^(data|time|rtc|rb)$/.test(tag)) {\n            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly?');\n          }\n        }\n      }\n    } else if (hasAttrs) {\n      return getIsBinding(el);\n    }\n  }\n\n  /**\n   * Get \"is\" binding from an element.\n   *\n   * @param {Element} el\n   * @return {Object|undefined}\n   */\n\n  function getIsBinding(el) {\n    // dynamic syntax\n    var exp = getAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp };\n    } else {\n      exp = getBindAttr(el, 'is');\n      if (exp != null) {\n        return { id: exp, dynamic: true };\n      }\n    }\n  }\n\n  /**\n   * Set a prop's initial value on a vm and its data object.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function initProp(vm, prop, value) {\n    var key = prop.path;\n    value = coerceProp(prop, value);\n    vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n  }\n\n  /**\n   * Assert whether a prop is valid.\n   *\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function assertProp(prop, value) {\n    // if a prop is not provided and is not required,\n    // skip the check.\n    if (prop.raw === null && !prop.required) {\n      return true;\n    }\n    var options = prop.options;\n    var type = options.type;\n    var valid = true;\n    var expectedType;\n    if (type) {\n      if (type === String) {\n        expectedType = 'string';\n        valid = typeof value === expectedType;\n      } else if (type === Number) {\n        expectedType = 'number';\n        valid = typeof value === 'number';\n      } else if (type === Boolean) {\n        expectedType = 'boolean';\n        valid = typeof value === 'boolean';\n      } else if (type === Function) {\n        expectedType = 'function';\n        valid = typeof value === 'function';\n      } else if (type === Object) {\n        expectedType = 'object';\n        valid = isPlainObject(value);\n      } else if (type === Array) {\n        expectedType = 'array';\n        valid = isArray(value);\n      } else {\n        valid = value instanceof type;\n      }\n    }\n    if (!valid) {\n      'development' !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n      return false;\n    }\n    var validator = options.validator;\n    if (validator) {\n      if (!validator.call(null, value)) {\n        'development' !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Force parsing value with coerce option.\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @return {*}\n   */\n\n  function coerceProp(prop, value) {\n    var coerce = prop.options.coerce;\n    if (!coerce) {\n      return value;\n    }\n    // coerce is a function\n    return coerce(value);\n  }\n\n  function formatType(val) {\n    return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n  }\n\n  function formatValue(val) {\n    return Object.prototype.toString.call(val).slice(8, -1);\n  }\n\n  /**\n   * Option overwriting strategies are functions that handle\n   * how to merge a parent option value and a child option\n   * value into the final value.\n   *\n   * All strategy functions follow the same signature:\n   *\n   * @param {*} parentVal\n   * @param {*} childVal\n   * @param {Vue} [vm]\n   */\n\n  var strats = config.optionMergeStrategies = Object.create(null);\n\n  /**\n   * Helper that recursively merges two data objects together.\n   */\n\n  function mergeData(to, from) {\n    var key, toVal, fromVal;\n    for (key in from) {\n      toVal = to[key];\n      fromVal = from[key];\n      if (!hasOwn(to, key)) {\n        set(to, key, fromVal);\n      } else if (isObject(toVal) && isObject(fromVal)) {\n        mergeData(toVal, fromVal);\n      }\n    }\n    return to;\n  }\n\n  /**\n   * Data\n   */\n\n  strats.data = function (parentVal, childVal, vm) {\n    if (!vm) {\n      // in a Vue.extend merge, both should be functions\n      if (!childVal) {\n        return parentVal;\n      }\n      if (typeof childVal !== 'function') {\n        'development' !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n        return parentVal;\n      }\n      if (!parentVal) {\n        return childVal;\n      }\n      // when parentVal & childVal are both present,\n      // we need to return a function that returns the\n      // merged result of both functions... no need to\n      // check if parentVal is a function here because\n      // it has to be a function to pass previous merges.\n      return function mergedDataFn() {\n        return mergeData(childVal.call(this), parentVal.call(this));\n      };\n    } else if (parentVal || childVal) {\n      return function mergedInstanceDataFn() {\n        // instance merge\n        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n        if (instanceData) {\n          return mergeData(instanceData, defaultData);\n        } else {\n          return defaultData;\n        }\n      };\n    }\n  };\n\n  /**\n   * El\n   */\n\n  strats.el = function (parentVal, childVal, vm) {\n    if (!vm && childVal && typeof childVal !== 'function') {\n      'development' !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return;\n    }\n    var ret = childVal || parentVal;\n    // invoke the element factory if this is instance merge\n    return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n  };\n\n  /**\n   * Hooks and param attributes are merged as arrays.\n   */\n\n  strats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n  };\n\n  /**\n   * 0.11 deprecation warning\n   */\n\n  strats.paramAttributes = function () {\n    /* istanbul ignore next */\n    'development' !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n  };\n\n  /**\n   * Assets\n   *\n   * When a vm is present (instance creation), we need to do\n   * a three-way merge between constructor options, instance\n   * options and parent options.\n   */\n\n  function mergeAssets(parentVal, childVal) {\n    var res = Object.create(parentVal);\n    return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n  }\n\n  config._assetTypes.forEach(function (type) {\n    strats[type + 's'] = mergeAssets;\n  });\n\n  /**\n   * Events & Watchers.\n   *\n   * Events & watchers hashes should not overwrite one\n   * another, so we merge them as arrays.\n   */\n\n  strats.watch = strats.events = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = {};\n    extend(ret, parentVal);\n    for (var key in childVal) {\n      var parent = ret[key];\n      var child = childVal[key];\n      if (parent && !isArray(parent)) {\n        parent = [parent];\n      }\n      ret[key] = parent ? parent.concat(child) : [child];\n    }\n    return ret;\n  };\n\n  /**\n   * Other object hashes.\n   */\n\n  strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = Object.create(null);\n    extend(ret, parentVal);\n    extend(ret, childVal);\n    return ret;\n  };\n\n  /**\n   * Default strategy.\n   */\n\n  var defaultStrat = function defaultStrat(parentVal, childVal) {\n    return childVal === undefined ? parentVal : childVal;\n  };\n\n  /**\n   * Make sure component options get converted to actual\n   * constructors.\n   *\n   * @param {Object} options\n   */\n\n  function guardComponents(options) {\n    if (options.components) {\n      var components = options.components = guardArrayAssets(options.components);\n      var def;\n      var ids = Object.keys(components);\n      for (var i = 0, l = ids.length; i < l; i++) {\n        var key = ids[i];\n        if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n          'development' !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n          continue;\n        }\n        def = components[key];\n        if (isPlainObject(def)) {\n          components[key] = Vue.extend(def);\n        }\n      }\n    }\n  }\n\n  /**\n   * Ensure all props option syntax are normalized into the\n   * Object-based format.\n   *\n   * @param {Object} options\n   */\n\n  function guardProps(options) {\n    var props = options.props;\n    var i, val;\n    if (isArray(props)) {\n      options.props = {};\n      i = props.length;\n      while (i--) {\n        val = props[i];\n        if (typeof val === 'string') {\n          options.props[val] = null;\n        } else if (val.name) {\n          options.props[val.name] = val;\n        }\n      }\n    } else if (isPlainObject(props)) {\n      var keys = Object.keys(props);\n      i = keys.length;\n      while (i--) {\n        val = props[keys[i]];\n        if (typeof val === 'function') {\n          props[keys[i]] = { type: val };\n        }\n      }\n    }\n  }\n\n  /**\n   * Guard an Array-format assets option and converted it\n   * into the key-value Object format.\n   *\n   * @param {Object|Array} assets\n   * @return {Object}\n   */\n\n  function guardArrayAssets(assets) {\n    if (isArray(assets)) {\n      var res = {};\n      var i = assets.length;\n      var asset;\n      while (i--) {\n        asset = assets[i];\n        var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n        if (!id) {\n          'development' !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n        } else {\n          res[id] = asset;\n        }\n      }\n      return res;\n    }\n    return assets;\n  }\n\n  /**\n   * Merge two option objects into a new one.\n   * Core utility used in both instantiation and inheritance.\n   *\n   * @param {Object} parent\n   * @param {Object} child\n   * @param {Vue} [vm] - if vm is present, indicates this is\n   *                     an instantiation merge.\n   */\n\n  function mergeOptions(parent, child, vm) {\n    guardComponents(child);\n    guardProps(child);\n    var options = {};\n    var key;\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n    for (key in parent) {\n      mergeField(key);\n    }\n    for (key in child) {\n      if (!hasOwn(parent, key)) {\n        mergeField(key);\n      }\n    }\n    function mergeField(key) {\n      var strat = strats[key] || defaultStrat;\n      options[key] = strat(parent[key], child[key], vm, key);\n    }\n    return options;\n  }\n\n  /**\n   * Resolve an asset.\n   * This function is used because child instances need access\n   * to assets defined in its ancestor chain.\n   *\n   * @param {Object} options\n   * @param {String} type\n   * @param {String} id\n   * @return {Object|Function}\n   */\n\n  function resolveAsset(options, type, id) {\n    var assets = options[type];\n    var camelizedId;\n    return assets[id] ||\n    // camelCase ID\n    assets[camelizedId = camelize(id)] ||\n    // Pascal Case ID\n    assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  }\n\n  /**\n   * Assert asset exists\n   */\n\n  function assertAsset(val, type, id) {\n    if (!val) {\n      'development' !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n    }\n  }\n\n  var arrayProto = Array.prototype;\n  var arrayMethods = Object.create(arrayProto)\n\n  /**\n   * Intercept mutating methods and emit events\n   */\n\n  ;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n    // cache original method\n    var original = arrayProto[method];\n    def(arrayMethods, method, function mutator() {\n      // avoid leaking arguments:\n      // http://jsperf.com/closure-with-arguments\n      var i = arguments.length;\n      var args = new Array(i);\n      while (i--) {\n        args[i] = arguments[i];\n      }\n      var result = original.apply(this, args);\n      var ob = this.__ob__;\n      var inserted;\n      switch (method) {\n        case 'push':\n          inserted = args;\n          break;\n        case 'unshift':\n          inserted = args;\n          break;\n        case 'splice':\n          inserted = args.slice(2);\n          break;\n      }\n      if (inserted) ob.observeArray(inserted);\n      // notify change\n      ob.dep.notify();\n      return result;\n    });\n  });\n\n  /**\n   * Swap the element at the given index with a new value\n   * and emits corresponding event.\n   *\n   * @param {Number} index\n   * @param {*} val\n   * @return {*} - replaced element\n   */\n\n  def(arrayProto, '$set', function $set(index, val) {\n    if (index >= this.length) {\n      this.length = Number(index) + 1;\n    }\n    return this.splice(index, 1, val)[0];\n  });\n\n  /**\n   * Convenience method to remove the element at given index.\n   *\n   * @param {Number} index\n   * @param {*} val\n   */\n\n  def(arrayProto, '$remove', function $remove(item) {\n    /* istanbul ignore if */\n    if (!this.length) return;\n    var index = indexOf(this, item);\n    if (index > -1) {\n      return this.splice(index, 1);\n    }\n  });\n\n  var uid$3 = 0;\n\n  /**\n   * A dep is an observable that can have multiple\n   * directives subscribing to it.\n   *\n   * @constructor\n   */\n  function Dep() {\n    this.id = uid$3++;\n    this.subs = [];\n  }\n\n  // the current target watcher being evaluated.\n  // this is globally unique because there could be only one\n  // watcher being evaluated at any time.\n  Dep.target = null;\n\n  /**\n   * Add a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.addSub = function (sub) {\n    this.subs.push(sub);\n  };\n\n  /**\n   * Remove a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.removeSub = function (sub) {\n    this.subs.$remove(sub);\n  };\n\n  /**\n   * Add self as a dependency to the target watcher.\n   */\n\n  Dep.prototype.depend = function () {\n    Dep.target.addDep(this);\n  };\n\n  /**\n   * Notify all subscribers of a new value.\n   */\n\n  Dep.prototype.notify = function () {\n    // stablize the subscriber list first\n    var subs = toArray(this.subs);\n    for (var i = 0, l = subs.length; i < l; i++) {\n      subs[i].update();\n    }\n  };\n\n  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n  /**\n   * Observer class that are attached to each observed\n   * object. Once attached, the observer converts target\n   * object's property keys into getter/setters that\n   * collect dependencies and dispatches updates.\n   *\n   * @param {Array|Object} value\n   * @constructor\n   */\n\n  function Observer(value) {\n    this.value = value;\n    this.dep = new Dep();\n    def(value, '__ob__', this);\n    if (isArray(value)) {\n      var augment = hasProto ? protoAugment : copyAugment;\n      augment(value, arrayMethods, arrayKeys);\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  // Instance methods\n\n  /**\n   * Walk through each property and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   *\n   * @param {Object} obj\n   */\n\n  Observer.prototype.walk = function (obj) {\n    var keys = Object.keys(obj);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      this.convert(keys[i], obj[keys[i]]);\n    }\n  };\n\n  /**\n   * Observe a list of Array items.\n   *\n   * @param {Array} items\n   */\n\n  Observer.prototype.observeArray = function (items) {\n    for (var i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  };\n\n  /**\n   * Convert a property into getter/setter so we can emit\n   * the events when the property is accessed/changed.\n   *\n   * @param {String} key\n   * @param {*} val\n   */\n\n  Observer.prototype.convert = function (key, val) {\n    defineReactive(this.value, key, val);\n  };\n\n  /**\n   * Add an owner vm, so that when $set/$delete mutations\n   * happen we can notify owner vms to proxy the keys and\n   * digest the watchers. This is only called when the object\n   * is observed as an instance's root $data.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.addVm = function (vm) {\n    (this.vms || (this.vms = [])).push(vm);\n  };\n\n  /**\n   * Remove an owner vm. This is called when the object is\n   * swapped out as an instance's $data object.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.removeVm = function (vm) {\n    this.vms.$remove(vm);\n  };\n\n  // helpers\n\n  /**\n   * Augment an target Object or Array by intercepting\n   * the prototype chain using __proto__\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */\n\n  function protoAugment(target, src) {\n    target.__proto__ = src;\n  }\n\n  /**\n   * Augment an target Object or Array by defining\n   * hidden properties.\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */\n\n  function copyAugment(target, src, keys) {\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      def(target, key, src[key]);\n    }\n  }\n\n  /**\n   * Attempt to create an observer instance for a value,\n   * returns the new observer if successfully observed,\n   * or the existing observer if the value already has one.\n   *\n   * @param {*} value\n   * @param {Vue} [vm]\n   * @return {Observer|undefined}\n   * @static\n   */\n\n  function observe(value, vm) {\n    if (!value || typeof value !== 'object') {\n      return;\n    }\n    var ob;\n    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n      ob = value.__ob__;\n    } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n      ob = new Observer(value);\n    }\n    if (ob && vm) {\n      ob.addVm(vm);\n    }\n    return ob;\n  }\n\n  /**\n   * Define a reactive property on an Object.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   */\n\n  function defineReactive(obj, key, val) {\n    var dep = new Dep();\n\n    // cater for pre-defined getter/setters\n    var getter, setter;\n    if (config.convertAllProperties) {\n      var property = Object.getOwnPropertyDescriptor(obj, key);\n      if (property && property.configurable === false) {\n        return;\n      }\n      getter = property && property.get;\n      setter = property && property.set;\n    }\n\n    var childOb = observe(val);\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: function reactiveGetter() {\n        var value = getter ? getter.call(obj) : val;\n        if (Dep.target) {\n          dep.depend();\n          if (childOb) {\n            childOb.dep.depend();\n          }\n          if (isArray(value)) {\n            for (var e, i = 0, l = value.length; i < l; i++) {\n              e = value[i];\n              e && e.__ob__ && e.__ob__.dep.depend();\n            }\n          }\n        }\n        return value;\n      },\n      set: function reactiveSetter(newVal) {\n        var value = getter ? getter.call(obj) : val;\n        if (newVal === value) {\n          return;\n        }\n        if (setter) {\n          setter.call(obj, newVal);\n        } else {\n          val = newVal;\n        }\n        childOb = observe(newVal);\n        dep.notify();\n      }\n    });\n  }\n\n  var util = Object.freeze({\n  \tdefineReactive: defineReactive,\n  \tset: set,\n  \tdel: del,\n  \thasOwn: hasOwn,\n  \tisLiteral: isLiteral,\n  \tisReserved: isReserved,\n  \t_toString: _toString,\n  \ttoNumber: toNumber,\n  \ttoBoolean: toBoolean,\n  \tstripQuotes: stripQuotes,\n  \tcamelize: camelize,\n  \thyphenate: hyphenate,\n  \tclassify: classify,\n  \tbind: bind$1,\n  \ttoArray: toArray,\n  \textend: extend,\n  \tisObject: isObject,\n  \tisPlainObject: isPlainObject,\n  \tdef: def,\n  \tdebounce: _debounce,\n  \tindexOf: indexOf,\n  \tcancellable: cancellable,\n  \tlooseEqual: looseEqual,\n  \tisArray: isArray,\n  \thasProto: hasProto,\n  \tinBrowser: inBrowser,\n  \tisIE9: isIE9,\n  \tisAndroid: isAndroid,\n  \tget transitionProp () { return transitionProp; },\n  \tget transitionEndEvent () { return transitionEndEvent; },\n  \tget animationProp () { return animationProp; },\n  \tget animationEndEvent () { return animationEndEvent; },\n  \tnextTick: nextTick,\n  \tquery: query,\n  \tinDoc: inDoc,\n  \tgetAttr: getAttr,\n  \tgetBindAttr: getBindAttr,\n  \thasBindAttr: hasBindAttr,\n  \tbefore: before,\n  \tafter: after,\n  \tremove: remove,\n  \tprepend: prepend,\n  \treplace: replace,\n  \ton: on$1,\n  \toff: off,\n  \tsetClass: setClass,\n  \taddClass: addClass,\n  \tremoveClass: removeClass,\n  \textractContent: extractContent,\n  \ttrimNode: trimNode,\n  \tisTemplate: isTemplate,\n  \tcreateAnchor: createAnchor,\n  \tfindRef: findRef,\n  \tmapNodeRange: mapNodeRange,\n  \tremoveNodeRange: removeNodeRange,\n  \tmergeOptions: mergeOptions,\n  \tresolveAsset: resolveAsset,\n  \tassertAsset: assertAsset,\n  \tcheckComponentAttr: checkComponentAttr,\n  \tinitProp: initProp,\n  \tassertProp: assertProp,\n  \tcoerceProp: coerceProp,\n  \tcommonTagRE: commonTagRE,\n  \treservedTagRE: reservedTagRE,\n  \tget warn () { return warn; }\n  });\n\n  var uid = 0;\n\n  function initMixin (Vue) {\n\n    /**\n     * The main init sequence. This is called for every\n     * instance, including ones that are created from extended\n     * constructors.\n     *\n     * @param {Object} options - this options object should be\n     *                           the result of merging class\n     *                           options and the options passed\n     *                           in to the constructor.\n     */\n\n    Vue.prototype._init = function (options) {\n\n      options = options || {};\n\n      this.$el = null;\n      this.$parent = options.parent;\n      this.$root = this.$parent ? this.$parent.$root : this;\n      this.$children = [];\n      this.$refs = {}; // child vm references\n      this.$els = {}; // element references\n      this._watchers = []; // all watchers as an array\n      this._directives = []; // all directives\n\n      // a uid\n      this._uid = uid++;\n\n      // a flag to avoid this being observed\n      this._isVue = true;\n\n      // events bookkeeping\n      this._events = {}; // registered callbacks\n      this._eventsCount = {}; // for $broadcast optimization\n\n      // fragment instance properties\n      this._isFragment = false;\n      this._fragment = // @type {DocumentFragment}\n      this._fragmentStart = // @type {Text|Comment}\n      this._fragmentEnd = null; // @type {Text|Comment}\n\n      // lifecycle state\n      this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = false;\n      this._unlinkFn = null;\n\n      // context:\n      // if this is a transcluded component, context\n      // will be the common parent vm of this instance\n      // and its host.\n      this._context = options._context || this.$parent;\n\n      // scope:\n      // if this is inside an inline v-for, the scope\n      // will be the intermediate scope created for this\n      // repeat fragment. this is used for linking props\n      // and container directives.\n      this._scope = options._scope;\n\n      // fragment:\n      // if this instance is compiled inside a Fragment, it\n      // needs to reigster itself as a child of that fragment\n      // for attach/detach to work properly.\n      this._frag = options._frag;\n      if (this._frag) {\n        this._frag.children.push(this);\n      }\n\n      // push self into parent / transclusion host\n      if (this.$parent) {\n        this.$parent.$children.push(this);\n      }\n\n      // merge options.\n      options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n      // set ref\n      this._updateRef();\n\n      // initialize data as empty object.\n      // it will be filled up in _initScope().\n      this._data = {};\n\n      // call init hook\n      this._callHook('init');\n\n      // initialize data observation and scope inheritance.\n      this._initState();\n\n      // setup event system and option events.\n      this._initEvents();\n\n      // call created hook\n      this._callHook('created');\n\n      // if `el` option is passed, start compilation.\n      if (options.el) {\n        this.$mount(options.el);\n      }\n    };\n  }\n\n  var pathCache = new Cache(1000);\n\n  // actions\n  var APPEND = 0;\n  var PUSH = 1;\n  var INC_SUB_PATH_DEPTH = 2;\n  var PUSH_SUB_PATH = 3;\n\n  // states\n  var BEFORE_PATH = 0;\n  var IN_PATH = 1;\n  var BEFORE_IDENT = 2;\n  var IN_IDENT = 3;\n  var IN_SUB_PATH = 4;\n  var IN_SINGLE_QUOTE = 5;\n  var IN_DOUBLE_QUOTE = 6;\n  var AFTER_PATH = 7;\n  var ERROR = 8;\n\n  var pathStateMachine = [];\n\n  pathStateMachine[BEFORE_PATH] = {\n    'ws': [BEFORE_PATH],\n    'ident': [IN_IDENT, APPEND],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[IN_PATH] = {\n    'ws': [IN_PATH],\n    '.': [BEFORE_IDENT],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[BEFORE_IDENT] = {\n    'ws': [BEFORE_IDENT],\n    'ident': [IN_IDENT, APPEND]\n  };\n\n  pathStateMachine[IN_IDENT] = {\n    'ident': [IN_IDENT, APPEND],\n    '0': [IN_IDENT, APPEND],\n    'number': [IN_IDENT, APPEND],\n    'ws': [IN_PATH, PUSH],\n    '.': [BEFORE_IDENT, PUSH],\n    '[': [IN_SUB_PATH, PUSH],\n    'eof': [AFTER_PATH, PUSH]\n  };\n\n  pathStateMachine[IN_SUB_PATH] = {\n    \"'\": [IN_SINGLE_QUOTE, APPEND],\n    '\"': [IN_DOUBLE_QUOTE, APPEND],\n    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n    ']': [IN_PATH, PUSH_SUB_PATH],\n    'eof': ERROR,\n    'else': [IN_SUB_PATH, APPEND]\n  };\n\n  pathStateMachine[IN_SINGLE_QUOTE] = {\n    \"'\": [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_SINGLE_QUOTE, APPEND]\n  };\n\n  pathStateMachine[IN_DOUBLE_QUOTE] = {\n    '\"': [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_DOUBLE_QUOTE, APPEND]\n  };\n\n  /**\n   * Determine the type of a character in a keypath.\n   *\n   * @param {Char} ch\n   * @return {String} type\n   */\n\n  function getPathCharType(ch) {\n    if (ch === undefined) {\n      return 'eof';\n    }\n\n    var code = ch.charCodeAt(0);\n\n    switch (code) {\n      case 0x5B: // [\n      case 0x5D: // ]\n      case 0x2E: // .\n      case 0x22: // \"\n      case 0x27: // '\n      case 0x30:\n        // 0\n        return ch;\n\n      case 0x5F: // _\n      case 0x24:\n        // $\n        return 'ident';\n\n      case 0x20: // Space\n      case 0x09: // Tab\n      case 0x0A: // Newline\n      case 0x0D: // Return\n      case 0xA0: // No-break space\n      case 0xFEFF: // Byte Order Mark\n      case 0x2028: // Line Separator\n      case 0x2029:\n        // Paragraph Separator\n        return 'ws';\n    }\n\n    // a-z, A-Z\n    if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n      return 'ident';\n    }\n\n    // 1-9\n    if (code >= 0x31 && code <= 0x39) {\n      return 'number';\n    }\n\n    return 'else';\n  }\n\n  /**\n   * Format a subPath, return its plain form if it is\n   * a literal string or number. Otherwise prepend the\n   * dynamic indicator (*).\n   *\n   * @param {String} path\n   * @return {String}\n   */\n\n  function formatSubPath(path) {\n    var trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(path)) {\n      return false;\n    }\n    return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n  }\n\n  /**\n   * Parse a string path into an array of segments\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parse(path) {\n    var keys = [];\n    var index = -1;\n    var mode = BEFORE_PATH;\n    var subPathDepth = 0;\n    var c, newChar, key, type, transition, action, typeMap;\n\n    var actions = [];\n\n    actions[PUSH] = function () {\n      if (key !== undefined) {\n        keys.push(key);\n        key = undefined;\n      }\n    };\n\n    actions[APPEND] = function () {\n      if (key === undefined) {\n        key = newChar;\n      } else {\n        key += newChar;\n      }\n    };\n\n    actions[INC_SUB_PATH_DEPTH] = function () {\n      actions[APPEND]();\n      subPathDepth++;\n    };\n\n    actions[PUSH_SUB_PATH] = function () {\n      if (subPathDepth > 0) {\n        subPathDepth--;\n        mode = IN_SUB_PATH;\n        actions[APPEND]();\n      } else {\n        subPathDepth = 0;\n        key = formatSubPath(key);\n        if (key === false) {\n          return false;\n        } else {\n          actions[PUSH]();\n        }\n      }\n    };\n\n    function maybeUnescapeQuote() {\n      var nextChar = path[index + 1];\n      if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n        index++;\n        newChar = '\\\\' + nextChar;\n        actions[APPEND]();\n        return true;\n      }\n    }\n\n    while (mode != null) {\n      index++;\n      c = path[index];\n\n      if (c === '\\\\' && maybeUnescapeQuote()) {\n        continue;\n      }\n\n      type = getPathCharType(c);\n      typeMap = pathStateMachine[mode];\n      transition = typeMap[type] || typeMap['else'] || ERROR;\n\n      if (transition === ERROR) {\n        return; // parse error\n      }\n\n      mode = transition[0];\n      action = actions[transition[1]];\n      if (action) {\n        newChar = transition[2];\n        newChar = newChar === undefined ? c : newChar;\n        if (action() === false) {\n          return;\n        }\n      }\n\n      if (mode === AFTER_PATH) {\n        keys.raw = path;\n        return keys;\n      }\n    }\n  }\n\n  /**\n   * External parse that check for a cache hit first\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parsePath(path) {\n    var hit = pathCache.get(path);\n    if (!hit) {\n      hit = parse(path);\n      if (hit) {\n        pathCache.put(path, hit);\n      }\n    }\n    return hit;\n  }\n\n  /**\n   * Get from an object from a path string\n   *\n   * @param {Object} obj\n   * @param {String} path\n   */\n\n  function getPath(obj, path) {\n    return parseExpression(path).get(obj);\n  }\n\n  /**\n   * Warn against setting non-existent root path on a vm.\n   */\n\n  var warnNonExistent;\n  if ('development' !== 'production') {\n    warnNonExistent = function (path) {\n      warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n    };\n  }\n\n  /**\n   * Set on an object from a path\n   *\n   * @param {Object} obj\n   * @param {String | Array} path\n   * @param {*} val\n   */\n\n  function setPath(obj, path, val) {\n    var original = obj;\n    if (typeof path === 'string') {\n      path = parse(path);\n    }\n    if (!path || !isObject(obj)) {\n      return false;\n    }\n    var last, key;\n    for (var i = 0, l = path.length; i < l; i++) {\n      last = obj;\n      key = path[i];\n      if (key.charAt(0) === '*') {\n        key = parseExpression(key.slice(1)).get.call(original, original);\n      }\n      if (i < l - 1) {\n        obj = obj[key];\n        if (!isObject(obj)) {\n          obj = {};\n          if ('development' !== 'production' && last._isVue) {\n            warnNonExistent(path);\n          }\n          set(last, key, obj);\n        }\n      } else {\n        if (isArray(obj)) {\n          obj.$set(key, val);\n        } else if (key in obj) {\n          obj[key] = val;\n        } else {\n          if ('development' !== 'production' && obj._isVue) {\n            warnNonExistent(path);\n          }\n          set(obj, key, val);\n        }\n      }\n    }\n    return true;\n  }\n\n  var path = Object.freeze({\n    parsePath: parsePath,\n    getPath: getPath,\n    setPath: setPath\n  });\n\n  var expressionCache = new Cache(1000);\n\n  var allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n  var allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  // keywords that don't make sense inside expressions\n  var improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n  var improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  var wsRE = /\\s/g;\n  var newlineRE = /\\n/g;\n  var saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n  var restoreRE = /\"(\\d+)\"/g;\n  var pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n  var identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n  var booleanLiteralRE = /^(?:true|false)$/;\n\n  /**\n   * Save / Rewrite / Restore\n   *\n   * When rewriting paths found in an expression, it is\n   * possible for the same letter sequences to be found in\n   * strings and Object literal property keys. Therefore we\n   * remove and store these parts in a temporary array, and\n   * restore them after the path rewrite.\n   */\n\n  var saved = [];\n\n  /**\n   * Save replacer\n   *\n   * The save regex can match two possible cases:\n   * 1. An opening object literal\n   * 2. A string\n   * If matched as a plain string, we need to escape its\n   * newlines, since the string needs to be preserved when\n   * generating the function body.\n   *\n   * @param {String} str\n   * @param {String} isString - str if matched as a string\n   * @return {String} - placeholder with index\n   */\n\n  function save(str, isString) {\n    var i = saved.length;\n    saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n    return '\"' + i + '\"';\n  }\n\n  /**\n   * Path rewrite replacer\n   *\n   * @param {String} raw\n   * @return {String}\n   */\n\n  function rewrite(raw) {\n    var c = raw.charAt(0);\n    var path = raw.slice(1);\n    if (allowedKeywordsRE.test(path)) {\n      return raw;\n    } else {\n      path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n      return c + 'scope.' + path;\n    }\n  }\n\n  /**\n   * Restore replacer\n   *\n   * @param {String} str\n   * @param {String} i - matched save index\n   * @return {String}\n   */\n\n  function restore(str, i) {\n    return saved[i];\n  }\n\n  /**\n   * Rewrite an expression, prefixing all path accessors with\n   * `scope.` and generate getter/setter functions.\n   *\n   * @param {String} exp\n   * @return {Function}\n   */\n\n  function compileGetter(exp) {\n    if (improperKeywordsRE.test(exp)) {\n      'development' !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n    }\n    // reset state\n    saved.length = 0;\n    // save strings and object literal keys\n    var body = exp.replace(saveRE, save).replace(wsRE, '');\n    // rewrite all paths\n    // pad 1 space here becaue the regex matches 1 extra char\n    body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n    return makeGetterFn(body);\n  }\n\n  /**\n   * Build a getter function. Requires eval.\n   *\n   * We isolate the try/catch so it doesn't affect the\n   * optimization of the parse function when it is not called.\n   *\n   * @param {String} body\n   * @return {Function|undefined}\n   */\n\n  function makeGetterFn(body) {\n    try {\n      return new Function('scope', 'return ' + body + ';');\n    } catch (e) {\n      'development' !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n    }\n  }\n\n  /**\n   * Compile a setter function for the expression.\n   *\n   * @param {String} exp\n   * @return {Function|undefined}\n   */\n\n  function compileSetter(exp) {\n    var path = parsePath(exp);\n    if (path) {\n      return function (scope, val) {\n        setPath(scope, path, val);\n      };\n    } else {\n      'development' !== 'production' && warn('Invalid setter expression: ' + exp);\n    }\n  }\n\n  /**\n   * Parse an expression into re-written getter/setters.\n   *\n   * @param {String} exp\n   * @param {Boolean} needSet\n   * @return {Function}\n   */\n\n  function parseExpression(exp, needSet) {\n    exp = exp.trim();\n    // try cache\n    var hit = expressionCache.get(exp);\n    if (hit) {\n      if (needSet && !hit.set) {\n        hit.set = compileSetter(hit.exp);\n      }\n      return hit;\n    }\n    var res = { exp: exp };\n    res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n    // optimized super simple getter\n    ? makeGetterFn('scope.' + exp)\n    // dynamic getter\n    : compileGetter(exp);\n    if (needSet) {\n      res.set = compileSetter(exp);\n    }\n    expressionCache.put(exp, res);\n    return res;\n  }\n\n  /**\n   * Check if an expression is a simple path.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  function isSimplePath(exp) {\n    return pathTestRE.test(exp) &&\n    // don't treat true/false as paths\n    !booleanLiteralRE.test(exp) &&\n    // Math constants e.g. Math.PI, Math.E etc.\n    exp.slice(0, 5) !== 'Math.';\n  }\n\n  var expression = Object.freeze({\n    parseExpression: parseExpression,\n    isSimplePath: isSimplePath\n  });\n\n  // we have two separate queues: one for directive updates\n  // and one for user watcher registered via $watch().\n  // we want to guarantee directive updates to be called\n  // before user watchers so that when user watchers are\n  // triggered, the DOM would have already been in updated\n  // state.\n  var queue = [];\n  var userQueue = [];\n  var has = {};\n  var circular = {};\n  var waiting = false;\n  var internalQueueDepleted = false;\n\n  /**\n   * Reset the batcher's state.\n   */\n\n  function resetBatcherState() {\n    queue = [];\n    userQueue = [];\n    has = {};\n    circular = {};\n    waiting = internalQueueDepleted = false;\n  }\n\n  /**\n   * Flush both queues and run the watchers.\n   */\n\n  function flushBatcherQueue() {\n    runBatcherQueue(queue);\n    internalQueueDepleted = true;\n    runBatcherQueue(userQueue);\n    // dev tool hook\n    /* istanbul ignore if */\n    if ('development' !== 'production') {\n      if (inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n        window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush');\n      }\n    }\n    resetBatcherState();\n  }\n\n  /**\n   * Run the watchers in a single queue.\n   *\n   * @param {Array} queue\n   */\n\n  function runBatcherQueue(queue) {\n    // do not cache length because more watchers might be pushed\n    // as we run existing watchers\n    for (var i = 0; i < queue.length; i++) {\n      var watcher = queue[i];\n      var id = watcher.id;\n      has[id] = null;\n      watcher.run();\n      // in dev build, check and stop circular updates.\n      if ('development' !== 'production' && has[id] != null) {\n        circular[id] = (circular[id] || 0) + 1;\n        if (circular[id] > config._maxUpdateCount) {\n          queue.splice(has[id], 1);\n          warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n        }\n      }\n    }\n  }\n\n  /**\n   * Push a watcher into the watcher queue.\n   * Jobs with duplicate IDs will be skipped unless it's\n   * pushed when the queue is being flushed.\n   *\n   * @param {Watcher} watcher\n   *   properties:\n   *   - {Number} id\n   *   - {Function} run\n   */\n\n  function pushWatcher(watcher) {\n    var id = watcher.id;\n    if (has[id] == null) {\n      // if an internal watcher is pushed, but the internal\n      // queue is already depleted, we run it immediately.\n      if (internalQueueDepleted && !watcher.user) {\n        watcher.run();\n        return;\n      }\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n\n  var uid$2 = 0;\n\n  /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   * This is used for both the $watch() api and directives.\n   *\n   * @param {Vue} vm\n   * @param {String} expression\n   * @param {Function} cb\n   * @param {Object} options\n   *                 - {Array} filters\n   *                 - {Boolean} twoWay\n   *                 - {Boolean} deep\n   *                 - {Boolean} user\n   *                 - {Boolean} sync\n   *                 - {Boolean} lazy\n   *                 - {Function} [preProcess]\n   *                 - {Function} [postProcess]\n   * @constructor\n   */\n  function Watcher(vm, expOrFn, cb, options) {\n    // mix in options\n    if (options) {\n      extend(this, options);\n    }\n    var isFn = typeof expOrFn === 'function';\n    this.vm = vm;\n    vm._watchers.push(this);\n    this.expression = isFn ? expOrFn.toString() : expOrFn;\n    this.cb = cb;\n    this.id = ++uid$2; // uid for batching\n    this.active = true;\n    this.dirty = this.lazy; // for lazy watchers\n    this.deps = Object.create(null);\n    this.newDeps = null;\n    this.prevError = null; // for async error stacks\n    // parse expression for getter/setter\n    if (isFn) {\n      this.getter = expOrFn;\n      this.setter = undefined;\n    } else {\n      var res = parseExpression(expOrFn, this.twoWay);\n      this.getter = res.get;\n      this.setter = res.set;\n    }\n    this.value = this.lazy ? undefined : this.get();\n    // state for avoiding false triggers for deep and Array\n    // watchers during vm._digest()\n    this.queued = this.shallow = false;\n  }\n\n  /**\n   * Add a dependency to this directive.\n   *\n   * @param {Dep} dep\n   */\n\n  Watcher.prototype.addDep = function (dep) {\n    var id = dep.id;\n    if (!this.newDeps[id]) {\n      this.newDeps[id] = dep;\n      if (!this.deps[id]) {\n        this.deps[id] = dep;\n        dep.addSub(this);\n      }\n    }\n  };\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n\n  Watcher.prototype.get = function () {\n    this.beforeGet();\n    var scope = this.scope || this.vm;\n    var value;\n    try {\n      value = this.getter.call(scope, scope);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n      }\n    }\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    if (this.preProcess) {\n      value = this.preProcess(value);\n    }\n    if (this.filters) {\n      value = scope._applyFilters(value, null, this.filters, false);\n    }\n    if (this.postProcess) {\n      value = this.postProcess(value);\n    }\n    this.afterGet();\n    return value;\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   *\n   * @param {*} value\n   */\n\n  Watcher.prototype.set = function (value) {\n    var scope = this.scope || this.vm;\n    if (this.filters) {\n      value = scope._applyFilters(value, this.value, this.filters, true);\n    }\n    try {\n      this.setter.call(scope, scope, value);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating setter \"' + this.expression + '\"', e);\n      }\n    }\n    // two-way sync for v-for alias\n    var forContext = scope.$forContext;\n    if (forContext && forContext.alias === this.expression) {\n      if (forContext.filters) {\n        'development' !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n        return;\n      }\n      forContext._withLock(function () {\n        if (scope.$key) {\n          // original is an object\n          forContext.rawValue[scope.$key] = value;\n        } else {\n          forContext.rawValue.$set(scope.$index, value);\n        }\n      });\n    }\n  };\n\n  /**\n   * Prepare for dependency collection.\n   */\n\n  Watcher.prototype.beforeGet = function () {\n    Dep.target = this;\n    this.newDeps = Object.create(null);\n  };\n\n  /**\n   * Clean up for dependency collection.\n   */\n\n  Watcher.prototype.afterGet = function () {\n    Dep.target = null;\n    var ids = Object.keys(this.deps);\n    var i = ids.length;\n    while (i--) {\n      var id = ids[i];\n      if (!this.newDeps[id]) {\n        this.deps[id].removeSub(this);\n      }\n    }\n    this.deps = this.newDeps;\n  };\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   *\n   * @param {Boolean} shallow\n   */\n\n  Watcher.prototype.update = function (shallow) {\n    if (this.lazy) {\n      this.dirty = true;\n    } else if (this.sync || !config.async) {\n      this.run();\n    } else {\n      // if queued, only overwrite shallow with non-shallow,\n      // but not the other way around.\n      this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n      this.queued = true;\n      // record before-push error stack in debug mode\n      /* istanbul ignore if */\n      if ('development' !== 'production' && config.debug) {\n        this.prevError = new Error('[vue] async stack trace');\n      }\n      pushWatcher(this);\n    }\n  };\n\n  /**\n   * Batcher job interface.\n   * Will be called by the batcher.\n   */\n\n  Watcher.prototype.run = function () {\n    if (this.active) {\n      var value = this.get();\n      if (value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated; but only do so if this is a\n      // non-shallow update (caused by a vm digest).\n      (isObject(value) || this.deep) && !this.shallow) {\n        // set new value\n        var oldValue = this.value;\n        this.value = value;\n        // in debug + async mode, when a watcher callbacks\n        // throws, we also throw the saved before-push error\n        // so the full cross-tick stack trace is available.\n        var prevError = this.prevError;\n        /* istanbul ignore if */\n        if ('development' !== 'production' && config.debug && prevError) {\n          this.prevError = null;\n          try {\n            this.cb.call(this.vm, value, oldValue);\n          } catch (e) {\n            nextTick(function () {\n              throw prevError;\n            }, 0);\n            throw e;\n          }\n        } else {\n          this.cb.call(this.vm, value, oldValue);\n        }\n      }\n      this.queued = this.shallow = false;\n    }\n  };\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n\n  Watcher.prototype.evaluate = function () {\n    // avoid overwriting another watcher that is being\n    // collected.\n    var current = Dep.target;\n    this.value = this.get();\n    this.dirty = false;\n    Dep.target = current;\n  };\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n\n  Watcher.prototype.depend = function () {\n    var depIds = Object.keys(this.deps);\n    var i = depIds.length;\n    while (i--) {\n      this.deps[depIds[i]].depend();\n    }\n  };\n\n  /**\n   * Remove self from all dependencies' subcriber list.\n   */\n\n  Watcher.prototype.teardown = function () {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // we can skip this if the vm if being destroyed\n      // which can improve teardown performance.\n      if (!this.vm._isBeingDestroyed) {\n        this.vm._watchers.$remove(this);\n      }\n      var depIds = Object.keys(this.deps);\n      var i = depIds.length;\n      while (i--) {\n        this.deps[depIds[i]].removeSub(this);\n      }\n      this.active = false;\n      this.vm = this.cb = this.value = null;\n    }\n  };\n\n  /**\n   * Recrusively traverse an object to evoke all converted\n   * getters, so that every nested property inside the object\n   * is collected as a \"deep\" dependency.\n   *\n   * @param {*} val\n   */\n\n  function traverse(val) {\n    var i, keys;\n    if (isArray(val)) {\n      i = val.length;\n      while (i--) traverse(val[i]);\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]]);\n    }\n  }\n\n  var cloak = {\n    bind: function bind() {\n      var el = this.el;\n      this.vm.$once('pre-hook:compiled', function () {\n        el.removeAttribute('v-cloak');\n      });\n    }\n  };\n\n  var ref = {\n    bind: function bind() {\n      'development' !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n    }\n  };\n\n  var ON = 700;\n  var MODEL = 800;\n  var BIND = 850;\n  var TRANSITION = 1100;\n  var EL = 1500;\n  var COMPONENT = 1500;\n  var PARTIAL = 1750;\n  var SLOT = 1750;\n  var FOR = 2000;\n  var IF = 2000;\n\n  var el = {\n\n    priority: EL,\n\n    bind: function bind() {\n      /* istanbul ignore if */\n      if (!this.arg) {\n        return;\n      }\n      var id = this.id = camelize(this.arg);\n      var refs = (this._scope || this.vm).$els;\n      if (hasOwn(refs, id)) {\n        refs[id] = this.el;\n      } else {\n        defineReactive(refs, id, this.el);\n      }\n    },\n\n    unbind: function unbind() {\n      var refs = (this._scope || this.vm).$els;\n      if (refs[this.id] === this.el) {\n        refs[this.id] = null;\n      }\n    }\n  };\n\n  var prefixes = ['-webkit-', '-moz-', '-ms-'];\n  var camelPrefixes = ['Webkit', 'Moz', 'ms'];\n  var importantRE = /!important;?$/;\n  var propCache = Object.create(null);\n\n  var testEl = null;\n\n  var style = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (typeof value === 'string') {\n        this.el.style.cssText = value;\n      } else if (isArray(value)) {\n        this.handleObject(value.reduce(extend, {}));\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    handleObject: function handleObject(value) {\n      // cache object styles so that only changed props\n      // are actually updated.\n      var cache = this.cache || (this.cache = {});\n      var name, val;\n      for (name in cache) {\n        if (!(name in value)) {\n          this.handleSingle(name, null);\n          delete cache[name];\n        }\n      }\n      for (name in value) {\n        val = value[name];\n        if (val !== cache[name]) {\n          cache[name] = val;\n          this.handleSingle(name, val);\n        }\n      }\n    },\n\n    handleSingle: function handleSingle(prop, value) {\n      prop = normalize(prop);\n      if (!prop) return; // unsupported prop\n      // cast possible numbers/booleans into strings\n      if (value != null) value += '';\n      if (value) {\n        var isImportant = importantRE.test(value) ? 'important' : '';\n        if (isImportant) {\n          value = value.replace(importantRE, '').trim();\n        }\n        this.el.style.setProperty(prop, value, isImportant);\n      } else {\n        this.el.style.removeProperty(prop);\n      }\n    }\n\n  };\n\n  /**\n   * Normalize a CSS property name.\n   * - cache result\n   * - auto prefix\n   * - camelCase -> dash-case\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function normalize(prop) {\n    if (propCache[prop]) {\n      return propCache[prop];\n    }\n    var res = prefix(prop);\n    propCache[prop] = propCache[res] = res;\n    return res;\n  }\n\n  /**\n   * Auto detect the appropriate prefix for a CSS property.\n   * https://gist.github.com/paulirish/523692\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function prefix(prop) {\n    prop = hyphenate(prop);\n    var camel = camelize(prop);\n    var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n    if (!testEl) {\n      testEl = document.createElement('div');\n    }\n    if (camel in testEl.style) {\n      return prop;\n    }\n    var i = prefixes.length;\n    var prefixed;\n    while (i--) {\n      prefixed = camelPrefixes[i] + upper;\n      if (prefixed in testEl.style) {\n        return prefixes[i] + prop;\n      }\n    }\n  }\n\n  // xlink\n  var xlinkNS = 'http://www.w3.org/1999/xlink';\n  var xlinkRE = /^xlink:/;\n\n  // check for attributes that prohibit interpolations\n  var disallowedInterpAttrRE = /^v-|^:|^@|^(is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\n  // these attributes should also set their corresponding properties\n  // because they only affect the initial state of the element\n  var attrWithPropsRE = /^(value|checked|selected|muted)$/;\n\n  // these attributes should set a hidden property for\n  // binding v-model to object values\n  var modelProps = {\n    value: '_value',\n    'true-value': '_trueValue',\n    'false-value': '_falseValue'\n  };\n\n  var bind = {\n\n    priority: BIND,\n\n    bind: function bind() {\n      var attr = this.arg;\n      var tag = this.el.tagName;\n      // should be deep watch on object mode\n      if (!attr) {\n        this.deep = true;\n      }\n      // handle interpolation bindings\n      if (this.descriptor.interp) {\n        // only allow binding on native attributes\n        if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n          'development' !== 'production' && warn(attr + '=\"' + this.descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n          this.el.removeAttribute(attr);\n          this.invalid = true;\n        }\n\n        /* istanbul ignore if */\n        if ('development' !== 'production') {\n          var raw = attr + '=\"' + this.descriptor.raw + '\": ';\n          // warn src\n          if (attr === 'src') {\n            warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n          }\n\n          // warn style\n          if (attr === 'style') {\n            warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n          }\n        }\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) {\n        return;\n      }\n      var attr = this.arg;\n      if (this.arg) {\n        this.handleSingle(attr, value);\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    // share object handler with v-bind:class\n    handleObject: style.handleObject,\n\n    handleSingle: function handleSingle(attr, value) {\n      var el = this.el;\n      var interp = this.descriptor.interp;\n      if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n        el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n        ? '' : value : value;\n      }\n      // set model props\n      var modelProp = modelProps[attr];\n      if (!interp && modelProp) {\n        el[modelProp] = value;\n        // update v-model if present\n        var model = el.__v_model;\n        if (model) {\n          model.listener();\n        }\n      }\n      // do not set value attribute for textarea\n      if (attr === 'value' && el.tagName === 'TEXTAREA') {\n        el.removeAttribute(attr);\n        return;\n      }\n      // update attribute\n      if (value != null && value !== false) {\n        if (attr === 'class') {\n          // handle edge case #1960:\n          // class interpolation should not overwrite Vue transition class\n          if (el.__v_trans) {\n            value += ' ' + el.__v_trans.id + '-transition';\n          }\n          setClass(el, value);\n        } else if (xlinkRE.test(attr)) {\n          el.setAttributeNS(xlinkNS, attr, value);\n        } else {\n          el.setAttribute(attr, value);\n        }\n      } else {\n        el.removeAttribute(attr);\n      }\n    }\n  };\n\n  // keyCode aliases\n  var keyCodes = {\n    esc: 27,\n    tab: 9,\n    enter: 13,\n    space: 32,\n    'delete': 46,\n    up: 38,\n    left: 37,\n    right: 39,\n    down: 40\n  };\n\n  function keyFilter(handler, keys) {\n    var codes = keys.map(function (key) {\n      var charCode = key.charCodeAt(0);\n      if (charCode > 47 && charCode < 58) {\n        return parseInt(key, 10);\n      }\n      if (key.length === 1) {\n        charCode = key.toUpperCase().charCodeAt(0);\n        if (charCode > 64 && charCode < 91) {\n          return charCode;\n        }\n      }\n      return keyCodes[key];\n    });\n    return function keyHandler(e) {\n      if (codes.indexOf(e.keyCode) > -1) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  function stopFilter(handler) {\n    return function stopHandler(e) {\n      e.stopPropagation();\n      return handler.call(this, e);\n    };\n  }\n\n  function preventFilter(handler) {\n    return function preventHandler(e) {\n      e.preventDefault();\n      return handler.call(this, e);\n    };\n  }\n\n  var on = {\n\n    acceptStatement: true,\n    priority: ON,\n\n    bind: function bind() {\n      // deal with iframes\n      if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n        var self = this;\n        this.iframeBind = function () {\n          on$1(self.el.contentWindow, self.arg, self.handler);\n        };\n        this.on('load', this.iframeBind);\n      }\n    },\n\n    update: function update(handler) {\n      // stub a noop for v-on with no value,\n      // e.g. @mousedown.prevent\n      if (!this.descriptor.raw) {\n        handler = function () {};\n      }\n\n      if (typeof handler !== 'function') {\n        'development' !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n        return;\n      }\n\n      // apply modifiers\n      if (this.modifiers.stop) {\n        handler = stopFilter(handler);\n      }\n      if (this.modifiers.prevent) {\n        handler = preventFilter(handler);\n      }\n      // key filter\n      var keys = Object.keys(this.modifiers).filter(function (key) {\n        return key !== 'stop' && key !== 'prevent';\n      });\n      if (keys.length) {\n        handler = keyFilter(handler, keys);\n      }\n\n      this.reset();\n      this.handler = handler;\n\n      if (this.iframeBind) {\n        this.iframeBind();\n      } else {\n        on$1(this.el, this.arg, this.handler);\n      }\n    },\n\n    reset: function reset() {\n      var el = this.iframeBind ? this.el.contentWindow : this.el;\n      if (this.handler) {\n        off(el, this.arg, this.handler);\n      }\n    },\n\n    unbind: function unbind() {\n      this.reset();\n    }\n  };\n\n  var checkbox = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n      };\n\n      function getBooleanValue() {\n        var val = el.checked;\n        if (val && el.hasOwnProperty('_trueValue')) {\n          return el._trueValue;\n        }\n        if (!val && el.hasOwnProperty('_falseValue')) {\n          return el._falseValue;\n        }\n        return val;\n      }\n\n      this.listener = function () {\n        var model = self._watcher.value;\n        if (isArray(model)) {\n          var val = self.getValue();\n          if (el.checked) {\n            if (indexOf(model, val) < 0) {\n              model.push(val);\n            }\n          } else {\n            model.$remove(val);\n          }\n        } else {\n          self.set(getBooleanValue());\n        }\n      };\n\n      this.on('change', this.listener);\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      if (isArray(value)) {\n        el.checked = indexOf(value, this.getValue()) > -1;\n      } else {\n        if (el.hasOwnProperty('_trueValue')) {\n          el.checked = looseEqual(value, el._trueValue);\n        } else {\n          el.checked = !!value;\n        }\n      }\n    }\n  };\n\n  var select = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      // method to force update DOM using latest value.\n      this.forceUpdate = function () {\n        if (self._watcher) {\n          self.update(self._watcher.get());\n        }\n      };\n\n      // check if this is a multiple select\n      var multiple = this.multiple = el.hasAttribute('multiple');\n\n      // attach listener\n      this.listener = function () {\n        var value = getValue(el, multiple);\n        value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n        self.set(value);\n      };\n      this.on('change', this.listener);\n\n      // if has initial value, set afterBind\n      var initValue = getValue(el, multiple, true);\n      if (multiple && initValue.length || !multiple && initValue !== null) {\n        this.afterBind = this.listener;\n      }\n\n      // All major browsers except Firefox resets\n      // selectedIndex with value -1 to 0 when the element\n      // is appended to a new parent, therefore we have to\n      // force a DOM update whenever that happens...\n      this.vm.$on('hook:attached', this.forceUpdate);\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      el.selectedIndex = -1;\n      var multi = this.multiple && isArray(value);\n      var options = el.options;\n      var i = options.length;\n      var op, val;\n      while (i--) {\n        op = options[i];\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        /* eslint-disable eqeqeq */\n        op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n        /* eslint-enable eqeqeq */\n      }\n    },\n\n    unbind: function unbind() {\n      /* istanbul ignore next */\n      this.vm.$off('hook:attached', this.forceUpdate);\n    }\n  };\n\n  /**\n   * Get select value\n   *\n   * @param {SelectElement} el\n   * @param {Boolean} multi\n   * @param {Boolean} init\n   * @return {Array|*}\n   */\n\n  function getValue(el, multi, init) {\n    var res = multi ? [] : null;\n    var op, val, selected;\n    for (var i = 0, l = el.options.length; i < l; i++) {\n      op = el.options[i];\n      selected = init ? op.hasAttribute('selected') : op.selected;\n      if (selected) {\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        if (multi) {\n          res.push(val);\n        } else {\n          return val;\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Native Array.indexOf uses strict equal, but in this\n   * case we need to match string/numbers with custom equal.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   */\n\n  function indexOf$1(arr, val) {\n    var i = arr.length;\n    while (i--) {\n      if (looseEqual(arr[i], val)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  var radio = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        // value overwrite via v-bind:value\n        if (el.hasOwnProperty('_value')) {\n          return el._value;\n        }\n        var val = el.value;\n        if (self.params.number) {\n          val = toNumber(val);\n        }\n        return val;\n      };\n\n      this.listener = function () {\n        self.set(self.getValue());\n      };\n      this.on('change', this.listener);\n\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      this.el.checked = looseEqual(value, this.getValue());\n    }\n  };\n\n  var text$2 = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n      var isRange = el.type === 'range';\n      var lazy = this.params.lazy;\n      var number = this.params.number;\n      var debounce = this.params.debounce;\n\n      // handle composition events.\n      //   http://blog.evanyou.me/2014/01/03/composition-event/\n      // skip this for Android because it handles composition\n      // events quite differently. Android doesn't trigger\n      // composition events for language input methods e.g.\n      // Chinese, but instead triggers them for spelling\n      // suggestions... (see Discussion/#162)\n      var composing = false;\n      if (!isAndroid && !isRange) {\n        this.on('compositionstart', function () {\n          composing = true;\n        });\n        this.on('compositionend', function () {\n          composing = false;\n          // in IE11 the \"compositionend\" event fires AFTER\n          // the \"input\" event, so the input handler is blocked\n          // at the end... have to call it here.\n          //\n          // #1327: in lazy mode this is unecessary.\n          if (!lazy) {\n            self.listener();\n          }\n        });\n      }\n\n      // prevent messing with the input when user is typing,\n      // and force update on blur.\n      this.focused = false;\n      if (!isRange) {\n        this.on('focus', function () {\n          self.focused = true;\n        });\n        this.on('blur', function () {\n          self.focused = false;\n          // do not sync value after fragment removal (#2017)\n          if (!self._frag || self._frag.inserted) {\n            self.rawListener();\n          }\n        });\n      }\n\n      // Now attach the main listener\n      this.listener = this.rawListener = function () {\n        if (composing || !self._bound) {\n          return;\n        }\n        var val = number || isRange ? toNumber(el.value) : el.value;\n        self.set(val);\n        // force update on next tick to avoid lock & same value\n        // also only update when user is not typing\n        nextTick(function () {\n          if (self._bound && !self.focused) {\n            self.update(self._watcher.value);\n          }\n        });\n      };\n\n      // apply debounce\n      if (debounce) {\n        this.listener = _debounce(this.listener, debounce);\n      }\n\n      // Support jQuery events, since jQuery.trigger() doesn't\n      // trigger native events in some cases and some plugins\n      // rely on $.trigger()\n      //\n      // We want to make sure if a listener is attached using\n      // jQuery, it is also removed with jQuery, that's why\n      // we do the check for each directive instance and\n      // store that check result on itself. This also allows\n      // easier test coverage control by unsetting the global\n      // jQuery variable in tests.\n      this.hasjQuery = typeof jQuery === 'function';\n      if (this.hasjQuery) {\n        jQuery(el).on('change', this.listener);\n        if (!lazy) {\n          jQuery(el).on('input', this.listener);\n        }\n      } else {\n        this.on('change', this.listener);\n        if (!lazy) {\n          this.on('input', this.listener);\n        }\n      }\n\n      // IE9 doesn't fire input event on backspace/del/cut\n      if (!lazy && isIE9) {\n        this.on('cut', function () {\n          nextTick(self.listener);\n        });\n        this.on('keyup', function (e) {\n          if (e.keyCode === 46 || e.keyCode === 8) {\n            self.listener();\n          }\n        });\n      }\n\n      // set initial value if present\n      if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      this.el.value = _toString(value);\n    },\n\n    unbind: function unbind() {\n      var el = this.el;\n      if (this.hasjQuery) {\n        jQuery(el).off('change', this.listener);\n        jQuery(el).off('input', this.listener);\n      }\n    }\n  };\n\n  var handlers = {\n    text: text$2,\n    radio: radio,\n    select: select,\n    checkbox: checkbox\n  };\n\n  var model = {\n\n    priority: MODEL,\n    twoWay: true,\n    handlers: handlers,\n    params: ['lazy', 'number', 'debounce'],\n\n    /**\n     * Possible elements:\n     *   <select>\n     *   <textarea>\n     *   <input type=\"*\">\n     *     - text\n     *     - checkbox\n     *     - radio\n     *     - number\n     */\n\n    bind: function bind() {\n      // friendly warning...\n      this.checkFilters();\n      if (this.hasRead && !this.hasWrite) {\n        'development' !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n      }\n      var el = this.el;\n      var tag = el.tagName;\n      var handler;\n      if (tag === 'INPUT') {\n        handler = handlers[el.type] || handlers.text;\n      } else if (tag === 'SELECT') {\n        handler = handlers.select;\n      } else if (tag === 'TEXTAREA') {\n        handler = handlers.text;\n      } else {\n        'development' !== 'production' && warn('v-model does not support element type: ' + tag);\n        return;\n      }\n      el.__v_model = this;\n      handler.bind.call(this);\n      this.update = handler.update;\n      this._unbind = handler.unbind;\n    },\n\n    /**\n     * Check read/write filter stats.\n     */\n\n    checkFilters: function checkFilters() {\n      var filters = this.filters;\n      if (!filters) return;\n      var i = filters.length;\n      while (i--) {\n        var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n        if (typeof filter === 'function' || filter.read) {\n          this.hasRead = true;\n        }\n        if (filter.write) {\n          this.hasWrite = true;\n        }\n      }\n    },\n\n    unbind: function unbind() {\n      this.el.__v_model = null;\n      this._unbind && this._unbind();\n    }\n  };\n\n  var show = {\n\n    bind: function bind() {\n      // check else block\n      var next = this.el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        this.elseEl = next;\n      }\n    },\n\n    update: function update(value) {\n      this.apply(this.el, value);\n      if (this.elseEl) {\n        this.apply(this.elseEl, !value);\n      }\n    },\n\n    apply: function apply(el, value) {\n      if (inDoc(el)) {\n        applyTransition(el, value ? 1 : -1, toggle, this.vm);\n      } else {\n        toggle();\n      }\n      function toggle() {\n        el.style.display = value ? '' : 'none';\n      }\n    }\n  };\n\n  var templateCache = new Cache(1000);\n  var idSelectorCache = new Cache(1000);\n\n  var map = {\n    efault: [0, '', ''],\n    legend: [1, '<fieldset>', '</fieldset>'],\n    tr: [2, '<table><tbody>', '</tbody></table>'],\n    col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n  };\n\n  map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\n  map.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\n  map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\n  map.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n  /**\n   * Check if a node is a supported template node with a\n   * DocumentFragment content.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isRealTemplate(node) {\n    return isTemplate(node) && node.content instanceof DocumentFragment;\n  }\n\n  var tagRE$1 = /<([\\w:]+)/;\n  var entityRE = /&#?\\w+?;/;\n\n  /**\n   * Convert a string template to a DocumentFragment.\n   * Determines correct wrapping by tag types. Wrapping\n   * strategy found in jQuery & component/domify.\n   *\n   * @param {String} templateString\n   * @param {Boolean} raw\n   * @return {DocumentFragment}\n   */\n\n  function stringToFragment(templateString, raw) {\n    // try a cache hit first\n    var hit = templateCache.get(templateString);\n    if (hit) {\n      return hit;\n    }\n\n    var frag = document.createDocumentFragment();\n    var tagMatch = templateString.match(tagRE$1);\n    var entityMatch = entityRE.test(templateString);\n\n    if (!tagMatch && !entityMatch) {\n      // text only, return a single text node.\n      frag.appendChild(document.createTextNode(templateString));\n    } else {\n\n      var tag = tagMatch && tagMatch[1];\n      var wrap = map[tag] || map.efault;\n      var depth = wrap[0];\n      var prefix = wrap[1];\n      var suffix = wrap[2];\n      var node = document.createElement('div');\n\n      if (!raw) {\n        templateString = templateString.trim();\n      }\n      node.innerHTML = prefix + templateString + suffix;\n      while (depth--) {\n        node = node.lastChild;\n      }\n\n      var child;\n      /* eslint-disable no-cond-assign */\n      while (child = node.firstChild) {\n        /* eslint-enable no-cond-assign */\n        frag.appendChild(child);\n      }\n    }\n\n    templateCache.put(templateString, frag);\n    return frag;\n  }\n\n  /**\n   * Convert a template node to a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {DocumentFragment}\n   */\n\n  function nodeToFragment(node) {\n    // if its a template tag and the browser supports it,\n    // its content is already a document fragment.\n    if (isRealTemplate(node)) {\n      trimNode(node.content);\n      return node.content;\n    }\n    // script template\n    if (node.tagName === 'SCRIPT') {\n      return stringToFragment(node.textContent);\n    }\n    // normal node, clone it to avoid mutating the original\n    var clonedNode = cloneNode(node);\n    var frag = document.createDocumentFragment();\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = clonedNode.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n    trimNode(frag);\n    return frag;\n  }\n\n  // Test for the presence of the Safari template cloning bug\n  // https://bugs.webkit.org/showug.cgi?id=137755\n  var hasBrokenTemplate = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var a = document.createElement('div');\n      a.innerHTML = '<template>1</template>';\n      return !a.cloneNode(true).firstChild.innerHTML;\n    } else {\n      return false;\n    }\n  })();\n\n  // Test for IE10/11 textarea placeholder clone bug\n  var hasTextareaCloneBug = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var t = document.createElement('textarea');\n      t.placeholder = 't';\n      return t.cloneNode(true).value === 't';\n    } else {\n      return false;\n    }\n  })();\n\n  /**\n   * 1. Deal with Safari cloning nested <template> bug by\n   *    manually cloning all template instances.\n   * 2. Deal with IE10/11 textarea placeholder bug by setting\n   *    the correct value after cloning.\n   *\n   * @param {Element|DocumentFragment} node\n   * @return {Element|DocumentFragment}\n   */\n\n  function cloneNode(node) {\n    if (!node.querySelectorAll) {\n      return node.cloneNode();\n    }\n    var res = node.cloneNode(true);\n    var i, original, cloned;\n    /* istanbul ignore if */\n    if (hasBrokenTemplate) {\n      var tempClone = res;\n      if (isRealTemplate(node)) {\n        node = node.content;\n        tempClone = res.content;\n      }\n      original = node.querySelectorAll('template');\n      if (original.length) {\n        cloned = tempClone.querySelectorAll('template');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n        }\n      }\n    }\n    /* istanbul ignore if */\n    if (hasTextareaCloneBug) {\n      if (node.tagName === 'TEXTAREA') {\n        res.value = node.value;\n      } else {\n        original = node.querySelectorAll('textarea');\n        if (original.length) {\n          cloned = res.querySelectorAll('textarea');\n          i = cloned.length;\n          while (i--) {\n            cloned[i].value = original[i].value;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Process the template option and normalizes it into a\n   * a DocumentFragment that can be used as a partial or a\n   * instance template.\n   *\n   * @param {*} template\n   *        Possible values include:\n   *        - DocumentFragment object\n   *        - Node object of type Template\n   *        - id selector: '#some-template-id'\n   *        - template string: '<div><span>{{msg}}</span></div>'\n   * @param {Boolean} shouldClone\n   * @param {Boolean} raw\n   *        inline HTML interpolation. Do not check for id\n   *        selector and keep whitespace in the string.\n   * @return {DocumentFragment|undefined}\n   */\n\n  function parseTemplate(template, shouldClone, raw) {\n    var node, frag;\n\n    // if the template is already a document fragment,\n    // do nothing\n    if (template instanceof DocumentFragment) {\n      trimNode(template);\n      return shouldClone ? cloneNode(template) : template;\n    }\n\n    if (typeof template === 'string') {\n      // id selector\n      if (!raw && template.charAt(0) === '#') {\n        // id selector can be cached too\n        frag = idSelectorCache.get(template);\n        if (!frag) {\n          node = document.getElementById(template.slice(1));\n          if (node) {\n            frag = nodeToFragment(node);\n            // save selector to cache\n            idSelectorCache.put(template, frag);\n          }\n        }\n      } else {\n        // normal string template\n        frag = stringToFragment(template, raw);\n      }\n    } else if (template.nodeType) {\n      // a direct node\n      frag = nodeToFragment(template);\n    }\n\n    return frag && shouldClone ? cloneNode(frag) : frag;\n  }\n\n  var template = Object.freeze({\n    cloneNode: cloneNode,\n    parseTemplate: parseTemplate\n  });\n\n  /**\n   * Abstraction for a partially-compiled fragment.\n   * Can optionally compile content with a child scope.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   */\n  function Fragment(linker, vm, frag, host, scope, parentFrag) {\n    this.children = [];\n    this.childFrags = [];\n    this.vm = vm;\n    this.scope = scope;\n    this.inserted = false;\n    this.parentFrag = parentFrag;\n    if (parentFrag) {\n      parentFrag.childFrags.push(this);\n    }\n    this.unlink = linker(vm, frag, host, scope, this);\n    var single = this.single = frag.childNodes.length === 1 &&\n    // do not go single mode if the only node is an anchor\n    !frag.childNodes[0].__vue_anchor;\n    if (single) {\n      this.node = frag.childNodes[0];\n      this.before = singleBefore;\n      this.remove = singleRemove;\n    } else {\n      this.node = createAnchor('fragment-start');\n      this.end = createAnchor('fragment-end');\n      this.frag = frag;\n      prepend(this.node, frag);\n      frag.appendChild(this.end);\n      this.before = multiBefore;\n      this.remove = multiRemove;\n    }\n    this.node.__vfrag__ = this;\n  }\n\n  /**\n   * Call attach/detach for all components contained within\n   * this fragment. Also do so recursively for all child\n   * fragments.\n   *\n   * @param {Function} hook\n   */\n\n  Fragment.prototype.callHook = function (hook) {\n    var i, l;\n    for (i = 0, l = this.children.length; i < l; i++) {\n      hook(this.children[i]);\n    }\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      this.childFrags[i].callHook(hook);\n    }\n  };\n\n  /**\n   * Destroy the fragment.\n   */\n\n  Fragment.prototype.destroy = function () {\n    if (this.parentFrag) {\n      this.parentFrag.childFrags.$remove(this);\n    }\n    this.unlink();\n  };\n\n  /**\n   * Insert fragment before target, single node version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function singleBefore(target, withTransition) {\n    this.inserted = true;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    method(this.node, target, this.vm);\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, single node version\n   */\n\n  function singleRemove() {\n    this.inserted = false;\n    var shouldCallRemove = inDoc(this.node);\n    var self = this;\n    self.callHook(destroyChild);\n    removeWithTransition(this.node, this.vm, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Insert fragment before target, multi-nodes version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function multiBefore(target, withTransition) {\n    this.inserted = true;\n    var vm = this.vm;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    mapNodeRange(this.node, this.end, function (node) {\n      method(node, target, vm);\n    });\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, multi-nodes version\n   */\n\n  function multiRemove() {\n    this.inserted = false;\n    var self = this;\n    var shouldCallRemove = inDoc(this.node);\n    self.callHook(destroyChild);\n    removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Call attach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function attach(child) {\n    if (!child._isAttached) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Call destroy for all contained instances,\n   * with remove:false and defer:true.\n   * Defer is necessary because we need to\n   * keep the children to call detach hooks\n   * on them.\n   *\n   * @param {Vue} child\n   */\n\n  function destroyChild(child) {\n    child.$destroy(false, true);\n  }\n\n  /**\n   * Call detach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function detach(child) {\n    if (child._isAttached) {\n      child._callHook('detached');\n    }\n  }\n\n  var linkerCache = new Cache(5000);\n\n  /**\n   * A factory that can be used to create instances of a\n   * fragment. Caches the compiled linker if possible.\n   *\n   * @param {Vue} vm\n   * @param {Element|String} el\n   */\n  function FragmentFactory(vm, el) {\n    this.vm = vm;\n    var template;\n    var isString = typeof el === 'string';\n    if (isString || isTemplate(el)) {\n      template = parseTemplate(el, true);\n    } else {\n      template = document.createDocumentFragment();\n      template.appendChild(el);\n    }\n    this.template = template;\n    // linker can be cached, but only for components\n    var linker;\n    var cid = vm.constructor.cid;\n    if (cid > 0) {\n      var cacheId = cid + (isString ? el : el.outerHTML);\n      linker = linkerCache.get(cacheId);\n      if (!linker) {\n        linker = compile(template, vm.$options, true);\n        linkerCache.put(cacheId, linker);\n      }\n    } else {\n      linker = compile(template, vm.$options, true);\n    }\n    this.linker = linker;\n  }\n\n  /**\n   * Create a fragment instance with given host and scope.\n   *\n   * @param {Vue} host\n   * @param {Object} scope\n   * @param {Fragment} parentFrag\n   */\n\n  FragmentFactory.prototype.create = function (host, scope, parentFrag) {\n    var frag = cloneNode(this.template);\n    return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n  };\n\n  var vIf = {\n\n    priority: IF,\n\n    bind: function bind() {\n      var el = this.el;\n      if (!el.__vue__) {\n        // check else block\n        var next = el.nextElementSibling;\n        if (next && getAttr(next, 'v-else') !== null) {\n          remove(next);\n          this.elseFactory = new FragmentFactory(this.vm, next);\n        }\n        // check main block\n        this.anchor = createAnchor('v-if');\n        replace(el, this.anchor);\n        this.factory = new FragmentFactory(this.vm, el);\n      } else {\n        'development' !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n        this.invalid = true;\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) return;\n      if (value) {\n        if (!this.frag) {\n          this.insert();\n        }\n      } else {\n        this.remove();\n      }\n    },\n\n    insert: function insert() {\n      if (this.elseFrag) {\n        this.elseFrag.remove();\n        this.elseFrag = null;\n      }\n      this.frag = this.factory.create(this._host, this._scope, this._frag);\n      this.frag.before(this.anchor);\n    },\n\n    remove: function remove() {\n      if (this.frag) {\n        this.frag.remove();\n        this.frag = null;\n      }\n      if (this.elseFactory && !this.elseFrag) {\n        this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n        this.elseFrag.before(this.anchor);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n    }\n  };\n\n  var uid$1 = 0;\n\n  var vFor = {\n\n    priority: FOR,\n\n    params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n    bind: function bind() {\n      // support \"item in items\" syntax\n      var inMatch = this.expression.match(/(.*) in (.*)/);\n      if (inMatch) {\n        var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n        if (itMatch) {\n          this.iterator = itMatch[1].trim();\n          this.alias = itMatch[2].trim();\n        } else {\n          this.alias = inMatch[1].trim();\n        }\n        this.expression = inMatch[2];\n      }\n\n      if (!this.alias) {\n        'development' !== 'production' && warn('Alias is required in v-for.');\n        return;\n      }\n\n      // uid as a cache identifier\n      this.id = '__v-for__' + ++uid$1;\n\n      // check if this is an option list,\n      // so that we know if we need to update the <select>'s\n      // v-model when the option list has changed.\n      // because v-model has a lower priority than v-for,\n      // the v-model is not bound here yet, so we have to\n      // retrive it in the actual updateModel() function.\n      var tag = this.el.tagName;\n      this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n      // setup anchor nodes\n      this.start = createAnchor('v-for-start');\n      this.end = createAnchor('v-for-end');\n      replace(this.el, this.end);\n      before(this.start, this.end);\n\n      // cache\n      this.cache = Object.create(null);\n\n      // fragment factory\n      this.factory = new FragmentFactory(this.vm, this.el);\n    },\n\n    update: function update(data) {\n      this.diff(data);\n      this.updateRef();\n      this.updateModel();\n    },\n\n    /**\n     * Diff, based on new data and old data, determine the\n     * minimum amount of DOM manipulations needed to make the\n     * DOM reflect the new data Array.\n     *\n     * The algorithm diffs the new data Array by storing a\n     * hidden reference to an owner vm instance on previously\n     * seen data. This allows us to achieve O(n) which is\n     * better than a levenshtein distance based algorithm,\n     * which is O(m * n).\n     *\n     * @param {Array} data\n     */\n\n    diff: function diff(data) {\n      // check if the Array was converted from an Object\n      var item = data[0];\n      var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n      var trackByKey = this.params.trackBy;\n      var oldFrags = this.frags;\n      var frags = this.frags = new Array(data.length);\n      var alias = this.alias;\n      var iterator = this.iterator;\n      var start = this.start;\n      var end = this.end;\n      var inDocument = inDoc(start);\n      var init = !oldFrags;\n      var i, l, frag, key, value, primitive;\n\n      // First pass, go through the new Array and fill up\n      // the new frags array. If a piece of data has a cached\n      // instance for it, we reuse it. Otherwise build a new\n      // instance.\n      for (i = 0, l = data.length; i < l; i++) {\n        item = data[i];\n        key = convertedFromObject ? item.$key : null;\n        value = convertedFromObject ? item.$value : item;\n        primitive = !isObject(value);\n        frag = !init && this.getCachedFrag(value, i, key);\n        if (frag) {\n          // reusable fragment\n          frag.reused = true;\n          // update $index\n          frag.scope.$index = i;\n          // update $key\n          if (key) {\n            frag.scope.$key = key;\n          }\n          // update iterator\n          if (iterator) {\n            frag.scope[iterator] = key !== null ? key : i;\n          }\n          // update data for track-by, object repeat &\n          // primitive values.\n          if (trackByKey || convertedFromObject || primitive) {\n            frag.scope[alias] = value;\n          }\n        } else {\n          // new isntance\n          frag = this.create(value, alias, i, key);\n          frag.fresh = !init;\n        }\n        frags[i] = frag;\n        if (init) {\n          frag.before(end);\n        }\n      }\n\n      // we're done for the initial render.\n      if (init) {\n        return;\n      }\n\n      // Second pass, go through the old fragments and\n      // destroy those who are not reused (and remove them\n      // from cache)\n      var removalIndex = 0;\n      var totalRemoved = oldFrags.length - frags.length;\n      for (i = 0, l = oldFrags.length; i < l; i++) {\n        frag = oldFrags[i];\n        if (!frag.reused) {\n          this.deleteCachedFrag(frag);\n          this.remove(frag, removalIndex++, totalRemoved, inDocument);\n        }\n      }\n\n      // Final pass, move/insert new fragments into the\n      // right place.\n      var targetPrev, prevEl, currentPrev;\n      var insertionIndex = 0;\n      for (i = 0, l = frags.length; i < l; i++) {\n        frag = frags[i];\n        // this is the frag that we should be after\n        targetPrev = frags[i - 1];\n        prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n        if (frag.reused && !frag.staggerCb) {\n          currentPrev = findPrevFrag(frag, start, this.id);\n          if (currentPrev !== targetPrev && (!currentPrev ||\n          // optimization for moving a single item.\n          // thanks to suggestions by @livoras in #1807\n          findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n            this.move(frag, prevEl);\n          }\n        } else {\n          // new instance, or still in stagger.\n          // insert with updated stagger index.\n          this.insert(frag, insertionIndex++, prevEl, inDocument);\n        }\n        frag.reused = frag.fresh = false;\n      }\n    },\n\n    /**\n     * Create a new fragment instance.\n     *\n     * @param {*} value\n     * @param {String} alias\n     * @param {Number} index\n     * @param {String} [key]\n     * @return {Fragment}\n     */\n\n    create: function create(value, alias, index, key) {\n      var host = this._host;\n      // create iteration scope\n      var parentScope = this._scope || this.vm;\n      var scope = Object.create(parentScope);\n      // ref holder for the scope\n      scope.$refs = Object.create(parentScope.$refs);\n      scope.$els = Object.create(parentScope.$els);\n      // make sure point $parent to parent scope\n      scope.$parent = parentScope;\n      // for two-way binding on alias\n      scope.$forContext = this;\n      // define scope properties\n      defineReactive(scope, alias, value);\n      defineReactive(scope, '$index', index);\n      if (key) {\n        defineReactive(scope, '$key', key);\n      } else if (scope.$key) {\n        // avoid accidental fallback\n        def(scope, '$key', null);\n      }\n      if (this.iterator) {\n        defineReactive(scope, this.iterator, key !== null ? key : index);\n      }\n      var frag = this.factory.create(host, scope, this._frag);\n      frag.forId = this.id;\n      this.cacheFrag(value, frag, index, key);\n      return frag;\n    },\n\n    /**\n     * Update the v-ref on owner vm.\n     */\n\n    updateRef: function updateRef() {\n      var ref = this.descriptor.ref;\n      if (!ref) return;\n      var hash = (this._scope || this.vm).$refs;\n      var refs;\n      if (!this.fromObject) {\n        refs = this.frags.map(findVmFromFrag);\n      } else {\n        refs = {};\n        this.frags.forEach(function (frag) {\n          refs[frag.scope.$key] = findVmFromFrag(frag);\n        });\n      }\n      hash[ref] = refs;\n    },\n\n    /**\n     * For option lists, update the containing v-model on\n     * parent <select>.\n     */\n\n    updateModel: function updateModel() {\n      if (this.isOption) {\n        var parent = this.start.parentNode;\n        var model = parent && parent.__v_model;\n        if (model) {\n          model.forceUpdate();\n        }\n      }\n    },\n\n    /**\n     * Insert a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Node} prevEl\n     * @param {Boolean} inDocument\n     */\n\n    insert: function insert(frag, index, prevEl, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n      }\n      var staggerAmount = this.getStagger(frag, index, null, 'enter');\n      if (inDocument && staggerAmount) {\n        // create an anchor and insert it synchronously,\n        // so that we can resolve the correct order without\n        // worrying about some elements not inserted yet\n        var anchor = frag.staggerAnchor;\n        if (!anchor) {\n          anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n          anchor.__vfrag__ = frag;\n        }\n        after(anchor, prevEl);\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.before(anchor);\n          remove(anchor);\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        frag.before(prevEl.nextSibling);\n      }\n    },\n\n    /**\n     * Remove a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {Boolean} inDocument\n     */\n\n    remove: function remove(frag, index, total, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n        // it's not possible for the same frag to be removed\n        // twice, so if we have a pending stagger callback,\n        // it means this frag is queued for enter but removed\n        // before its transition started. Since it is already\n        // destroyed, we can just leave it in detached state.\n        return;\n      }\n      var staggerAmount = this.getStagger(frag, index, total, 'leave');\n      if (inDocument && staggerAmount) {\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.remove();\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        frag.remove();\n      }\n    },\n\n    /**\n     * Move a fragment to a new position.\n     * Force no transition.\n     *\n     * @param {Fragment} frag\n     * @param {Node} prevEl\n     */\n\n    move: function move(frag, prevEl) {\n      frag.before(prevEl.nextSibling, false);\n    },\n\n    /**\n     * Cache a fragment using track-by or the object key.\n     *\n     * @param {*} value\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {String} [key]\n     */\n\n    cacheFrag: function cacheFrag(value, frag, index, key) {\n      var trackByKey = this.params.trackBy;\n      var cache = this.cache;\n      var primitive = !isObject(value);\n      var id;\n      if (key || trackByKey || primitive) {\n        id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n        if (!cache[id]) {\n          cache[id] = frag;\n        } else if (trackByKey !== '$index') {\n          'development' !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        id = this.id;\n        if (hasOwn(value, id)) {\n          if (value[id] === null) {\n            value[id] = frag;\n          } else {\n            'development' !== 'production' && this.warnDuplicate(value);\n          }\n        } else {\n          def(value, id, frag);\n        }\n      }\n      frag.raw = value;\n    },\n\n    /**\n     * Get a cached fragment from the value/index/key\n     *\n     * @param {*} value\n     * @param {Number} index\n     * @param {String} key\n     * @return {Fragment}\n     */\n\n    getCachedFrag: function getCachedFrag(value, index, key) {\n      var trackByKey = this.params.trackBy;\n      var primitive = !isObject(value);\n      var frag;\n      if (key || trackByKey || primitive) {\n        var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n        frag = this.cache[id];\n      } else {\n        frag = value[this.id];\n      }\n      if (frag && (frag.reused || frag.fresh)) {\n        'development' !== 'production' && this.warnDuplicate(value);\n      }\n      return frag;\n    },\n\n    /**\n     * Delete a fragment from cache.\n     *\n     * @param {Fragment} frag\n     */\n\n    deleteCachedFrag: function deleteCachedFrag(frag) {\n      var value = frag.raw;\n      var trackByKey = this.params.trackBy;\n      var scope = frag.scope;\n      var index = scope.$index;\n      // fix #948: avoid accidentally fall through to\n      // a parent repeater which happens to have $key.\n      var key = hasOwn(scope, '$key') && scope.$key;\n      var primitive = !isObject(value);\n      if (trackByKey || key || primitive) {\n        var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n        this.cache[id] = null;\n      } else {\n        value[this.id] = null;\n        frag.raw = null;\n      }\n    },\n\n    /**\n     * Get the stagger amount for an insertion/removal.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {String} type\n     */\n\n    getStagger: function getStagger(frag, index, total, type) {\n      type = type + 'Stagger';\n      var trans = frag.node.__v_trans;\n      var hooks = trans && trans.hooks;\n      var hook = hooks && (hooks[type] || hooks.stagger);\n      return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n    },\n\n    /**\n     * Pre-process the value before piping it through the\n     * filters. This is passed to and called by the watcher.\n     */\n\n    _preProcess: function _preProcess(value) {\n      // regardless of type, store the un-filtered raw value.\n      this.rawValue = value;\n      return value;\n    },\n\n    /**\n     * Post-process the value after it has been piped through\n     * the filters. This is passed to and called by the watcher.\n     *\n     * It is necessary for this to be called during the\n     * wathcer's dependency collection phase because we want\n     * the v-for to update when the source Object is mutated.\n     */\n\n    _postProcess: function _postProcess(value) {\n      if (isArray(value)) {\n        return value;\n      } else if (isPlainObject(value)) {\n        // convert plain object to array.\n        var keys = Object.keys(value);\n        var i = keys.length;\n        var res = new Array(i);\n        var key;\n        while (i--) {\n          key = keys[i];\n          res[i] = {\n            $key: key,\n            $value: value[key]\n          };\n        }\n        return res;\n      } else {\n        if (typeof value === 'number') {\n          value = range(value);\n        }\n        return value || [];\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.descriptor.ref) {\n        (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n      }\n      if (this.frags) {\n        var i = this.frags.length;\n        var frag;\n        while (i--) {\n          frag = this.frags[i];\n          this.deleteCachedFrag(frag);\n          frag.destroy();\n        }\n      }\n    }\n  };\n\n  /**\n   * Helper to find the previous element that is a fragment\n   * anchor. This is necessary because a destroyed frag's\n   * element could still be lingering in the DOM before its\n   * leaving transition finishes, but its inserted flag\n   * should have been set to false so we can skip them.\n   *\n   * If this is a block repeat, we want to make sure we only\n   * return frag that is bound to this v-for. (see #929)\n   *\n   * @param {Fragment} frag\n   * @param {Comment|Text} anchor\n   * @param {String} id\n   * @return {Fragment}\n   */\n\n  function findPrevFrag(frag, anchor, id) {\n    var el = frag.node.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__vfrag__;\n    while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n      el = el.previousSibling;\n      /* istanbul ignore if */\n      if (!el) return;\n      frag = el.__vfrag__;\n    }\n    return frag;\n  }\n\n  /**\n   * Find a vm from a fragment.\n   *\n   * @param {Fragment} frag\n   * @return {Vue|undefined}\n   */\n\n  function findVmFromFrag(frag) {\n    var node = frag.node;\n    // handle multi-node frag\n    if (frag.end) {\n      while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n        node = node.nextSibling;\n      }\n    }\n    return node.__vue__;\n  }\n\n  /**\n   * Create a range array from given number.\n   *\n   * @param {Number} n\n   * @return {Array}\n   */\n\n  function range(n) {\n    var i = -1;\n    var ret = new Array(n);\n    while (++i < n) {\n      ret[i] = i;\n    }\n    return ret;\n  }\n\n  if ('development' !== 'production') {\n    vFor.warnDuplicate = function (value) {\n      warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n    };\n  }\n\n  var html = {\n\n    bind: function bind() {\n      // a comment node means this is a binding for\n      // {{{ inline unescaped html }}}\n      if (this.el.nodeType === 8) {\n        // hold nodes\n        this.nodes = [];\n        // replace the placeholder with proper anchor\n        this.anchor = createAnchor('v-html');\n        replace(this.el, this.anchor);\n      }\n    },\n\n    update: function update(value) {\n      value = _toString(value);\n      if (this.nodes) {\n        this.swap(value);\n      } else {\n        this.el.innerHTML = value;\n      }\n    },\n\n    swap: function swap(value) {\n      // remove old nodes\n      var i = this.nodes.length;\n      while (i--) {\n        remove(this.nodes[i]);\n      }\n      // convert new value to a fragment\n      // do not attempt to retrieve from id selector\n      var frag = parseTemplate(value, true, true);\n      // save a reference to these nodes so we can remove later\n      this.nodes = toArray(frag.childNodes);\n      before(frag, this.anchor);\n    }\n  };\n\n  var text = {\n\n    bind: function bind() {\n      this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n    },\n\n    update: function update(value) {\n      this.el[this.attr] = _toString(value);\n    }\n  };\n\n  // must export plain object\n  var publicDirectives = {\n    text: text,\n    html: html,\n    'for': vFor,\n    'if': vIf,\n    show: show,\n    model: model,\n    on: on,\n    bind: bind,\n    el: el,\n    ref: ref,\n    cloak: cloak\n  };\n\n  var queue$1 = [];\n  var queued = false;\n\n  /**\n   * Push a job into the queue.\n   *\n   * @param {Function} job\n   */\n\n  function pushJob(job) {\n    queue$1.push(job);\n    if (!queued) {\n      queued = true;\n      nextTick(flush);\n    }\n  }\n\n  /**\n   * Flush the queue, and do one forced reflow before\n   * triggering transitions.\n   */\n\n  function flush() {\n    // Force layout\n    var f = document.documentElement.offsetHeight;\n    for (var i = 0; i < queue$1.length; i++) {\n      queue$1[i]();\n    }\n    queue$1 = [];\n    queued = false;\n    // dummy return, so js linters don't complain about\n    // unused variable f\n    return f;\n  }\n\n  var TYPE_TRANSITION = 1;\n  var TYPE_ANIMATION = 2;\n  var transDurationProp = transitionProp + 'Duration';\n  var animDurationProp = animationProp + 'Duration';\n\n  /**\n   * A Transition object that encapsulates the state and logic\n   * of the transition.\n   *\n   * @param {Element} el\n   * @param {String} id\n   * @param {Object} hooks\n   * @param {Vue} vm\n   */\n  function Transition(el, id, hooks, vm) {\n    this.id = id;\n    this.el = el;\n    this.enterClass = id + '-enter';\n    this.leaveClass = id + '-leave';\n    this.hooks = hooks;\n    this.vm = vm;\n    // async state\n    this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n    this.justEntered = false;\n    this.entered = this.left = false;\n    this.typeCache = {};\n    // bind\n    var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n      self[m] = bind$1(self[m], self);\n    });\n  }\n\n  var p$1 = Transition.prototype;\n\n  /**\n   * Start an entering transition.\n   *\n   * 1. enter transition triggered\n   * 2. call beforeEnter hook\n   * 3. add enter class\n   * 4. insert/show element\n   * 5. call enter hook (with possible explicit js callback)\n   * 6. reflow\n   * 7. based on transition type:\n   *    - transition:\n   *        remove class now, wait for transitionend,\n   *        then done if there's no explicit js callback.\n   *    - animation:\n   *        wait for animationend, remove class,\n   *        then done if there's no explicit js callback.\n   *    - no css transition:\n   *        done now if there's no explicit js callback.\n   * 8. wait for either done or js callback, then call\n   *    afterEnter hook.\n   *\n   * @param {Function} op - insert/show the element\n   * @param {Function} [cb]\n   */\n\n  p$1.enter = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeEnter');\n    this.cb = cb;\n    addClass(this.el, this.enterClass);\n    op();\n    this.entered = false;\n    this.callHookWithCb('enter');\n    if (this.entered) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.enterCancelled;\n    pushJob(this.enterNextTick);\n  };\n\n  /**\n   * The \"nextTick\" phase of an entering transition, which is\n   * to be pushed into a queue and executed after a reflow so\n   * that removing the class can trigger a CSS transition.\n   */\n\n  p$1.enterNextTick = function () {\n\n    // Important hack:\n    // in Chrome, if a just-entered element is applied the\n    // leave class while its interpolated property still has\n    // a very small value (within one frame), Chrome will\n    // skip the leave transition entirely and not firing the\n    // transtionend event. Therefore we need to protected\n    // against such cases using a one-frame timeout.\n    this.justEntered = true;\n    var self = this;\n    setTimeout(function () {\n      self.justEntered = false;\n    }, 17);\n\n    var enterDone = this.enterDone;\n    var type = this.getCssTransitionType(this.enterClass);\n    if (!this.pendingJsCb) {\n      if (type === TYPE_TRANSITION) {\n        // trigger transition by removing enter class now\n        removeClass(this.el, this.enterClass);\n        this.setupCssCb(transitionEndEvent, enterDone);\n      } else if (type === TYPE_ANIMATION) {\n        this.setupCssCb(animationEndEvent, enterDone);\n      } else {\n        enterDone();\n      }\n    } else if (type === TYPE_TRANSITION) {\n      removeClass(this.el, this.enterClass);\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of an entering transition.\n   */\n\n  p$1.enterDone = function () {\n    this.entered = true;\n    this.cancel = this.pendingJsCb = null;\n    removeClass(this.el, this.enterClass);\n    this.callHook('afterEnter');\n    if (this.cb) this.cb();\n  };\n\n  /**\n   * Start a leaving transition.\n   *\n   * 1. leave transition triggered.\n   * 2. call beforeLeave hook\n   * 3. add leave class (trigger css transition)\n   * 4. call leave hook (with possible explicit js callback)\n   * 5. reflow if no explicit js callback is provided\n   * 6. based on transition type:\n   *    - transition or animation:\n   *        wait for end event, remove class, then done if\n   *        there's no explicit js callback.\n   *    - no css transition:\n   *        done if there's no explicit js callback.\n   * 7. wait for either done or js callback, then call\n   *    afterLeave hook.\n   *\n   * @param {Function} op - remove/hide the element\n   * @param {Function} [cb]\n   */\n\n  p$1.leave = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeLeave');\n    this.op = op;\n    this.cb = cb;\n    addClass(this.el, this.leaveClass);\n    this.left = false;\n    this.callHookWithCb('leave');\n    if (this.left) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.leaveCancelled;\n    // only need to handle leaveDone if\n    // 1. the transition is already done (synchronously called\n    //    by the user, which causes this.op set to null)\n    // 2. there's no explicit js callback\n    if (this.op && !this.pendingJsCb) {\n      // if a CSS transition leaves immediately after enter,\n      // the transitionend event never fires. therefore we\n      // detect such cases and end the leave immediately.\n      if (this.justEntered) {\n        this.leaveDone();\n      } else {\n        pushJob(this.leaveNextTick);\n      }\n    }\n  };\n\n  /**\n   * The \"nextTick\" phase of a leaving transition.\n   */\n\n  p$1.leaveNextTick = function () {\n    var type = this.getCssTransitionType(this.leaveClass);\n    if (type) {\n      var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n      this.setupCssCb(event, this.leaveDone);\n    } else {\n      this.leaveDone();\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of a leaving transition.\n   */\n\n  p$1.leaveDone = function () {\n    this.left = true;\n    this.cancel = this.pendingJsCb = null;\n    this.op();\n    removeClass(this.el, this.leaveClass);\n    this.callHook('afterLeave');\n    if (this.cb) this.cb();\n    this.op = null;\n  };\n\n  /**\n   * Cancel any pending callbacks from a previously running\n   * but not finished transition.\n   */\n\n  p$1.cancelPending = function () {\n    this.op = this.cb = null;\n    var hasPending = false;\n    if (this.pendingCssCb) {\n      hasPending = true;\n      off(this.el, this.pendingCssEvent, this.pendingCssCb);\n      this.pendingCssEvent = this.pendingCssCb = null;\n    }\n    if (this.pendingJsCb) {\n      hasPending = true;\n      this.pendingJsCb.cancel();\n      this.pendingJsCb = null;\n    }\n    if (hasPending) {\n      removeClass(this.el, this.enterClass);\n      removeClass(this.el, this.leaveClass);\n    }\n    if (this.cancel) {\n      this.cancel.call(this.vm, this.el);\n      this.cancel = null;\n    }\n  };\n\n  /**\n   * Call a user-provided synchronous hook function.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHook = function (type) {\n    if (this.hooks && this.hooks[type]) {\n      this.hooks[type].call(this.vm, this.el);\n    }\n  };\n\n  /**\n   * Call a user-provided, potentially-async hook function.\n   * We check for the length of arguments to see if the hook\n   * expects a `done` callback. If true, the transition's end\n   * will be determined by when the user calls that callback;\n   * otherwise, the end is determined by the CSS transition or\n   * animation.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHookWithCb = function (type) {\n    var hook = this.hooks && this.hooks[type];\n    if (hook) {\n      if (hook.length > 1) {\n        this.pendingJsCb = cancellable(this[type + 'Done']);\n      }\n      hook.call(this.vm, this.el, this.pendingJsCb);\n    }\n  };\n\n  /**\n   * Get an element's transition type based on the\n   * calculated styles.\n   *\n   * @param {String} className\n   * @return {Number}\n   */\n\n  p$1.getCssTransitionType = function (className) {\n    /* istanbul ignore if */\n    if (!transitionEndEvent ||\n    // skip CSS transitions if page is not visible -\n    // this solves the issue of transitionend events not\n    // firing until the page is visible again.\n    // pageVisibility API is supported in IE10+, same as\n    // CSS transitions.\n    document.hidden ||\n    // explicit js-only transition\n    this.hooks && this.hooks.css === false ||\n    // element is hidden\n    isHidden(this.el)) {\n      return;\n    }\n    var type = this.typeCache[className];\n    if (type) return type;\n    var inlineStyles = this.el.style;\n    var computedStyles = window.getComputedStyle(this.el);\n    var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n    if (transDuration && transDuration !== '0s') {\n      type = TYPE_TRANSITION;\n    } else {\n      var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n      if (animDuration && animDuration !== '0s') {\n        type = TYPE_ANIMATION;\n      }\n    }\n    if (type) {\n      this.typeCache[className] = type;\n    }\n    return type;\n  };\n\n  /**\n   * Setup a CSS transitionend/animationend callback.\n   *\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  p$1.setupCssCb = function (event, cb) {\n    this.pendingCssEvent = event;\n    var self = this;\n    var el = this.el;\n    var onEnd = this.pendingCssCb = function (e) {\n      if (e.target === el) {\n        off(el, event, onEnd);\n        self.pendingCssEvent = self.pendingCssCb = null;\n        if (!self.pendingJsCb && cb) {\n          cb();\n        }\n      }\n    };\n    on$1(el, event, onEnd);\n  };\n\n  /**\n   * Check if an element is hidden - in that case we can just\n   * skip the transition alltogether.\n   *\n   * @param {Element} el\n   * @return {Boolean}\n   */\n\n  function isHidden(el) {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n\n  var transition = {\n\n    priority: TRANSITION,\n\n    update: function update(id, oldId) {\n      var el = this.el;\n      // resolve on owner vm\n      var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n      id = id || 'v';\n      // apply on closest vm\n      el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n      if (oldId) {\n        removeClass(el, oldId + '-transition');\n      }\n      addClass(el, id + '-transition');\n    }\n  };\n\n  var bindingModes = config._propBindingModes;\n\n  var propDef = {\n\n    bind: function bind() {\n\n      var child = this.vm;\n      var parent = child._context;\n      // passed in from compiler directly\n      var prop = this.descriptor.prop;\n      var childKey = prop.path;\n      var parentKey = prop.parentPath;\n      var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n      var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n        val = coerceProp(prop, val);\n        if (assertProp(prop, val)) {\n          child[childKey] = val;\n        }\n      }, {\n        twoWay: twoWay,\n        filters: prop.filters,\n        // important: props need to be observed on the\n        // v-for scope if present\n        scope: this._scope\n      });\n\n      // set the child initial value.\n      initProp(child, prop, parentWatcher.value);\n\n      // setup two-way binding\n      if (twoWay) {\n        // important: defer the child watcher creation until\n        // the created hook (after data observation)\n        var self = this;\n        child.$once('pre-hook:created', function () {\n          self.childWatcher = new Watcher(child, childKey, function (val) {\n            parentWatcher.set(val);\n          }, {\n            // ensure sync upward before parent sync down.\n            // this is necessary in cases e.g. the child\n            // mutates a prop array, then replaces it. (#1683)\n            sync: true\n          });\n        });\n      }\n    },\n\n    unbind: function unbind() {\n      this.parentWatcher.teardown();\n      if (this.childWatcher) {\n        this.childWatcher.teardown();\n      }\n    }\n  };\n\n  var component = {\n\n    priority: COMPONENT,\n\n    params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n    /**\n     * Setup. Two possible usages:\n     *\n     * - static:\n     *   <comp> or <div v-component=\"comp\">\n     *\n     * - dynamic:\n     *   <component :is=\"view\">\n     */\n\n    bind: function bind() {\n      if (!this.el.__vue__) {\n        // keep-alive cache\n        this.keepAlive = this.params.keepAlive;\n        if (this.keepAlive) {\n          this.cache = {};\n        }\n        // check inline-template\n        if (this.params.inlineTemplate) {\n          // extract inline template as a DocumentFragment\n          this.inlineTemplate = extractContent(this.el, true);\n        }\n        // component resolution related state\n        this.pendingComponentCb = this.Component = null;\n        // transition related state\n        this.pendingRemovals = 0;\n        this.pendingRemovalCb = null;\n        // create a ref anchor\n        this.anchor = createAnchor('v-component');\n        replace(this.el, this.anchor);\n        // remove is attribute.\n        // this is removed during compilation, but because compilation is\n        // cached, when the component is used elsewhere this attribute\n        // will remain at link time.\n        this.el.removeAttribute('is');\n        // remove ref, same as above\n        if (this.descriptor.ref) {\n          this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n        }\n        // if static, build right now.\n        if (this.literal) {\n          this.setComponent(this.expression);\n        }\n      } else {\n        'development' !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n      }\n    },\n\n    /**\n     * Public update, called by the watcher in the dynamic\n     * literal scenario, e.g. <component :is=\"view\">\n     */\n\n    update: function update(value) {\n      if (!this.literal) {\n        this.setComponent(value);\n      }\n    },\n\n    /**\n     * Switch dynamic components. May resolve the component\n     * asynchronously, and perform transition based on\n     * specified transition mode. Accepts a few additional\n     * arguments specifically for vue-router.\n     *\n     * The callback is called when the full transition is\n     * finished.\n     *\n     * @param {String} value\n     * @param {Function} [cb]\n     */\n\n    setComponent: function setComponent(value, cb) {\n      this.invalidatePending();\n      if (!value) {\n        // just remove current\n        this.unbuild(true);\n        this.remove(this.childVM, cb);\n        this.childVM = null;\n      } else {\n        var self = this;\n        this.resolveComponent(value, function () {\n          self.mountComponent(cb);\n        });\n      }\n    },\n\n    /**\n     * Resolve the component constructor to use when creating\n     * the child vm.\n     */\n\n    resolveComponent: function resolveComponent(id, cb) {\n      var self = this;\n      this.pendingComponentCb = cancellable(function (Component) {\n        self.ComponentName = Component.options.name || id;\n        self.Component = Component;\n        cb();\n      });\n      this.vm._resolveComponent(id, this.pendingComponentCb);\n    },\n\n    /**\n     * Create a new instance using the current constructor and\n     * replace the existing instance. This method doesn't care\n     * whether the new component and the old one are actually\n     * the same.\n     *\n     * @param {Function} [cb]\n     */\n\n    mountComponent: function mountComponent(cb) {\n      // actual mount\n      this.unbuild(true);\n      var self = this;\n      var activateHook = this.Component.options.activate;\n      var cached = this.getCached();\n      var newComponent = this.build();\n      if (activateHook && !cached) {\n        this.waitingFor = newComponent;\n        activateHook.call(newComponent, function () {\n          if (self.waitingFor !== newComponent) {\n            return;\n          }\n          self.waitingFor = null;\n          self.transition(newComponent, cb);\n        });\n      } else {\n        // update ref for kept-alive component\n        if (cached) {\n          newComponent._updateRef();\n        }\n        this.transition(newComponent, cb);\n      }\n    },\n\n    /**\n     * When the component changes or unbinds before an async\n     * constructor is resolved, we need to invalidate its\n     * pending callback.\n     */\n\n    invalidatePending: function invalidatePending() {\n      if (this.pendingComponentCb) {\n        this.pendingComponentCb.cancel();\n        this.pendingComponentCb = null;\n      }\n    },\n\n    /**\n     * Instantiate/insert a new child vm.\n     * If keep alive and has cached instance, insert that\n     * instance; otherwise build a new one and cache it.\n     *\n     * @param {Object} [extraOptions]\n     * @return {Vue} - the created instance\n     */\n\n    build: function build(extraOptions) {\n      var cached = this.getCached();\n      if (cached) {\n        return cached;\n      }\n      if (this.Component) {\n        // default options\n        var options = {\n          name: this.ComponentName,\n          el: cloneNode(this.el),\n          template: this.inlineTemplate,\n          // make sure to add the child with correct parent\n          // if this is a transcluded component, its parent\n          // should be the transclusion host.\n          parent: this._host || this.vm,\n          // if no inline-template, then the compiled\n          // linker can be cached for better performance.\n          _linkerCachable: !this.inlineTemplate,\n          _ref: this.descriptor.ref,\n          _asComponent: true,\n          _isRouterView: this._isRouterView,\n          // if this is a transcluded component, context\n          // will be the common parent vm of this instance\n          // and its host.\n          _context: this.vm,\n          // if this is inside an inline v-for, the scope\n          // will be the intermediate scope created for this\n          // repeat fragment. this is used for linking props\n          // and container directives.\n          _scope: this._scope,\n          // pass in the owner fragment of this component.\n          // this is necessary so that the fragment can keep\n          // track of its contained components in order to\n          // call attach/detach hooks for them.\n          _frag: this._frag\n        };\n        // extra options\n        // in 1.0.0 this is used by vue-router only\n        /* istanbul ignore if */\n        if (extraOptions) {\n          extend(options, extraOptions);\n        }\n        var child = new this.Component(options);\n        if (this.keepAlive) {\n          this.cache[this.Component.cid] = child;\n        }\n        /* istanbul ignore if */\n        if ('development' !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n          warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n        }\n        return child;\n      }\n    },\n\n    /**\n     * Try to get a cached instance of the current component.\n     *\n     * @return {Vue|undefined}\n     */\n\n    getCached: function getCached() {\n      return this.keepAlive && this.cache[this.Component.cid];\n    },\n\n    /**\n     * Teardown the current child, but defers cleanup so\n     * that we can separate the destroy and removal steps.\n     *\n     * @param {Boolean} defer\n     */\n\n    unbuild: function unbuild(defer) {\n      if (this.waitingFor) {\n        this.waitingFor.$destroy();\n        this.waitingFor = null;\n      }\n      var child = this.childVM;\n      if (!child || this.keepAlive) {\n        if (child) {\n          // remove ref\n          child._updateRef(true);\n        }\n        return;\n      }\n      // the sole purpose of `deferCleanup` is so that we can\n      // \"deactivate\" the vm right now and perform DOM removal\n      // later.\n      child.$destroy(false, defer);\n    },\n\n    /**\n     * Remove current destroyed child and manually do\n     * the cleanup after removal.\n     *\n     * @param {Function} cb\n     */\n\n    remove: function remove(child, cb) {\n      var keepAlive = this.keepAlive;\n      if (child) {\n        // we may have a component switch when a previous\n        // component is still being transitioned out.\n        // we want to trigger only one lastest insertion cb\n        // when the existing transition finishes. (#1119)\n        this.pendingRemovals++;\n        this.pendingRemovalCb = cb;\n        var self = this;\n        child.$remove(function () {\n          self.pendingRemovals--;\n          if (!keepAlive) child._cleanup();\n          if (!self.pendingRemovals && self.pendingRemovalCb) {\n            self.pendingRemovalCb();\n            self.pendingRemovalCb = null;\n          }\n        });\n      } else if (cb) {\n        cb();\n      }\n    },\n\n    /**\n     * Actually swap the components, depending on the\n     * transition mode. Defaults to simultaneous.\n     *\n     * @param {Vue} target\n     * @param {Function} [cb]\n     */\n\n    transition: function transition(target, cb) {\n      var self = this;\n      var current = this.childVM;\n      // for devtool inspection\n      if ('development' !== 'production') {\n        if (current) current._inactive = true;\n        target._inactive = false;\n      }\n      this.childVM = target;\n      switch (self.params.transitionMode) {\n        case 'in-out':\n          target.$before(self.anchor, function () {\n            self.remove(current, cb);\n          });\n          break;\n        case 'out-in':\n          self.remove(current, function () {\n            target.$before(self.anchor, cb);\n          });\n          break;\n        default:\n          self.remove(current);\n          target.$before(self.anchor, cb);\n      }\n    },\n\n    /**\n     * Unbind.\n     */\n\n    unbind: function unbind() {\n      this.invalidatePending();\n      // Do not defer cleanup when unbinding\n      this.unbuild();\n      // destroy all keep-alive cached instances\n      if (this.cache) {\n        for (var key in this.cache) {\n          this.cache[key].$destroy();\n        }\n        this.cache = null;\n      }\n    }\n  };\n\n  var vClass = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (value && typeof value === 'string') {\n        this.handleObject(stringToObject(value));\n      } else if (isPlainObject(value)) {\n        this.handleObject(value);\n      } else if (isArray(value)) {\n        this.handleArray(value);\n      } else {\n        this.cleanup();\n      }\n    },\n\n    handleObject: function handleObject(value) {\n      this.cleanup(value);\n      var keys = this.prevKeys = Object.keys(value);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        if (value[key]) {\n          addClass(this.el, key);\n        } else {\n          removeClass(this.el, key);\n        }\n      }\n    },\n\n    handleArray: function handleArray(value) {\n      this.cleanup(value);\n      for (var i = 0, l = value.length; i < l; i++) {\n        if (value[i]) {\n          addClass(this.el, value[i]);\n        }\n      }\n      this.prevKeys = value.slice();\n    },\n\n    cleanup: function cleanup(value) {\n      if (this.prevKeys) {\n        var i = this.prevKeys.length;\n        while (i--) {\n          var key = this.prevKeys[i];\n          if (key && (!value || !contains$1(value, key))) {\n            removeClass(this.el, key);\n          }\n        }\n      }\n    }\n  };\n\n  function stringToObject(value) {\n    var res = {};\n    var keys = value.trim().split(/\\s+/);\n    var i = keys.length;\n    while (i--) {\n      res[keys[i]] = true;\n    }\n    return res;\n  }\n\n  function contains$1(value, key) {\n    return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n  }\n\n  var internalDirectives = {\n    style: style,\n    'class': vClass,\n    component: component,\n    prop: propDef,\n    transition: transition\n  };\n\n  var propBindingModes = config._propBindingModes;\n  var empty = {};\n\n  // regexes\n  var identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n  var settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n  /**\n   * Compile props on a root element and return\n   * a props link function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Array} propOptions\n   * @return {Function} propsLinkFn\n   */\n\n  function compileProps(el, propOptions) {\n    var props = [];\n    var names = Object.keys(propOptions);\n    var i = names.length;\n    var options, name, attr, value, path, parsed, prop;\n    while (i--) {\n      name = names[i];\n      options = propOptions[name] || empty;\n\n      if ('development' !== 'production' && name === '$data') {\n        warn('Do not use $data as prop.');\n        continue;\n      }\n\n      // props could contain dashes, which will be\n      // interpreted as minus calculations by the parser\n      // so we need to camelize the path here\n      path = camelize(name);\n      if (!identRE$1.test(path)) {\n        'development' !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n        continue;\n      }\n\n      prop = {\n        name: name,\n        path: path,\n        options: options,\n        mode: propBindingModes.ONE_WAY,\n        raw: null\n      };\n\n      attr = hyphenate(name);\n      // first check dynamic version\n      if ((value = getBindAttr(el, attr)) === null) {\n        if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n          prop.mode = propBindingModes.TWO_WAY;\n        } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n          prop.mode = propBindingModes.ONE_TIME;\n        }\n      }\n      if (value !== null) {\n        // has dynamic binding!\n        prop.raw = value;\n        parsed = parseDirective(value);\n        value = parsed.expression;\n        prop.filters = parsed.filters;\n        // check binding type\n        if (isLiteral(value)) {\n          // for expressions containing literal numbers and\n          // booleans, there's no need to setup a prop binding,\n          // so we can optimize them as a one-time set.\n          prop.optimizedLiteral = true;\n        } else {\n          prop.dynamic = true;\n          // check non-settable path for two-way bindings\n          if ('development' !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n            prop.mode = propBindingModes.ONE_WAY;\n            warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n          }\n        }\n        prop.parentPath = value;\n\n        // warn required two-way\n        if ('development' !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n          warn('Prop \"' + name + '\" expects a two-way binding type.');\n        }\n      } else if ((value = getAttr(el, attr)) !== null) {\n        // has literal binding!\n        prop.raw = value;\n      } else if (options.required) {\n        // warn missing required\n        'development' !== 'production' && warn('Missing required prop: ' + name);\n      }\n      // push prop\n      props.push(prop);\n    }\n    return makePropsLinkFn(props);\n  }\n\n  /**\n   * Build a function that applies props to a vm.\n   *\n   * @param {Array} props\n   * @return {Function} propsLinkFn\n   */\n\n  function makePropsLinkFn(props) {\n    return function propsLinkFn(vm, scope) {\n      // store resolved props info\n      vm._props = {};\n      var i = props.length;\n      var prop, path, options, value, raw;\n      while (i--) {\n        prop = props[i];\n        raw = prop.raw;\n        path = prop.path;\n        options = prop.options;\n        vm._props[path] = prop;\n        if (raw === null) {\n          // initialize absent prop\n          initProp(vm, prop, getDefault(vm, options));\n        } else if (prop.dynamic) {\n          // dynamic prop\n          if (vm._context) {\n            if (prop.mode === propBindingModes.ONE_TIME) {\n              // one time binding\n              value = (scope || vm._context).$get(prop.parentPath);\n              initProp(vm, prop, value);\n            } else {\n              // dynamic binding\n              vm._bindDir({\n                name: 'prop',\n                def: propDef,\n                prop: prop\n              }, null, null, scope); // el, host, scope\n            }\n          } else {\n              'development' !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n            }\n        } else if (prop.optimizedLiteral) {\n          // optimized literal, cast it and just set once\n          var stripped = stripQuotes(raw);\n          value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n          initProp(vm, prop, value);\n        } else {\n          // string literal, but we need to cater for\n          // Boolean props with no value\n          value = options.type === Boolean && raw === '' ? true : raw;\n          initProp(vm, prop, value);\n        }\n      }\n    };\n  }\n\n  /**\n   * Get the default value of a prop.\n   *\n   * @param {Vue} vm\n   * @param {Object} options\n   * @return {*}\n   */\n\n  function getDefault(vm, options) {\n    // no default, return undefined\n    if (!hasOwn(options, 'default')) {\n      // absent boolean value defaults to false\n      return options.type === Boolean ? false : undefined;\n    }\n    var def = options['default'];\n    // warn against non-factory defaults for Object & Array\n    if (isObject(def)) {\n      'development' !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n    }\n    // call factory function for non-Function types\n    return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n  }\n\n  // special binding prefixes\n  var bindRE = /^v-bind:|^:/;\n  var onRE = /^v-on:|^@/;\n  var argRE = /:(.*)$/;\n  var modifierRE = /\\.[^\\.]+/g;\n  var transitionRE = /^(v-bind:|:)?transition$/;\n\n  // terminal directives\n  var terminalDirectives = ['for', 'if'];\n\n  // default directive priority\n  var DEFAULT_PRIORITY = 1000;\n\n  /**\n   * Compile a template and return a reusable composite link\n   * function, which recursively contains more link functions\n   * inside. This top level compile function would normally\n   * be called on instance root nodes, but can also be used\n   * for partial compilation if the partial argument is true.\n   *\n   * The returned composite link function, when called, will\n   * return an unlink function that tearsdown all directives\n   * created during the linking phase.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Object} options\n   * @param {Boolean} partial\n   * @return {Function}\n   */\n\n  function compile(el, options, partial) {\n    // link function for the node itself.\n    var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n    // link function for the childNodes\n    var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n    /**\n     * A composite linker function to be called on a already\n     * compiled piece of DOM, which instantiates all directive\n     * instances.\n     *\n     * @param {Vue} vm\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host] - host vm of transcluded content\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - link context fragment\n     * @return {Function|undefined}\n     */\n\n    return function compositeLinkFn(vm, el, host, scope, frag) {\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(el.childNodes);\n      // link\n      var dirs = linkAndCapture(function compositeLinkCapturer() {\n        if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n        if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n      }, vm);\n      return makeUnlinkFn(vm, dirs);\n    };\n  }\n\n  /**\n   * Apply a linker to a vm/element pair and capture the\n   * directives created during the process.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   */\n\n  function linkAndCapture(linker, vm) {\n    var originalDirCount = vm._directives.length;\n    linker();\n    var dirs = vm._directives.slice(originalDirCount);\n    dirs.sort(directiveComparator);\n    for (var i = 0, l = dirs.length; i < l; i++) {\n      dirs[i]._bind();\n    }\n    return dirs;\n  }\n\n  /**\n   * Directive priority sort comparator\n   *\n   * @param {Object} a\n   * @param {Object} b\n   */\n\n  function directiveComparator(a, b) {\n    a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n    b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n    return a > b ? -1 : a === b ? 0 : 1;\n  }\n\n  /**\n   * Linker functions return an unlink function that\n   * tearsdown all directives instances generated during\n   * the process.\n   *\n   * We create unlink functions with only the necessary\n   * information to avoid retaining additional closures.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Vue} [context]\n   * @param {Array} [contextDirs]\n   * @return {Function}\n   */\n\n  function makeUnlinkFn(vm, dirs, context, contextDirs) {\n    return function unlink(destroying) {\n      teardownDirs(vm, dirs, destroying);\n      if (context && contextDirs) {\n        teardownDirs(context, contextDirs);\n      }\n    };\n  }\n\n  /**\n   * Teardown partial linked directives.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Boolean} destroying\n   */\n\n  function teardownDirs(vm, dirs, destroying) {\n    var i = dirs.length;\n    while (i--) {\n      dirs[i]._teardown();\n      if (!destroying) {\n        vm._directives.$remove(dirs[i]);\n      }\n    }\n  }\n\n  /**\n   * Compile link props on an instance.\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   * @param {Object} props\n   * @param {Object} [scope]\n   * @return {Function}\n   */\n\n  function compileAndLinkProps(vm, el, props, scope) {\n    var propsLinkFn = compileProps(el, props);\n    var propDirs = linkAndCapture(function () {\n      propsLinkFn(vm, scope);\n    }, vm);\n    return makeUnlinkFn(vm, propDirs);\n  }\n\n  /**\n   * Compile the root element of an instance.\n   *\n   * 1. attrs on context container (context scope)\n   * 2. attrs on the component template root node, if\n   *    replace:true (child scope)\n   *\n   * If this is a fragment instance, we only need to compile 1.\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   * @param {Object} options\n   * @param {Object} contextOptions\n   * @return {Function}\n   */\n\n  function compileRoot(el, options, contextOptions) {\n    var containerAttrs = options._containerAttrs;\n    var replacerAttrs = options._replacerAttrs;\n    var contextLinkFn, replacerLinkFn;\n\n    // only need to compile other attributes for\n    // non-fragment instances\n    if (el.nodeType !== 11) {\n      // for components, container and replacer need to be\n      // compiled separately and linked in different scopes.\n      if (options._asComponent) {\n        // 2. container attributes\n        if (containerAttrs && contextOptions) {\n          contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n        }\n        if (replacerAttrs) {\n          // 3. replacer attributes\n          replacerLinkFn = compileDirectives(replacerAttrs, options);\n        }\n      } else {\n        // non-component, just compile as a normal element.\n        replacerLinkFn = compileDirectives(el.attributes, options);\n      }\n    } else if ('development' !== 'production' && containerAttrs) {\n      // warn container directives for fragment instances\n      var names = containerAttrs.filter(function (attr) {\n        // allow vue-loader/vueify scoped css attributes\n        return attr.name.indexOf('_v-') < 0 &&\n        // allow event listeners\n        !onRE.test(attr.name) &&\n        // allow slots\n        attr.name !== 'slot';\n      }).map(function (attr) {\n        return '\"' + attr.name + '\"';\n      });\n      if (names.length) {\n        var plural = names.length > 1;\n        warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n      }\n    }\n\n    return function rootLinkFn(vm, el, scope) {\n      // link context scope dirs\n      var context = vm._context;\n      var contextDirs;\n      if (context && contextLinkFn) {\n        contextDirs = linkAndCapture(function () {\n          contextLinkFn(context, el, null, scope);\n        }, context);\n      }\n\n      // link self\n      var selfDirs = linkAndCapture(function () {\n        if (replacerLinkFn) replacerLinkFn(vm, el);\n      }, vm);\n\n      // return the unlink function that tearsdown context\n      // container directives.\n      return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n    };\n  }\n\n  /**\n   * Compile a node and return a nodeLinkFn based on the\n   * node type.\n   *\n   * @param {Node} node\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileNode(node, options) {\n    var type = node.nodeType;\n    if (type === 1 && node.tagName !== 'SCRIPT') {\n      return compileElement(node, options);\n    } else if (type === 3 && node.data.trim()) {\n      return compileTextNode(node, options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Compile an element and return a nodeLinkFn.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileElement(el, options) {\n    // preprocess textareas.\n    // textarea treats its text content as the initial value.\n    // just bind it as an attr directive for value.\n    if (el.tagName === 'TEXTAREA') {\n      var tokens = parseText(el.value);\n      if (tokens) {\n        el.setAttribute(':value', tokensToExp(tokens));\n        el.value = '';\n      }\n    }\n    var linkFn;\n    var hasAttrs = el.hasAttributes();\n    // check terminal directives (for & if)\n    if (hasAttrs) {\n      linkFn = checkTerminalDirectives(el, options);\n    }\n    // check element directives\n    if (!linkFn) {\n      linkFn = checkElementDirectives(el, options);\n    }\n    // check component\n    if (!linkFn) {\n      linkFn = checkComponent(el, options);\n    }\n    // normal directives\n    if (!linkFn && hasAttrs) {\n      linkFn = compileDirectives(el.attributes, options);\n    }\n    return linkFn;\n  }\n\n  /**\n   * Compile a textNode and return a nodeLinkFn.\n   *\n   * @param {TextNode} node\n   * @param {Object} options\n   * @return {Function|null} textNodeLinkFn\n   */\n\n  function compileTextNode(node, options) {\n    // skip marked text nodes\n    if (node._skip) {\n      return removeText;\n    }\n\n    var tokens = parseText(node.wholeText);\n    if (!tokens) {\n      return null;\n    }\n\n    // mark adjacent text nodes as skipped,\n    // because we are using node.wholeText to compile\n    // all adjacent text nodes together. This fixes\n    // issues in IE where sometimes it splits up a single\n    // text node into multiple ones.\n    var next = node.nextSibling;\n    while (next && next.nodeType === 3) {\n      next._skip = true;\n      next = next.nextSibling;\n    }\n\n    var frag = document.createDocumentFragment();\n    var el, token;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n      frag.appendChild(el);\n    }\n    return makeTextNodeLinkFn(tokens, frag, options);\n  }\n\n  /**\n   * Linker for an skipped text node.\n   *\n   * @param {Vue} vm\n   * @param {Text} node\n   */\n\n  function removeText(vm, node) {\n    remove(node);\n  }\n\n  /**\n   * Process a single text token.\n   *\n   * @param {Object} token\n   * @param {Object} options\n   * @return {Node}\n   */\n\n  function processTextToken(token, options) {\n    var el;\n    if (token.oneTime) {\n      el = document.createTextNode(token.value);\n    } else {\n      if (token.html) {\n        el = document.createComment('v-html');\n        setTokenType('html');\n      } else {\n        // IE will clean up empty textNodes during\n        // frag.cloneNode(true), so we have to give it\n        // something here...\n        el = document.createTextNode(' ');\n        setTokenType('text');\n      }\n    }\n    function setTokenType(type) {\n      if (token.descriptor) return;\n      var parsed = parseDirective(token.value);\n      token.descriptor = {\n        name: type,\n        def: publicDirectives[type],\n        expression: parsed.expression,\n        filters: parsed.filters\n      };\n    }\n    return el;\n  }\n\n  /**\n   * Build a function that processes a textNode.\n   *\n   * @param {Array<Object>} tokens\n   * @param {DocumentFragment} frag\n   */\n\n  function makeTextNodeLinkFn(tokens, frag) {\n    return function textNodeLinkFn(vm, el, host, scope) {\n      var fragClone = frag.cloneNode(true);\n      var childNodes = toArray(fragClone.childNodes);\n      var token, value, node;\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        token = tokens[i];\n        value = token.value;\n        if (token.tag) {\n          node = childNodes[i];\n          if (token.oneTime) {\n            value = (scope || vm).$eval(value);\n            if (token.html) {\n              replace(node, parseTemplate(value, true));\n            } else {\n              node.data = value;\n            }\n          } else {\n            vm._bindDir(token.descriptor, node, host, scope);\n          }\n        }\n      }\n      replace(el, fragClone);\n    };\n  }\n\n  /**\n   * Compile a node list and return a childLinkFn.\n   *\n   * @param {NodeList} nodeList\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function compileNodeList(nodeList, options) {\n    var linkFns = [];\n    var nodeLinkFn, childLinkFn, node;\n    for (var i = 0, l = nodeList.length; i < l; i++) {\n      node = nodeList[i];\n      nodeLinkFn = compileNode(node, options);\n      childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n      linkFns.push(nodeLinkFn, childLinkFn);\n    }\n    return linkFns.length ? makeChildLinkFn(linkFns) : null;\n  }\n\n  /**\n   * Make a child link function for a node's childNodes.\n   *\n   * @param {Array<Function>} linkFns\n   * @return {Function} childLinkFn\n   */\n\n  function makeChildLinkFn(linkFns) {\n    return function childLinkFn(vm, nodes, host, scope, frag) {\n      var node, nodeLinkFn, childrenLinkFn;\n      for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n        node = nodes[n];\n        nodeLinkFn = linkFns[i++];\n        childrenLinkFn = linkFns[i++];\n        // cache childNodes before linking parent, fix #657\n        var childNodes = toArray(node.childNodes);\n        if (nodeLinkFn) {\n          nodeLinkFn(vm, node, host, scope, frag);\n        }\n        if (childrenLinkFn) {\n          childrenLinkFn(vm, childNodes, host, scope, frag);\n        }\n      }\n    };\n  }\n\n  /**\n   * Check for element directives (custom elements that should\n   * be resovled as terminal directives).\n   *\n   * @param {Element} el\n   * @param {Object} options\n   */\n\n  function checkElementDirectives(el, options) {\n    var tag = el.tagName.toLowerCase();\n    if (commonTagRE.test(tag)) return;\n    // special case: give named slot a higher priority\n    // than unnamed slots\n    if (tag === 'slot' && hasBindAttr(el, 'name')) {\n      tag = '_namedSlot';\n    }\n    var def = resolveAsset(options, 'elementDirectives', tag);\n    if (def) {\n      return makeTerminalNodeLinkFn(el, tag, '', options, def);\n    }\n  }\n\n  /**\n   * Check if an element is a component. If yes, return\n   * a component link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function checkComponent(el, options) {\n    var component = checkComponentAttr(el, options);\n    if (component) {\n      var ref = findRef(el);\n      var descriptor = {\n        name: 'component',\n        ref: ref,\n        expression: component.id,\n        def: internalDirectives.component,\n        modifiers: {\n          literal: !component.dynamic\n        }\n      };\n      var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n        if (ref) {\n          defineReactive((scope || vm).$refs, ref, null);\n        }\n        vm._bindDir(descriptor, el, host, scope, frag);\n      };\n      componentLinkFn.terminal = true;\n      return componentLinkFn;\n    }\n  }\n\n  /**\n   * Check an element for terminal directives in fixed order.\n   * If it finds one, return a terminal link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function} terminalLinkFn\n   */\n\n  function checkTerminalDirectives(el, options) {\n    // skip v-pre\n    if (getAttr(el, 'v-pre') !== null) {\n      return skip;\n    }\n    // skip v-else block, but only if following v-if\n    if (el.hasAttribute('v-else')) {\n      var prev = el.previousElementSibling;\n      if (prev && prev.hasAttribute('v-if')) {\n        return skip;\n      }\n    }\n    var value, dirName;\n    for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n      dirName = terminalDirectives[i];\n      /* eslint-disable no-cond-assign */\n      if (value = el.getAttribute('v-' + dirName)) {\n        return makeTerminalNodeLinkFn(el, dirName, value, options);\n      }\n      /* eslint-enable no-cond-assign */\n    }\n  }\n\n  function skip() {}\n  skip.terminal = true;\n\n  /**\n   * Build a node link function for a terminal directive.\n   * A terminal link function terminates the current\n   * compilation recursion and handles compilation of the\n   * subtree in the directive.\n   *\n   * @param {Element} el\n   * @param {String} dirName\n   * @param {String} value\n   * @param {Object} options\n   * @param {Object} [def]\n   * @return {Function} terminalLinkFn\n   */\n\n  function makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n    var parsed = parseDirective(value);\n    var descriptor = {\n      name: dirName,\n      expression: parsed.expression,\n      filters: parsed.filters,\n      raw: value,\n      // either an element directive, or if/for\n      def: def || publicDirectives[dirName]\n    };\n    // check ref for v-for and router-view\n    if (dirName === 'for' || dirName === 'router-view') {\n      descriptor.ref = findRef(el);\n    }\n    var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n      if (descriptor.ref) {\n        defineReactive((scope || vm).$refs, descriptor.ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    fn.terminal = true;\n    return fn;\n  }\n\n  /**\n   * Compile the directives on an element and return a linker.\n   *\n   * @param {Array|NamedNodeMap} attrs\n   * @param {Object} options\n   * @return {Function}\n   */\n\n  function compileDirectives(attrs, options) {\n    var i = attrs.length;\n    var dirs = [];\n    var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens;\n    while (i--) {\n      attr = attrs[i];\n      name = rawName = attr.name;\n      value = rawValue = attr.value;\n      tokens = parseText(value);\n      // reset arg\n      arg = null;\n      // check modifiers\n      modifiers = parseModifiers(name);\n      name = name.replace(modifierRE, '');\n\n      // attribute interpolations\n      if (tokens) {\n        value = tokensToExp(tokens);\n        arg = name;\n        pushDir('bind', publicDirectives.bind, true);\n        // warn against mixing mustaches with v-bind\n        if ('development' !== 'production') {\n          if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n            return attr.name === ':class' || attr.name === 'v-bind:class';\n          })) {\n            warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n          }\n        }\n      } else\n\n        // special attribute: transition\n        if (transitionRE.test(name)) {\n          modifiers.literal = !bindRE.test(name);\n          pushDir('transition', internalDirectives.transition);\n        } else\n\n          // event handlers\n          if (onRE.test(name)) {\n            arg = name.replace(onRE, '');\n            pushDir('on', publicDirectives.on);\n          } else\n\n            // attribute bindings\n            if (bindRE.test(name)) {\n              dirName = name.replace(bindRE, '');\n              if (dirName === 'style' || dirName === 'class') {\n                pushDir(dirName, internalDirectives[dirName]);\n              } else {\n                arg = dirName;\n                pushDir('bind', publicDirectives.bind);\n              }\n            } else\n\n              // normal directives\n              if (name.indexOf('v-') === 0) {\n                // check arg\n                arg = (arg = name.match(argRE)) && arg[1];\n                if (arg) {\n                  name = name.replace(argRE, '');\n                }\n                // extract directive name\n                dirName = name.slice(2);\n\n                // skip v-else (when used with v-show)\n                if (dirName === 'else') {\n                  continue;\n                }\n\n                dirDef = resolveAsset(options, 'directives', dirName);\n\n                if ('development' !== 'production') {\n                  assertAsset(dirDef, 'directive', dirName);\n                }\n\n                if (dirDef) {\n                  pushDir(dirName, dirDef);\n                }\n              }\n    }\n\n    /**\n     * Push a directive.\n     *\n     * @param {String} dirName\n     * @param {Object|Function} def\n     * @param {Boolean} [interp]\n     */\n\n    function pushDir(dirName, def, interp) {\n      var parsed = parseDirective(value);\n      dirs.push({\n        name: dirName,\n        attr: rawName,\n        raw: rawValue,\n        def: def,\n        arg: arg,\n        modifiers: modifiers,\n        expression: parsed.expression,\n        filters: parsed.filters,\n        interp: interp\n      });\n    }\n\n    if (dirs.length) {\n      return makeNodeLinkFn(dirs);\n    }\n  }\n\n  /**\n   * Parse modifiers from directive attribute name.\n   *\n   * @param {String} name\n   * @return {Object}\n   */\n\n  function parseModifiers(name) {\n    var res = Object.create(null);\n    var match = name.match(modifierRE);\n    if (match) {\n      var i = match.length;\n      while (i--) {\n        res[match[i].slice(1)] = true;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Build a link function for all directives on a single node.\n   *\n   * @param {Array} directives\n   * @return {Function} directivesLinkFn\n   */\n\n  function makeNodeLinkFn(directives) {\n    return function nodeLinkFn(vm, el, host, scope, frag) {\n      // reverse apply because it's sorted low to high\n      var i = directives.length;\n      while (i--) {\n        vm._bindDir(directives[i], el, host, scope, frag);\n      }\n    };\n  }\n\n  var specialCharRE = /[^\\w\\-:\\.]/;\n\n  /**\n   * Process an element or a DocumentFragment based on a\n   * instance option object. This allows us to transclude\n   * a template node/fragment before the instance is created,\n   * so the processed fragment can then be cloned and reused\n   * in v-for.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transclude(el, options) {\n    // extract container attributes to pass them down\n    // to compiler, because they need to be compiled in\n    // parent scope. we are mutating the options object here\n    // assuming the same object will be used for compile\n    // right after this.\n    if (options) {\n      options._containerAttrs = extractAttrs(el);\n    }\n    // for template tags, what we want is its content as\n    // a documentFragment (for fragment instances)\n    if (isTemplate(el)) {\n      el = parseTemplate(el);\n    }\n    if (options) {\n      if (options._asComponent && !options.template) {\n        options.template = '<slot></slot>';\n      }\n      if (options.template) {\n        options._content = extractContent(el);\n        el = transcludeTemplate(el, options);\n      }\n    }\n    if (el instanceof DocumentFragment) {\n      // anchors for fragment instance\n      // passing in `persist: true` to avoid them being\n      // discarded by IE during template cloning\n      prepend(createAnchor('v-start', true), el);\n      el.appendChild(createAnchor('v-end', true));\n    }\n    return el;\n  }\n\n  /**\n   * Process the template option.\n   * If the replace option is true this will swap the $el.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transcludeTemplate(el, options) {\n    var template = options.template;\n    var frag = parseTemplate(template, true);\n    if (frag) {\n      var replacer = frag.firstChild;\n      var tag = replacer.tagName && replacer.tagName.toLowerCase();\n      if (options.replace) {\n        /* istanbul ignore if */\n        if (el === document.body) {\n          'development' !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n        }\n        // there are many cases where the instance must\n        // become a fragment instance: basically anything that\n        // can create more than 1 root nodes.\n        if (\n        // multi-children template\n        frag.childNodes.length > 1 ||\n        // non-element template\n        replacer.nodeType !== 1 ||\n        // single nested component\n        tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n        // element directive\n        resolveAsset(options, 'elementDirectives', tag) ||\n        // for block\n        replacer.hasAttribute('v-for') ||\n        // if block\n        replacer.hasAttribute('v-if')) {\n          return frag;\n        } else {\n          options._replacerAttrs = extractAttrs(replacer);\n          mergeAttrs(el, replacer);\n          return replacer;\n        }\n      } else {\n        el.appendChild(frag);\n        return el;\n      }\n    } else {\n      'development' !== 'production' && warn('Invalid template option: ' + template);\n    }\n  }\n\n  /**\n   * Helper to extract a component container's attributes\n   * into a plain object array.\n   *\n   * @param {Element} el\n   * @return {Array}\n   */\n\n  function extractAttrs(el) {\n    if (el.nodeType === 1 && el.hasAttributes()) {\n      return toArray(el.attributes);\n    }\n  }\n\n  /**\n   * Merge the attributes of two elements, and make sure\n   * the class names are merged properly.\n   *\n   * @param {Element} from\n   * @param {Element} to\n   */\n\n  function mergeAttrs(from, to) {\n    var attrs = from.attributes;\n    var i = attrs.length;\n    var name, value;\n    while (i--) {\n      name = attrs[i].name;\n      value = attrs[i].value;\n      if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n        to.setAttribute(name, value);\n      } else if (name === 'class') {\n        value.split(/\\s+/).forEach(function (cls) {\n          addClass(to, cls);\n        });\n      }\n    }\n  }\n\n  var compiler = Object.freeze({\n  \tcompile: compile,\n  \tcompileAndLinkProps: compileAndLinkProps,\n  \tcompileRoot: compileRoot,\n  \ttransclude: transclude\n  });\n\n  function stateMixin (Vue) {\n\n    /**\n     * Accessor for `$data` property, since setting $data\n     * requires observing the new object and updating\n     * proxied properties.\n     */\n\n    Object.defineProperty(Vue.prototype, '$data', {\n      get: function get() {\n        return this._data;\n      },\n      set: function set(newData) {\n        if (newData !== this._data) {\n          this._setData(newData);\n        }\n      }\n    });\n\n    /**\n     * Setup the scope of an instance, which contains:\n     * - observed data\n     * - computed properties\n     * - user methods\n     * - meta properties\n     */\n\n    Vue.prototype._initState = function () {\n      this._initProps();\n      this._initMeta();\n      this._initMethods();\n      this._initData();\n      this._initComputed();\n    };\n\n    /**\n     * Initialize props.\n     */\n\n    Vue.prototype._initProps = function () {\n      var options = this.$options;\n      var el = options.el;\n      var props = options.props;\n      if (props && !el) {\n        'development' !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n      }\n      // make sure to convert string selectors into element now\n      el = options.el = query(el);\n      this._propsUnlinkFn = el && el.nodeType === 1 && props\n      // props must be linked in proper scope if inside v-for\n      ? compileAndLinkProps(this, el, props, this._scope) : null;\n    };\n\n    /**\n     * Initialize the data.\n     */\n\n    Vue.prototype._initData = function () {\n      var propsData = this._data;\n      var optionsDataFn = this.$options.data;\n      var optionsData = optionsDataFn && optionsDataFn();\n      if (optionsData) {\n        this._data = optionsData;\n        for (var prop in propsData) {\n          if ('development' !== 'production' && hasOwn(optionsData, prop)) {\n            warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n          }\n          if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n            set(optionsData, prop, propsData[prop]);\n          }\n        }\n      }\n      var data = this._data;\n      // proxy data on instance\n      var keys = Object.keys(data);\n      var i, key;\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        this._proxy(key);\n      }\n      // observe data\n      observe(data, this);\n    };\n\n    /**\n     * Swap the instance's $data. Called in $data's setter.\n     *\n     * @param {Object} newData\n     */\n\n    Vue.prototype._setData = function (newData) {\n      newData = newData || {};\n      var oldData = this._data;\n      this._data = newData;\n      var keys, key, i;\n      // unproxy keys not present in new data\n      keys = Object.keys(oldData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!(key in newData)) {\n          this._unproxy(key);\n        }\n      }\n      // proxy keys not already proxied,\n      // and trigger change for changed values\n      keys = Object.keys(newData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!hasOwn(this, key)) {\n          // new property\n          this._proxy(key);\n        }\n      }\n      oldData.__ob__.removeVm(this);\n      observe(newData, this);\n      this._digest();\n    };\n\n    /**\n     * Proxy a property, so that\n     * vm.prop === vm._data.prop\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._proxy = function (key) {\n      if (!isReserved(key)) {\n        // need to store ref to self here\n        // because these getter/setters might\n        // be called by child scopes via\n        // prototype inheritance.\n        var self = this;\n        Object.defineProperty(self, key, {\n          configurable: true,\n          enumerable: true,\n          get: function proxyGetter() {\n            return self._data[key];\n          },\n          set: function proxySetter(val) {\n            self._data[key] = val;\n          }\n        });\n      }\n    };\n\n    /**\n     * Unproxy a property.\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._unproxy = function (key) {\n      if (!isReserved(key)) {\n        delete this[key];\n      }\n    };\n\n    /**\n     * Force update on every watcher in scope.\n     */\n\n    Vue.prototype._digest = function () {\n      for (var i = 0, l = this._watchers.length; i < l; i++) {\n        this._watchers[i].update(true); // shallow updates\n      }\n    };\n\n    /**\n     * Setup computed properties. They are essentially\n     * special getter/setters\n     */\n\n    function noop() {}\n    Vue.prototype._initComputed = function () {\n      var computed = this.$options.computed;\n      if (computed) {\n        for (var key in computed) {\n          var userDef = computed[key];\n          var def = {\n            enumerable: true,\n            configurable: true\n          };\n          if (typeof userDef === 'function') {\n            def.get = makeComputedGetter(userDef, this);\n            def.set = noop;\n          } else {\n            def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n            def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n          }\n          Object.defineProperty(this, key, def);\n        }\n      }\n    };\n\n    function makeComputedGetter(getter, owner) {\n      var watcher = new Watcher(owner, getter, null, {\n        lazy: true\n      });\n      return function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n    }\n\n    /**\n     * Setup instance methods. Methods must be bound to the\n     * instance since they might be passed down as a prop to\n     * child components.\n     */\n\n    Vue.prototype._initMethods = function () {\n      var methods = this.$options.methods;\n      if (methods) {\n        for (var key in methods) {\n          this[key] = bind$1(methods[key], this);\n        }\n      }\n    };\n\n    /**\n     * Initialize meta information like $index, $key & $value.\n     */\n\n    Vue.prototype._initMeta = function () {\n      var metas = this.$options._meta;\n      if (metas) {\n        for (var key in metas) {\n          defineReactive(this, key, metas[key]);\n        }\n      }\n    };\n  }\n\n  var eventRE = /^v-on:|^@/;\n\n  function eventsMixin (Vue) {\n\n    /**\n     * Setup the instance's option events & watchers.\n     * If the value is a string, we pull it from the\n     * instance's methods by name.\n     */\n\n    Vue.prototype._initEvents = function () {\n      var options = this.$options;\n      if (options._asComponent) {\n        registerComponentEvents(this, options.el);\n      }\n      registerCallbacks(this, '$on', options.events);\n      registerCallbacks(this, '$watch', options.watch);\n    };\n\n    /**\n     * Register v-on events on a child component\n     *\n     * @param {Vue} vm\n     * @param {Element} el\n     */\n\n    function registerComponentEvents(vm, el) {\n      var attrs = el.attributes;\n      var name, handler;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        name = attrs[i].name;\n        if (eventRE.test(name)) {\n          name = name.replace(eventRE, '');\n          handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n          vm.$on(name.replace(eventRE), handler);\n        }\n      }\n    }\n\n    /**\n     * Register callbacks for option events and watchers.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {Object} hash\n     */\n\n    function registerCallbacks(vm, action, hash) {\n      if (!hash) return;\n      var handlers, key, i, j;\n      for (key in hash) {\n        handlers = hash[key];\n        if (isArray(handlers)) {\n          for (i = 0, j = handlers.length; i < j; i++) {\n            register(vm, action, key, handlers[i]);\n          }\n        } else {\n          register(vm, action, key, handlers);\n        }\n      }\n    }\n\n    /**\n     * Helper to register an event/watch callback.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {String} key\n     * @param {Function|String|Object} handler\n     * @param {Object} [options]\n     */\n\n    function register(vm, action, key, handler, options) {\n      var type = typeof handler;\n      if (type === 'function') {\n        vm[action](key, handler, options);\n      } else if (type === 'string') {\n        var methods = vm.$options.methods;\n        var method = methods && methods[handler];\n        if (method) {\n          vm[action](key, method, options);\n        } else {\n          'development' !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n        }\n      } else if (handler && type === 'object') {\n        register(vm, action, key, handler.handler, handler);\n      }\n    }\n\n    /**\n     * Setup recursive attached/detached calls\n     */\n\n    Vue.prototype._initDOMHooks = function () {\n      this.$on('hook:attached', onAttached);\n      this.$on('hook:detached', onDetached);\n    };\n\n    /**\n     * Callback to recursively call attached hook on children\n     */\n\n    function onAttached() {\n      if (!this._isAttached) {\n        this._isAttached = true;\n        this.$children.forEach(callAttach);\n      }\n    }\n\n    /**\n     * Iterator to call attached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callAttach(child) {\n      if (!child._isAttached && inDoc(child.$el)) {\n        child._callHook('attached');\n      }\n    }\n\n    /**\n     * Callback to recursively call detached hook on children\n     */\n\n    function onDetached() {\n      if (this._isAttached) {\n        this._isAttached = false;\n        this.$children.forEach(callDetach);\n      }\n    }\n\n    /**\n     * Iterator to call detached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callDetach(child) {\n      if (child._isAttached && !inDoc(child.$el)) {\n        child._callHook('detached');\n      }\n    }\n\n    /**\n     * Trigger all handlers for a hook\n     *\n     * @param {String} hook\n     */\n\n    Vue.prototype._callHook = function (hook) {\n      this.$emit('pre-hook:' + hook);\n      var handlers = this.$options[hook];\n      if (handlers) {\n        for (var i = 0, j = handlers.length; i < j; i++) {\n          handlers[i].call(this);\n        }\n      }\n      this.$emit('hook:' + hook);\n    };\n  }\n\n  function noop() {}\n\n  /**\n   * A directive links a DOM element with a piece of data,\n   * which is the result of evaluating an expression.\n   * It registers a watcher with the expression and calls\n   * the DOM update function when a change is triggered.\n   *\n   * @param {String} name\n   * @param {Node} el\n   * @param {Vue} vm\n   * @param {Object} descriptor\n   *                 - {String} name\n   *                 - {Object} def\n   *                 - {String} expression\n   *                 - {Array<Object>} [filters]\n   *                 - {Boolean} literal\n   *                 - {String} attr\n   *                 - {String} raw\n   * @param {Object} def - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   * @constructor\n   */\n  function Directive(descriptor, vm, el, host, scope, frag) {\n    this.vm = vm;\n    this.el = el;\n    // copy descriptor properties\n    this.descriptor = descriptor;\n    this.name = descriptor.name;\n    this.expression = descriptor.expression;\n    this.arg = descriptor.arg;\n    this.modifiers = descriptor.modifiers;\n    this.filters = descriptor.filters;\n    this.literal = this.modifiers && this.modifiers.literal;\n    // private\n    this._locked = false;\n    this._bound = false;\n    this._listeners = null;\n    // link context\n    this._host = host;\n    this._scope = scope;\n    this._frag = frag;\n    // store directives on node in dev mode\n    if ('development' !== 'production' && this.el) {\n      this.el._vue_directives = this.el._vue_directives || [];\n      this.el._vue_directives.push(this);\n    }\n  }\n\n  /**\n   * Initialize the directive, mixin definition properties,\n   * setup the watcher, call definition bind() and update()\n   * if present.\n   *\n   * @param {Object} def\n   */\n\n  Directive.prototype._bind = function () {\n    var name = this.name;\n    var descriptor = this.descriptor;\n\n    // remove attribute\n    if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n      var attr = descriptor.attr || 'v-' + name;\n      this.el.removeAttribute(attr);\n    }\n\n    // copy def properties\n    var def = descriptor.def;\n    if (typeof def === 'function') {\n      this.update = def;\n    } else {\n      extend(this, def);\n    }\n\n    // setup directive params\n    this._setupParams();\n\n    // initial bind\n    if (this.bind) {\n      this.bind();\n    }\n    this._bound = true;\n\n    if (this.literal) {\n      this.update && this.update(descriptor.raw);\n    } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n      // wrapped updater for context\n      var dir = this;\n      if (this.update) {\n        this._update = function (val, oldVal) {\n          if (!dir._locked) {\n            dir.update(val, oldVal);\n          }\n        };\n      } else {\n        this._update = noop;\n      }\n      var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n      var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n      var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n      {\n        filters: this.filters,\n        twoWay: this.twoWay,\n        deep: this.deep,\n        preProcess: preProcess,\n        postProcess: postProcess,\n        scope: this._scope\n      });\n      // v-model with inital inline value need to sync back to\n      // model instead of update to DOM on init. They would\n      // set the afterBind hook to indicate that.\n      if (this.afterBind) {\n        this.afterBind();\n      } else if (this.update) {\n        this.update(watcher.value);\n      }\n    }\n  };\n\n  /**\n   * Setup all param attributes, e.g. track-by,\n   * transition-mode, etc...\n   */\n\n  Directive.prototype._setupParams = function () {\n    if (!this.params) {\n      return;\n    }\n    var params = this.params;\n    // swap the params array with a fresh object.\n    this.params = Object.create(null);\n    var i = params.length;\n    var key, val, mappedKey;\n    while (i--) {\n      key = params[i];\n      mappedKey = camelize(key);\n      val = getBindAttr(this.el, key);\n      if (val != null) {\n        // dynamic\n        this._setupParamWatcher(mappedKey, val);\n      } else {\n        // static\n        val = getAttr(this.el, key);\n        if (val != null) {\n          this.params[mappedKey] = val === '' ? true : val;\n        }\n      }\n    }\n  };\n\n  /**\n   * Setup a watcher for a dynamic param.\n   *\n   * @param {String} key\n   * @param {String} expression\n   */\n\n  Directive.prototype._setupParamWatcher = function (key, expression) {\n    var self = this;\n    var called = false;\n    var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n      self.params[key] = val;\n      // since we are in immediate mode,\n      // only call the param change callbacks if this is not the first update.\n      if (called) {\n        var cb = self.paramWatchers && self.paramWatchers[key];\n        if (cb) {\n          cb.call(self, val, oldVal);\n        }\n      } else {\n        called = true;\n      }\n    }, {\n      immediate: true,\n      user: false\n    });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n  };\n\n  /**\n   * Check if the directive is a function caller\n   * and if the expression is a callable one. If both true,\n   * we wrap up the expression and use it as the event\n   * handler.\n   *\n   * e.g. on-click=\"a++\"\n   *\n   * @return {Boolean}\n   */\n\n  Directive.prototype._checkStatement = function () {\n    var expression = this.expression;\n    if (expression && this.acceptStatement && !isSimplePath(expression)) {\n      var fn = parseExpression(expression).get;\n      var scope = this._scope || this.vm;\n      var handler = function handler(e) {\n        scope.$event = e;\n        fn.call(scope, scope);\n        scope.$event = null;\n      };\n      if (this.filters) {\n        handler = scope._applyFilters(handler, null, this.filters);\n      }\n      this.update(handler);\n      return true;\n    }\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   * This should only be used in two-way directives\n   * e.g. v-model.\n   *\n   * @param {*} value\n   * @public\n   */\n\n  Directive.prototype.set = function (value) {\n    /* istanbul ignore else */\n    if (this.twoWay) {\n      this._withLock(function () {\n        this._watcher.set(value);\n      });\n    } else if ('development' !== 'production') {\n      warn('Directive.set() can only be used inside twoWay' + 'directives.');\n    }\n  };\n\n  /**\n   * Execute a function while preventing that function from\n   * triggering updates on this directive instance.\n   *\n   * @param {Function} fn\n   */\n\n  Directive.prototype._withLock = function (fn) {\n    var self = this;\n    self._locked = true;\n    fn.call(self);\n    nextTick(function () {\n      self._locked = false;\n    });\n  };\n\n  /**\n   * Convenience method that attaches a DOM event listener\n   * to the directive element and autometically tears it down\n   * during unbind.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   */\n\n  Directive.prototype.on = function (event, handler) {\n    on$1(this.el, event, handler);(this._listeners || (this._listeners = [])).push([event, handler]);\n  };\n\n  /**\n   * Teardown the watcher and call unbind.\n   */\n\n  Directive.prototype._teardown = function () {\n    if (this._bound) {\n      this._bound = false;\n      if (this.unbind) {\n        this.unbind();\n      }\n      if (this._watcher) {\n        this._watcher.teardown();\n      }\n      var listeners = this._listeners;\n      var i;\n      if (listeners) {\n        i = listeners.length;\n        while (i--) {\n          off(this.el, listeners[i][0], listeners[i][1]);\n        }\n      }\n      var unwatchFns = this._paramUnwatchFns;\n      if (unwatchFns) {\n        i = unwatchFns.length;\n        while (i--) {\n          unwatchFns[i]();\n        }\n      }\n      if ('development' !== 'production' && this.el) {\n        this.el._vue_directives.$remove(this);\n      }\n      this.vm = this.el = this._watcher = this._listeners = null;\n    }\n  };\n\n  function lifecycleMixin (Vue) {\n\n    /**\n     * Update v-ref for component.\n     *\n     * @param {Boolean} remove\n     */\n\n    Vue.prototype._updateRef = function (remove) {\n      var ref = this.$options._ref;\n      if (ref) {\n        var refs = (this._scope || this._context).$refs;\n        if (remove) {\n          if (refs[ref] === this) {\n            refs[ref] = null;\n          }\n        } else {\n          refs[ref] = this;\n        }\n      }\n    };\n\n    /**\n     * Transclude, compile and link element.\n     *\n     * If a pre-compiled linker is available, that means the\n     * passed in element will be pre-transcluded and compiled\n     * as well - all we need to do is to call the linker.\n     *\n     * Otherwise we need to call transclude/compile/link here.\n     *\n     * @param {Element} el\n     * @return {Element}\n     */\n\n    Vue.prototype._compile = function (el) {\n      var options = this.$options;\n\n      // transclude and init element\n      // transclude can potentially replace original\n      // so we need to keep reference; this step also injects\n      // the template and caches the original attributes\n      // on the container node and replacer node.\n      var original = el;\n      el = transclude(el, options);\n      this._initElement(el);\n\n      // handle v-pre on root node (#2026)\n      if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n        return;\n      }\n\n      // root is always compiled per-instance, because\n      // container attrs and props can be different every time.\n      var contextOptions = this._context && this._context.$options;\n      var rootLinker = compileRoot(el, options, contextOptions);\n\n      // compile and link the rest\n      var contentLinkFn;\n      var ctor = this.constructor;\n      // component compilation can be cached\n      // as long as it's not using inline-template\n      if (options._linkerCachable) {\n        contentLinkFn = ctor.linker;\n        if (!contentLinkFn) {\n          contentLinkFn = ctor.linker = compile(el, options);\n        }\n      }\n\n      // link phase\n      // make sure to link root with prop scope!\n      var rootUnlinkFn = rootLinker(this, el, this._scope);\n      var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n      // register composite unlink function\n      // to be called during instance destruction\n      this._unlinkFn = function () {\n        rootUnlinkFn();\n        // passing destroying: true to avoid searching and\n        // splicing the directives\n        contentUnlinkFn(true);\n      };\n\n      // finally replace original\n      if (options.replace) {\n        replace(original, el);\n      }\n\n      this._isCompiled = true;\n      this._callHook('compiled');\n      return el;\n    };\n\n    /**\n     * Initialize instance element. Called in the public\n     * $mount() method.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._initElement = function (el) {\n      if (el instanceof DocumentFragment) {\n        this._isFragment = true;\n        this.$el = this._fragmentStart = el.firstChild;\n        this._fragmentEnd = el.lastChild;\n        // set persisted text anchors to empty\n        if (this._fragmentStart.nodeType === 3) {\n          this._fragmentStart.data = this._fragmentEnd.data = '';\n        }\n        this._fragment = el;\n      } else {\n        this.$el = el;\n      }\n      this.$el.__vue__ = this;\n      this._callHook('beforeCompile');\n    };\n\n    /**\n     * Create and bind a directive to an element.\n     *\n     * @param {String} name - directive name\n     * @param {Node} node   - target node\n     * @param {Object} desc - parsed directive descriptor\n     * @param {Object} def  - directive definition object\n     * @param {Vue} [host] - transclusion host component\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - owner fragment\n     */\n\n    Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n      this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n    };\n\n    /**\n     * Teardown an instance, unobserves the data, unbind all the\n     * directives, turn off all the event listeners, etc.\n     *\n     * @param {Boolean} remove - whether to remove the DOM node.\n     * @param {Boolean} deferCleanup - if true, defer cleanup to\n     *                                 be called later\n     */\n\n    Vue.prototype._destroy = function (remove, deferCleanup) {\n      if (this._isBeingDestroyed) {\n        if (!deferCleanup) {\n          this._cleanup();\n        }\n        return;\n      }\n\n      var destroyReady;\n      var pendingRemoval;\n\n      var self = this;\n      // Cleanup should be called either synchronously or asynchronoysly as\n      // callback of this.$remove(), or if remove and deferCleanup are false.\n      // In any case it should be called after all other removing, unbinding and\n      // turning of is done\n      var cleanupIfPossible = function cleanupIfPossible() {\n        if (destroyReady && !pendingRemoval && !deferCleanup) {\n          self._cleanup();\n        }\n      };\n\n      // remove DOM element\n      if (remove && this.$el) {\n        pendingRemoval = true;\n        this.$remove(function () {\n          pendingRemoval = false;\n          cleanupIfPossible();\n        });\n      }\n\n      this._callHook('beforeDestroy');\n      this._isBeingDestroyed = true;\n      var i;\n      // remove self from parent. only necessary\n      // if parent is not being destroyed as well.\n      var parent = this.$parent;\n      if (parent && !parent._isBeingDestroyed) {\n        parent.$children.$remove(this);\n        // unregister ref (remove: true)\n        this._updateRef(true);\n      }\n      // destroy all children.\n      i = this.$children.length;\n      while (i--) {\n        this.$children[i].$destroy();\n      }\n      // teardown props\n      if (this._propsUnlinkFn) {\n        this._propsUnlinkFn();\n      }\n      // teardown all directives. this also tearsdown all\n      // directive-owned watchers.\n      if (this._unlinkFn) {\n        this._unlinkFn();\n      }\n      i = this._watchers.length;\n      while (i--) {\n        this._watchers[i].teardown();\n      }\n      // remove reference to self on $el\n      if (this.$el) {\n        this.$el.__vue__ = null;\n      }\n\n      destroyReady = true;\n      cleanupIfPossible();\n    };\n\n    /**\n     * Clean up to ensure garbage collection.\n     * This is called after the leave transition if there\n     * is any.\n     */\n\n    Vue.prototype._cleanup = function () {\n      if (this._isDestroyed) {\n        return;\n      }\n      // remove self from owner fragment\n      // do it in cleanup so that we can call $destroy with\n      // defer right when a fragment is about to be removed.\n      if (this._frag) {\n        this._frag.children.$remove(this);\n      }\n      // remove reference from data ob\n      // frozen object may not have observer.\n      if (this._data.__ob__) {\n        this._data.__ob__.removeVm(this);\n      }\n      // Clean up references to private properties and other\n      // instances. preserve reference to _data so that proxy\n      // accessors still work. The only potential side effect\n      // here is that mutating the instance after it's destroyed\n      // may affect the state of other components that are still\n      // observing the same object, but that seems to be a\n      // reasonable responsibility for the user rather than\n      // always throwing an error on them.\n      this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n      // call the last hook...\n      this._isDestroyed = true;\n      this._callHook('destroyed');\n      // turn off all instance listeners.\n      this.$off();\n    };\n  }\n\n  function miscMixin (Vue) {\n\n    /**\n     * Apply a list of filter (descriptors) to a value.\n     * Using plain for loops here because this will be called in\n     * the getter of any watcher with filters so it is very\n     * performance sensitive.\n     *\n     * @param {*} value\n     * @param {*} [oldValue]\n     * @param {Array} filters\n     * @param {Boolean} write\n     * @return {*}\n     */\n\n    Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n      var filter, fn, args, arg, offset, i, l, j, k;\n      for (i = 0, l = filters.length; i < l; i++) {\n        filter = filters[i];\n        fn = resolveAsset(this.$options, 'filters', filter.name);\n        if ('development' !== 'production') {\n          assertAsset(fn, 'filter', filter.name);\n        }\n        if (!fn) continue;\n        fn = write ? fn.write : fn.read || fn;\n        if (typeof fn !== 'function') continue;\n        args = write ? [value, oldValue] : [value];\n        offset = write ? 2 : 1;\n        if (filter.args) {\n          for (j = 0, k = filter.args.length; j < k; j++) {\n            arg = filter.args[j];\n            args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n          }\n        }\n        value = fn.apply(this, args);\n      }\n      return value;\n    };\n\n    /**\n     * Resolve a component, depending on whether the component\n     * is defined normally or using an async factory function.\n     * Resolves synchronously if already resolved, otherwise\n     * resolves asynchronously and caches the resolved\n     * constructor on the factory.\n     *\n     * @param {String} id\n     * @param {Function} cb\n     */\n\n    Vue.prototype._resolveComponent = function (id, cb) {\n      var factory = resolveAsset(this.$options, 'components', id);\n      if ('development' !== 'production') {\n        assertAsset(factory, 'component', id);\n      }\n      if (!factory) {\n        return;\n      }\n      // async component factory\n      if (!factory.options) {\n        if (factory.resolved) {\n          // cached\n          cb(factory.resolved);\n        } else if (factory.requested) {\n          // pool callbacks\n          factory.pendingCallbacks.push(cb);\n        } else {\n          factory.requested = true;\n          var cbs = factory.pendingCallbacks = [cb];\n          factory(function resolve(res) {\n            if (isPlainObject(res)) {\n              res = Vue.extend(res);\n            }\n            // cache resolved\n            factory.resolved = res;\n            // invoke callbacks\n            for (var i = 0, l = cbs.length; i < l; i++) {\n              cbs[i](res);\n            }\n          }, function reject(reason) {\n            'development' !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n          });\n        }\n      } else {\n        // normal component\n        cb(factory);\n      }\n    };\n  }\n\n  function globalAPI (Vue) {\n\n    /**\n     * Expose useful internals\n     */\n\n    Vue.util = util;\n    Vue.config = config;\n    Vue.set = set;\n    Vue['delete'] = del;\n    Vue.nextTick = nextTick;\n\n    /**\n     * The following are exposed for advanced usage / plugins\n     */\n\n    Vue.compiler = compiler;\n    Vue.FragmentFactory = FragmentFactory;\n    Vue.internalDirectives = internalDirectives;\n    Vue.parsers = {\n      path: path,\n      text: text$1,\n      template: template,\n      directive: directive,\n      expression: expression\n    };\n\n    /**\n     * Each instance constructor, including Vue, has a unique\n     * cid. This enables us to create wrapped \"child\n     * constructors\" for prototypal inheritance and cache them.\n     */\n\n    Vue.cid = 0;\n    var cid = 1;\n\n    /**\n     * Class inheritance\n     *\n     * @param {Object} extendOptions\n     */\n\n    Vue.extend = function (extendOptions) {\n      extendOptions = extendOptions || {};\n      var Super = this;\n      var isFirstExtend = Super.cid === 0;\n      if (isFirstExtend && extendOptions._Ctor) {\n        return extendOptions._Ctor;\n      }\n      var name = extendOptions.name || Super.options.name;\n      if ('development' !== 'production') {\n        if (!/^[a-zA-Z][\\w-]+$/.test(name)) {\n          warn('Invalid component name: ' + name);\n          name = null;\n        }\n      }\n      var Sub = createClass(name || 'VueComponent');\n      Sub.prototype = Object.create(Super.prototype);\n      Sub.prototype.constructor = Sub;\n      Sub.cid = cid++;\n      Sub.options = mergeOptions(Super.options, extendOptions);\n      Sub['super'] = Super;\n      // allow further extension\n      Sub.extend = Super.extend;\n      // create asset registers, so extended classes\n      // can have their private assets too.\n      config._assetTypes.forEach(function (type) {\n        Sub[type] = Super[type];\n      });\n      // enable recursive self-lookup\n      if (name) {\n        Sub.options.components[name] = Sub;\n      }\n      // cache constructor\n      if (isFirstExtend) {\n        extendOptions._Ctor = Sub;\n      }\n      return Sub;\n    };\n\n    /**\n     * A function that returns a sub-class constructor with the\n     * given name. This gives us much nicer output when\n     * logging instances in the console.\n     *\n     * @param {String} name\n     * @return {Function}\n     */\n\n    function createClass(name) {\n      return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    }\n\n    /**\n     * Plugin system\n     *\n     * @param {Object} plugin\n     */\n\n    Vue.use = function (plugin) {\n      /* istanbul ignore if */\n      if (plugin.installed) {\n        return;\n      }\n      // additional parameters\n      var args = toArray(arguments, 1);\n      args.unshift(this);\n      if (typeof plugin.install === 'function') {\n        plugin.install.apply(plugin, args);\n      } else {\n        plugin.apply(null, args);\n      }\n      plugin.installed = true;\n      return this;\n    };\n\n    /**\n     * Apply a global mixin by merging it into the default\n     * options.\n     */\n\n    Vue.mixin = function (mixin) {\n      Vue.options = mergeOptions(Vue.options, mixin);\n    };\n\n    /**\n     * Create asset registration methods with the following\n     * signature:\n     *\n     * @param {String} id\n     * @param {*} definition\n     */\n\n    config._assetTypes.forEach(function (type) {\n      Vue[type] = function (id, definition) {\n        if (!definition) {\n          return this.options[type + 's'][id];\n        } else {\n          /* istanbul ignore if */\n          if ('development' !== 'production') {\n            if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n            }\n          }\n          if (type === 'component' && isPlainObject(definition)) {\n            definition.name = id;\n            definition = Vue.extend(definition);\n          }\n          this.options[type + 's'][id] = definition;\n          return definition;\n        }\n      };\n    });\n  }\n\n  var filterRE = /[^|]\\|[^|]/;\n\n  function dataAPI (Vue) {\n\n    /**\n     * Get the value from an expression on this vm.\n     *\n     * @param {String} exp\n     * @param {Boolean} [asStatement]\n     * @return {*}\n     */\n\n    Vue.prototype.$get = function (exp, asStatement) {\n      var res = parseExpression(exp);\n      if (res) {\n        if (asStatement && !isSimplePath(exp)) {\n          var self = this;\n          return function statementHandler() {\n            self.$arguments = toArray(arguments);\n            res.get.call(self, self);\n            self.$arguments = null;\n          };\n        } else {\n          try {\n            return res.get.call(this, this);\n          } catch (e) {}\n        }\n      }\n    };\n\n    /**\n     * Set the value from an expression on this vm.\n     * The expression must be a valid left-hand\n     * expression in an assignment.\n     *\n     * @param {String} exp\n     * @param {*} val\n     */\n\n    Vue.prototype.$set = function (exp, val) {\n      var res = parseExpression(exp, true);\n      if (res && res.set) {\n        res.set.call(this, this, val);\n      }\n    };\n\n    /**\n     * Delete a property on the VM\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype.$delete = function (key) {\n      del(this._data, key);\n    };\n\n    /**\n     * Watch an expression, trigger callback when its\n     * value changes.\n     *\n     * @param {String|Function} expOrFn\n     * @param {Function} cb\n     * @param {Object} [options]\n     *                 - {Boolean} deep\n     *                 - {Boolean} immediate\n     * @return {Function} - unwatchFn\n     */\n\n    Vue.prototype.$watch = function (expOrFn, cb, options) {\n      var vm = this;\n      var parsed;\n      if (typeof expOrFn === 'string') {\n        parsed = parseDirective(expOrFn);\n        expOrFn = parsed.expression;\n      }\n      var watcher = new Watcher(vm, expOrFn, cb, {\n        deep: options && options.deep,\n        sync: options && options.sync,\n        filters: parsed && parsed.filters,\n        user: !options || options.user !== false\n      });\n      if (options && options.immediate) {\n        cb.call(vm, watcher.value);\n      }\n      return function unwatchFn() {\n        watcher.teardown();\n      };\n    };\n\n    /**\n     * Evaluate a text directive, including filters.\n     *\n     * @param {String} text\n     * @param {Boolean} [asStatement]\n     * @return {String}\n     */\n\n    Vue.prototype.$eval = function (text, asStatement) {\n      // check for filters.\n      if (filterRE.test(text)) {\n        var dir = parseDirective(text);\n        // the filter regex check might give false positive\n        // for pipes inside strings, so it's possible that\n        // we don't get any filters here\n        var val = this.$get(dir.expression, asStatement);\n        return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n      } else {\n        // no filter\n        return this.$get(text, asStatement);\n      }\n    };\n\n    /**\n     * Interpolate a piece of template text.\n     *\n     * @param {String} text\n     * @return {String}\n     */\n\n    Vue.prototype.$interpolate = function (text) {\n      var tokens = parseText(text);\n      var vm = this;\n      if (tokens) {\n        if (tokens.length === 1) {\n          return vm.$eval(tokens[0].value) + '';\n        } else {\n          return tokens.map(function (token) {\n            return token.tag ? vm.$eval(token.value) : token.value;\n          }).join('');\n        }\n      } else {\n        return text;\n      }\n    };\n\n    /**\n     * Log instance data as a plain JS object\n     * so that it is easier to inspect in console.\n     * This method assumes console is available.\n     *\n     * @param {String} [path]\n     */\n\n    Vue.prototype.$log = function (path) {\n      var data = path ? getPath(this._data, path) : this._data;\n      if (data) {\n        data = clean(data);\n      }\n      // include computed fields\n      if (!path) {\n        for (var key in this.$options.computed) {\n          data[key] = clean(this[key]);\n        }\n      }\n      console.log(data);\n    };\n\n    /**\n     * \"clean\" a getter/setter converted object into a plain\n     * object copy.\n     *\n     * @param {Object} - obj\n     * @return {Object}\n     */\n\n    function clean(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n  }\n\n  function domAPI (Vue) {\n\n    /**\n     * Convenience on-instance nextTick. The callback is\n     * auto-bound to the instance, and this avoids component\n     * modules having to rely on the global Vue.\n     *\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$nextTick = function (fn) {\n      nextTick(fn, this);\n    };\n\n    /**\n     * Append instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$appendTo = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, append, appendWithTransition);\n    };\n\n    /**\n     * Prepend instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$prependTo = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.hasChildNodes()) {\n        this.$before(target.firstChild, cb, withTransition);\n      } else {\n        this.$appendTo(target, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Insert instance before target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$before = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n    };\n\n    /**\n     * Insert instance after target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$after = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.nextSibling) {\n        this.$before(target.nextSibling, cb, withTransition);\n      } else {\n        this.$appendTo(target.parentNode, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Remove instance from DOM\n     *\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$remove = function (cb, withTransition) {\n      if (!this.$el.parentNode) {\n        return cb && cb();\n      }\n      var inDocument = this._isAttached && inDoc(this.$el);\n      // if we are not in document, no need to check\n      // for transitions\n      if (!inDocument) withTransition = false;\n      var self = this;\n      var realCb = function realCb() {\n        if (inDocument) self._callHook('detached');\n        if (cb) cb();\n      };\n      if (this._isFragment) {\n        removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n      } else {\n        var op = withTransition === false ? removeWithCb : removeWithTransition;\n        op(this.$el, this, realCb);\n      }\n      return this;\n    };\n\n    /**\n     * Shared DOM insertion function.\n     *\n     * @param {Vue} vm\n     * @param {Element} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition]\n     * @param {Function} op1 - op for non-transition insert\n     * @param {Function} op2 - op for transition insert\n     * @return vm\n     */\n\n    function insert(vm, target, cb, withTransition, op1, op2) {\n      target = query(target);\n      var targetIsDetached = !inDoc(target);\n      var op = withTransition === false || targetIsDetached ? op1 : op2;\n      var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n      if (vm._isFragment) {\n        mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n          op(node, target, vm);\n        });\n        cb && cb();\n      } else {\n        op(vm.$el, target, vm, cb);\n      }\n      if (shouldCallHook) {\n        vm._callHook('attached');\n      }\n      return vm;\n    }\n\n    /**\n     * Check for selectors\n     *\n     * @param {String|Element} el\n     */\n\n    function query(el) {\n      return typeof el === 'string' ? document.querySelector(el) : el;\n    }\n\n    /**\n     * Append operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function append(el, target, vm, cb) {\n      target.appendChild(el);\n      if (cb) cb();\n    }\n\n    /**\n     * InsertBefore operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function beforeWithCb(el, target, vm, cb) {\n      before(el, target);\n      if (cb) cb();\n    }\n\n    /**\n     * Remove operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function removeWithCb(el, vm, cb) {\n      remove(el);\n      if (cb) cb();\n    }\n  }\n\n  function eventsAPI (Vue) {\n\n    /**\n     * Listen on the given `event` with `fn`.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$on = function (event, fn) {\n      (this._events[event] || (this._events[event] = [])).push(fn);\n      modifyListenerCount(this, event, 1);\n      return this;\n    };\n\n    /**\n     * Adds an `event` listener that will be invoked a single\n     * time then automatically removed.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$once = function (event, fn) {\n      var self = this;\n      function on() {\n        self.$off(event, on);\n        fn.apply(this, arguments);\n      }\n      on.fn = fn;\n      this.$on(event, on);\n      return this;\n    };\n\n    /**\n     * Remove the given callback for `event` or all\n     * registered callbacks.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$off = function (event, fn) {\n      var cbs;\n      // all\n      if (!arguments.length) {\n        if (this.$parent) {\n          for (event in this._events) {\n            cbs = this._events[event];\n            if (cbs) {\n              modifyListenerCount(this, event, -cbs.length);\n            }\n          }\n        }\n        this._events = {};\n        return this;\n      }\n      // specific event\n      cbs = this._events[event];\n      if (!cbs) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        modifyListenerCount(this, event, -cbs.length);\n        this._events[event] = null;\n        return this;\n      }\n      // specific handler\n      var cb;\n      var i = cbs.length;\n      while (i--) {\n        cb = cbs[i];\n        if (cb === fn || cb.fn === fn) {\n          modifyListenerCount(this, event, -1);\n          cbs.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Trigger an event on self.\n     *\n     * @param {String} event\n     * @return {Boolean} shouldPropagate\n     */\n\n    Vue.prototype.$emit = function (event) {\n      var cbs = this._events[event];\n      var shouldPropagate = !cbs;\n      if (cbs) {\n        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n        var args = toArray(arguments, 1);\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          var res = cbs[i].apply(this, args);\n          if (res === true) {\n            shouldPropagate = true;\n          }\n        }\n      }\n      return shouldPropagate;\n    };\n\n    /**\n     * Recursively broadcast an event to all children instances.\n     *\n     * @param {String} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$broadcast = function (event) {\n      // if no child has registered for this event,\n      // then there's no need to broadcast.\n      if (!this._eventsCount[event]) return;\n      var children = this.$children;\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        var shouldPropagate = child.$emit.apply(child, arguments);\n        if (shouldPropagate) {\n          child.$broadcast.apply(child, arguments);\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Recursively propagate an event up the parent chain.\n     *\n     * @param {String} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$dispatch = function () {\n      this.$emit.apply(this, arguments);\n      var parent = this.$parent;\n      while (parent) {\n        var shouldPropagate = parent.$emit.apply(parent, arguments);\n        parent = shouldPropagate ? parent.$parent : null;\n      }\n      return this;\n    };\n\n    /**\n     * Modify the listener counts on all parents.\n     * This bookkeeping allows $broadcast to return early when\n     * no child has listened to a certain event.\n     *\n     * @param {Vue} vm\n     * @param {String} event\n     * @param {Number} count\n     */\n\n    var hookRE = /^hook:/;\n    function modifyListenerCount(vm, event, count) {\n      var parent = vm.$parent;\n      // hooks do not get broadcasted so no need\n      // to do bookkeeping for them\n      if (!parent || !count || hookRE.test(event)) return;\n      while (parent) {\n        parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n        parent = parent.$parent;\n      }\n    }\n  }\n\n  function lifecycleAPI (Vue) {\n\n    /**\n     * Set instance target element and kick off the compilation\n     * process. The passed in `el` can be a selector string, an\n     * existing Element, or a DocumentFragment (for block\n     * instances).\n     *\n     * @param {Element|DocumentFragment|string} el\n     * @public\n     */\n\n    Vue.prototype.$mount = function (el) {\n      if (this._isCompiled) {\n        'development' !== 'production' && warn('$mount() should be called only once.');\n        return;\n      }\n      el = query(el);\n      if (!el) {\n        el = document.createElement('div');\n      }\n      this._compile(el);\n      this._initDOMHooks();\n      if (inDoc(this.$el)) {\n        this._callHook('attached');\n        ready.call(this);\n      } else {\n        this.$once('hook:attached', ready);\n      }\n      return this;\n    };\n\n    /**\n     * Mark an instance as ready.\n     */\n\n    function ready() {\n      this._isAttached = true;\n      this._isReady = true;\n      this._callHook('ready');\n    }\n\n    /**\n     * Teardown the instance, simply delegate to the internal\n     * _destroy.\n     */\n\n    Vue.prototype.$destroy = function (remove, deferCleanup) {\n      this._destroy(remove, deferCleanup);\n    };\n\n    /**\n     * Partially compile a piece of DOM and return a\n     * decompile function.\n     *\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host]\n     * @return {Function}\n     */\n\n    Vue.prototype.$compile = function (el, host, scope, frag) {\n      return compile(el, this.$options, true)(this, el, host, scope, frag);\n    };\n  }\n\n  /**\n   * The exposed Vue constructor.\n   *\n   * API conventions:\n   * - public API methods/properties are prefixed with `$`\n   * - internal methods/properties are prefixed with `_`\n   * - non-prefixed properties are assumed to be proxied user\n   *   data.\n   *\n   * @constructor\n   * @param {Object} [options]\n   * @public\n   */\n\n  function Vue(options) {\n    this._init(options);\n  }\n\n  // install internals\n  initMixin(Vue);\n  stateMixin(Vue);\n  eventsMixin(Vue);\n  lifecycleMixin(Vue);\n  miscMixin(Vue);\n\n  // install APIs\n  globalAPI(Vue);\n  dataAPI(Vue);\n  domAPI(Vue);\n  eventsAPI(Vue);\n  lifecycleAPI(Vue);\n\n  var convertArray = vFor._postProcess;\n\n  /**\n   * Limit filter for arrays\n   *\n   * @param {Number} n\n   * @param {Number} offset (Decimal expected)\n   */\n\n  function limitBy(arr, n, offset) {\n    offset = offset ? parseInt(offset, 10) : 0;\n    return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String} search\n   * @param {String} [delimiter]\n   * @param {String} ...dataKeys\n   */\n\n  function filterBy(arr, search, delimiter) {\n    arr = convertArray(arr);\n    if (search == null) {\n      return arr;\n    }\n    if (typeof search === 'function') {\n      return arr.filter(search);\n    }\n    // cast to lowercase string\n    search = ('' + search).toLowerCase();\n    // allow optional `in` delimiter\n    // because why not\n    var n = delimiter === 'in' ? 3 : 2;\n    // extract and flatten keys\n    var keys = toArray(arguments, n).reduce(function (prev, cur) {\n      return prev.concat(cur);\n    }, []);\n    var res = [];\n    var item, key, val, j;\n    for (var i = 0, l = arr.length; i < l; i++) {\n      item = arr[i];\n      val = item && item.$value || item;\n      j = keys.length;\n      if (j) {\n        while (j--) {\n          key = keys[j];\n          if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n            res.push(item);\n            break;\n          }\n        }\n      } else if (contains(item, search)) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String} sortKey\n   * @param {String} reverse\n   */\n\n  function orderBy(arr, sortKey, reverse) {\n    arr = convertArray(arr);\n    if (!sortKey) {\n      return arr;\n    }\n    var order = reverse && reverse < 0 ? -1 : 1;\n    // sort on a copy to avoid mutating original array\n    return arr.slice().sort(function (a, b) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n      return a === b ? 0 : a > b ? order : -order;\n    });\n  }\n\n  /**\n   * String contain helper\n   *\n   * @param {*} val\n   * @param {String} search\n   */\n\n  function contains(val, search) {\n    var i;\n    if (isPlainObject(val)) {\n      var keys = Object.keys(val);\n      i = keys.length;\n      while (i--) {\n        if (contains(val[keys[i]], search)) {\n          return true;\n        }\n      }\n    } else if (isArray(val)) {\n      i = val.length;\n      while (i--) {\n        if (contains(val[i], search)) {\n          return true;\n        }\n      }\n    } else if (val != null) {\n      return val.toString().toLowerCase().indexOf(search) > -1;\n    }\n  }\n\n  var digitsRE = /(\\d{3})(?=\\d)/g;\n\n  // asset collections must be a plain object.\n  var filters = {\n\n    orderBy: orderBy,\n    filterBy: filterBy,\n    limitBy: limitBy,\n\n    /**\n     * Stringify value.\n     *\n     * @param {Number} indent\n     */\n\n    json: {\n      read: function read(value, indent) {\n        return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n      },\n      write: function write(value) {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return value;\n        }\n      }\n    },\n\n    /**\n     * 'abc' => 'Abc'\n     */\n\n    capitalize: function capitalize(value) {\n      if (!value && value !== 0) return '';\n      value = value.toString();\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    },\n\n    /**\n     * 'abc' => 'ABC'\n     */\n\n    uppercase: function uppercase(value) {\n      return value || value === 0 ? value.toString().toUpperCase() : '';\n    },\n\n    /**\n     * 'AbC' => 'abc'\n     */\n\n    lowercase: function lowercase(value) {\n      return value || value === 0 ? value.toString().toLowerCase() : '';\n    },\n\n    /**\n     * 12345 => $12,345.00\n     *\n     * @param {String} sign\n     */\n\n    currency: function currency(value, _currency) {\n      value = parseFloat(value);\n      if (!isFinite(value) || !value && value !== 0) return '';\n      _currency = _currency != null ? _currency : '$';\n      var stringified = Math.abs(value).toFixed(2);\n      var _int = stringified.slice(0, -3);\n      var i = _int.length % 3;\n      var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n      var _float = stringified.slice(-3);\n      var sign = value < 0 ? '-' : '';\n      return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n    },\n\n    /**\n     * 'item' => 'items'\n     *\n     * @params\n     *  an array of strings corresponding to\n     *  the single, double, triple ... forms of the word to\n     *  be pluralized. When the number to be pluralized\n     *  exceeds the length of the args, it will use the last\n     *  entry in the array.\n     *\n     *  e.g. ['single', 'double', 'triple', 'multiple']\n     */\n\n    pluralize: function pluralize(value) {\n      var args = toArray(arguments, 1);\n      return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n    },\n\n    /**\n     * Debounce a handler function.\n     *\n     * @param {Function} handler\n     * @param {Number} delay = 300\n     * @return {Function}\n     */\n\n    debounce: function debounce(handler, delay) {\n      if (!handler) return;\n      if (!delay) {\n        delay = 300;\n      }\n      return _debounce(handler, delay);\n    }\n  };\n\n  var partial = {\n\n    priority: PARTIAL,\n\n    params: ['name'],\n\n    // watch changes to name for dynamic partials\n    paramWatchers: {\n      name: function name(value) {\n        vIf.remove.call(this);\n        if (value) {\n          this.insert(value);\n        }\n      }\n    },\n\n    bind: function bind() {\n      this.anchor = createAnchor('v-partial');\n      replace(this.el, this.anchor);\n      this.insert(this.params.name);\n    },\n\n    insert: function insert(id) {\n      var partial = resolveAsset(this.vm.$options, 'partials', id);\n      if ('development' !== 'production') {\n        assertAsset(partial, 'partial', id);\n      }\n      if (partial) {\n        this.factory = new FragmentFactory(this.vm, partial);\n        vIf.insert.call(this);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n    }\n  };\n\n  // This is the elementDirective that handles <content>\n  // transclusions. It relies on the raw content of an\n  // instance being stored as `$options._content` during\n  // the transclude phase.\n\n  // We are exporting two versions, one for named and one\n  // for unnamed, because the unnamed slots must be compiled\n  // AFTER all named slots have selected their content. So\n  // we need to give them different priorities in the compilation\n  // process. (See #1965)\n\n  var slot = {\n\n    priority: SLOT,\n\n    bind: function bind() {\n      var host = this.vm;\n      var raw = host.$options._content;\n      if (!raw) {\n        this.fallback();\n        return;\n      }\n      var context = host._context;\n      var slotName = this.params && this.params.name;\n      if (!slotName) {\n        // Default slot\n        this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n      } else {\n        // Named slot\n        var selector = '[slot=\"' + slotName + '\"]';\n        var nodes = raw.querySelectorAll(selector);\n        if (nodes.length) {\n          this.tryCompile(extractFragment(nodes, raw), context, host);\n        } else {\n          this.fallback();\n        }\n      }\n    },\n\n    tryCompile: function tryCompile(content, context, host) {\n      if (content.hasChildNodes()) {\n        this.compile(content, context, host);\n      } else {\n        this.fallback();\n      }\n    },\n\n    compile: function compile(content, context, host) {\n      if (content && context) {\n        var scope = host ? host._scope : this._scope;\n        this.unlink = context.$compile(content, host, scope, this._frag);\n      }\n      if (content) {\n        replace(this.el, content);\n      } else {\n        remove(this.el);\n      }\n    },\n\n    fallback: function fallback() {\n      this.compile(extractContent(this.el, true), this.vm);\n    },\n\n    unbind: function unbind() {\n      if (this.unlink) {\n        this.unlink();\n      }\n    }\n  };\n\n  var namedSlot = extend(extend({}, slot), {\n    priority: slot.priority + 1,\n    params: ['name']\n  });\n\n  /**\n   * Extract qualified content nodes from a node list.\n   *\n   * @param {NodeList} nodes\n   * @param {Element} parent\n   * @param {Boolean} main\n   * @return {DocumentFragment}\n   */\n\n  function extractFragment(nodes, parent, main) {\n    var frag = document.createDocumentFragment();\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      var node = nodes[i];\n      // if this is the main outlet, we want to skip all\n      // previously selected nodes;\n      // otherwise, we want to mark the node as selected.\n      // clone the node so the original raw content remains\n      // intact. this ensures proper re-compilation in cases\n      // where the outlet is inside a conditional block\n      if (main && !node.__v_selected) {\n        append(node);\n      } else if (!main && node.parentNode === parent) {\n        node.__v_selected = true;\n        append(node);\n      }\n    }\n    return frag;\n\n    function append(node) {\n      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n        node = parseTemplate(node);\n      }\n      node = cloneNode(node);\n      frag.appendChild(node);\n    }\n  }\n\n  var elementDirectives = {\n    slot: slot,\n    _namedSlot: namedSlot, // same as slot but with higher priority\n    partial: partial\n  };\n\n  Vue.version = '1.0.13';\n\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: publicDirectives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  // devtools global hook\n  /* istanbul ignore if */\n  if ('development' !== 'production' && inBrowser) {\n    if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n      window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('init', Vue);\n    } else if (/Chrome\\/\\d+/.test(navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n\n  return Vue;\n\n}));\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/vue.js\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./test.vue\")\n__vue_script__ = require(\"!!babel!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./test.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./test.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/test.vue\n ** module id = 3\n ** module chunks = 0\n **/","<style>\r\n\tbody{\r\n\t\tcolor:#ddd;\r\n\t\th2{color:#ff0;}\r\n\t}\r\n</style>\r\n\r\n<template>\r\n\t<div class=\"my-component\">\r\n\t\t<h2 v-on:click=\"test\">{{msg}}</h2>\r\n\t\t<input v-model=\"msg\">\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\r\nrequire('../less/main.less');\r\n\r\nimport cartList from '../data/product.json';\r\n\r\nconsole.log(cartList);\r\n\r\nexport default {\r\n\tdata () {\r\n\t\treturn {\r\n\t\t\tmsg: 'Hellow Vue Component'\r\n\t\t}\r\n\t},\r\n    methods: {\r\n        test (){\r\n        \talert(this.msg);\r\n        }\r\n    }\r\n} \r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** test.vue?43f43071\n **/","module.exports = {\n\t\"goods\": [\n\t\t{\n\t\t\t\"cart_id\": \"59003907\",\n\t\t\t\"goods_id\": \"451001\",\n\t\t\t\"title\": \"Casual Scoop Neck Floral Print Hollow Out Dress For Women\",\n\t\t\t\"market_price\": \"16.85\",\n\t\t\t\"goods_price\": \"10.33\",\n\t\t\t\"goods_number\": 20,\n\t\t\t\"goods_attr\": \"Size:M Color: COLORMIX\",\n\t\t\t\"goods_off\": 39,\n\t\t\t\"is_checked\": false,\n\t\t\t\"is_collect\": false,\n\t\t\t\"is_presale\": true,\n\t\t\t\"subtotal\": \"20.66\",\n\t\t\t\"img\": \"http://gloimg.rosegal.com/rosegal/pdm-product-pic/Clothing/2016/05/11/grid-img/1462913545923970764.jpg\",\n\t\t\t\"url\": \"http://www.rosegal.com/casual-dresses/casual-scoop-neck-floral-print-451001.html\"\n\t\t},\n\t\t{\n\t\t\t\"cart_id\": \"58933347\",\n\t\t\t\"goods_id\": \"469331\",\n\t\t\t\"title\": \"Stylish Rhinestone and Fishbone Design Sandals For Women\",\n\t\t\t\"market_price\": \"53.35\",\n\t\t\t\"goods_price\": \"22.22\",\n\t\t\t\"goods_number\": 10,\n\t\t\t\"goods_attr\": \"Size:38 Color: PINK\",\n\t\t\t\"goods_off\": 58,\n\t\t\t\"is_checked\": false,\n\t\t\t\"is_collect\": true,\n\t\t\t\"is_presale\": false,\n\t\t\t\"subtotal\": \"44.44\",\n\t\t\t\"img\": \"http://gloimg.rosegal.com/rosegal/pdm-product-pic/Clothing/2016/03/31/grid-img/1463358613445438700.jpg\",\n\t\t\t\"url\": \"http://www.rosegal.com/sandals/stylish-rhinestone-and-fishbone-design-sandals-for-women-469331.html\"\n\t\t}\n\t],\n\t\"total\": {\n\t\t\"goods_price\": \"65.10\"\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/data/product.json\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = \" <div class=my-component> <h2 v-on:click=test>{{msg}}</h2> <input v-model=msg> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/test.vue\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}